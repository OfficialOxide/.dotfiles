2022-03-25 13:51:11	→	oxide has joined #python
2022-03-25 13:51:11	ℹ	Topic for #python is "Anything Python is on-topic. | Don't paste, use https://bpa.st/+python | Questions about this channel? https://www.pound-python.org | CoC: https://j.mp/psf-coc | Tutorial: https://j.mp/PyTut | New programmer? https://j.mp/23X7emF | Ops: #python-ops"
2022-03-25 13:51:11	ℹ	Topic set by nedbat (~nedbat@python/psf/nedbat) on Sat, 18 Sep 2021 03:27:50
2022-03-25 13:51:11	ℹ	Channel #python: 1558 nicks (1 op, 0 voices, 1557 normals)
2022-03-25 13:51:19	ℹ	Channel created on Wed, 19 May 2021 19:20:29
2022-03-25 13:51:46	←	kaiseisei has quit (Quit: kaiseisei)
2022-03-25 13:52:22	→	Guest57 has joined #python
2022-03-25 13:52:28	→	kaiseisei has joined #python
2022-03-25 13:52:51	Guest57	hello
2022-03-25 13:52:52	→	soju-test-user has joined #python
2022-03-25 13:53:11	←	km has quit (Quit: ZNC - https://znc.in)
2022-03-25 13:53:11	Guest57	have one ?
2022-03-25 13:53:13	Feriun	Guest57: Hey there
2022-03-25 13:53:46	Guest57	How rare
2022-03-25 13:53:54	→	foobaz212 has joined #python
2022-03-25 13:54:09	Guest57	Do you all know Python
2022-03-25 13:54:24	Guest57	I have some functions THAT I can't write
2022-03-25 13:54:26	←	ghost43 has quit (Remote host closed the connection)
2022-03-25 13:54:26	Feriun	Well it depends what you mean by that
2022-03-25 13:54:53	←	merijn has quit (Ping timeout: 240 seconds)
2022-03-25 13:54:54	Feriun	Ask your question, There are plenty of people here
2022-03-25 13:55:06	Guest57	It's like getting 7 sets of data from a database, but I only have one keyword
2022-03-25 13:55:11	→	ghost43 has joined #python
2022-03-25 13:55:40	Guest57	And then I get six sets of data from one word, which I can do with one word, but I can't do with another word
2022-03-25 13:56:10	Guest57	I can only make data based on this word set, but I have a lot of other words
2022-03-25 13:56:50	→	MikZyth has joined #python
2022-03-25 13:57:25	←	hams has quit (Ping timeout: 272 seconds)
2022-03-25 13:57:26	→	pycurious has joined #python
2022-03-25 13:57:28	oxide	hi, i'm writing a method to remove an element from a binary search tree and i've hit a wall when removing a leaf node: https://bpa.st/RCXQ (line 47 is the relevant one) 
2022-03-25 13:58:31	←	johnkeats6 has quit (Ping timeout: 260 seconds)
2022-03-25 13:58:32	dkdn	don't use recursion, for starters
2022-03-25 13:58:58	←	foobaz212 has quit (Ping timeout: 256 seconds)
2022-03-25 13:59:05	→	km has joined #python
2022-03-25 13:59:13	deltab	oxide: subtree is just a local variable: assigning to it won't change anything in the data structure
2022-03-25 13:59:16	←	zitter has quit (Quit: Leaving)
2022-03-25 13:59:29	oxide	yes, that's the problem
2022-03-25 13:59:35	→	VoidSync has joined #python
2022-03-25 13:59:36	←	km has quit (Remote host closed the connection)
2022-03-25 13:59:37	oxide	i can't directly mutate self.rooted_at_arg(x)
2022-03-25 14:00:09	→	switcher has joined #python
2022-03-25 14:00:28	←	SallyAhaj has quit (Quit: SallyAhaj)
2022-03-25 14:00:55	→	widp has joined #python
2022-03-25 14:01:25	→	switcher61 has joined #python
2022-03-25 14:01:27	→	ivii has joined #python
2022-03-25 14:01:48	deltab	I note the other cases change subtree.root
2022-03-25 14:02:02	→	SallyAhaj has joined #python
2022-03-25 14:02:09	←	teroshan has quit (Quit: Ping timeout (120 seconds))
2022-03-25 14:02:16	←	pycurious has quit (Ping timeout: 260 seconds)
2022-03-25 14:02:21	oxide	yeah
2022-03-25 14:02:22	←	ShitbirdGrimshaw has quit (Read error: Connection reset by peer)
2022-03-25 14:02:28	→	teroshan has joined #python
2022-03-25 14:02:30	oxide	but in the other cases, there are left or right children
2022-03-25 14:02:46	→	argument has joined #python
2022-03-25 14:02:47	←	argument has quit (Changing host)
2022-03-25 14:02:47	→	argument has joined #python
2022-03-25 14:02:47	←	white2 has quit (Read error: Connection reset by peer)
2022-03-25 14:02:50	→	ShitbirdGrimshaw has joined #python
2022-03-25 14:02:50	oxide	if there are none, then the entire subtree should be changed to None, not None: [None, None]
2022-03-25 14:03:04	→	white2 has joined #python
2022-03-25 14:03:09	←	dgavrilov has quit (Quit: ZNC - https://znc.in)
2022-03-25 14:03:11	←	libussa has quit (Quit: quit)
2022-03-25 14:03:12	oxide	by the latter notation i mean the root None with two children None
2022-03-25 14:03:18	switcher61	Hi there. I've some time ago written a small package that lets me work with EE values. It basically inherits floats and then overloads all the algebraic operators. The overloading stuff was a bit of copy paste, and I don't fully understand it. This is now a problem, as I want to tweak it a bit, and the stuff I want to tweak is for sure in there.
2022-03-25 14:03:20	switcher61	https://github.com/Duckle29/EEValue/blob/main/src/eevalue/eevalue.py#L118
2022-03-25 14:03:24	→	dgavrilov has joined #python
2022-03-25 14:03:25	→	libussa has joined #python
2022-03-25 14:03:33	←	matthewcroughan has quit (Remote host closed the connection)
2022-03-25 14:03:52	←	bitblit has quit (Ping timeout: 240 seconds)
2022-03-25 14:03:52	→	matthewcroughan has joined #python
2022-03-25 14:04:06	deltab	Guest57: hi, not ignoring you, just not clear on what you mean
2022-03-25 14:04:08	switcher61	basically, if I make an EEValue with non-default precision, and then do any algebraic function, it will make a new object with the default precision of 2, how do I get the overloads to carry over the highest precision?
2022-03-25 14:05:45	←	switcher has quit (Ping timeout: 256 seconds)
2022-03-25 14:05:45	←	mon_aaraj has quit (Ping timeout: 256 seconds)
2022-03-25 14:05:58	→	bitblit has joined #python
2022-03-25 14:05:59	←	skapata has quit (Remote host closed the connection)
2022-03-25 14:06:21	→	Mikro has joined #python
2022-03-25 14:06:40	←	odinsbane has left #python
2022-03-25 14:06:45	→	odinsbane has joined #python
2022-03-25 14:06:52	→	km has joined #python
2022-03-25 14:07:32	switcher61	as far as I understand it, res = super(EEValue, cls).__add__(other) means that for EEV(1) + 2, take float(1).__add__(2), giving me a float of 3, then return cls.__class__(res) is the same as return EEValue(res) ?
2022-03-25 14:07:40	→	mon_aaraj has joined #python
2022-03-25 14:07:41	←	dkdn has quit (Quit: Client closed)
2022-03-25 14:07:52	→	dkdn has joined #python
2022-03-25 14:07:58	←	Guest57 has quit (Quit: Client closed)
2022-03-25 14:10:27	deltab	oxide: what's the change you need to make to the tree to remove the leaf node?
2022-03-25 14:10:52	←	Feriun has quit (Quit: WeeChat 3.4.1)
2022-03-25 14:12:36	←	Bogomilist has quit (Quit: Client closed)
2022-03-25 14:12:46	oxide	e.g. 4: [1: [None, None], 5: [None,None]] should become 4: [None, 5: [None, None]] if i remove 1 
2022-03-25 14:13:04	oxide	if i just change the root, it'll  be 4: [None: [None, None], 5: [None, None]]
2022-03-25 14:13:48	←	carl-- has quit (Quit: Leaving)
2022-03-25 14:14:38	→	pycurious has joined #python
2022-03-25 14:14:53	deltab	right, so what should you change instead?
2022-03-25 14:15:59	←	Gustavo6046 has quit (Remote host closed the connection)
2022-03-25 14:16:02	oxide	the parent node i think
2022-03-25 14:16:16	→	Gustavo6046 has joined #python
2022-03-25 14:16:22	deltab	switcher61: 'self' is the usual name for the first parameter to an instance method; it's not a class, so 'cls' is a misleading name
2022-03-25 14:16:38	→	nuclearg1 has joined #python
2022-03-25 14:16:42	deltab	oxide: right, so youll need to keep track of that to be able to change it
2022-03-25 14:16:50	→	otisolsen70 has joined #python
2022-03-25 14:17:25	deltab	oxide: or a way of getting from a node to its parent
2022-03-25 14:17:27	→	PJBoy has joined #python
2022-03-25 14:17:45	oxide	well, is there a way of doing that without adding another instance variable
2022-03-25 14:18:27	deltab	I'm not sure
2022-03-25 14:19:04	deltab	you could keep track of it while traversing down the tree
2022-03-25 14:19:10	oxide	hmm, alright
2022-03-25 14:19:12	oxide	i'll try that
2022-03-25 14:19:14	→	flower_ has joined #python
2022-03-25 14:19:34	←	schumaml has quit (Ping timeout: 272 seconds)
2022-03-25 14:19:45	←	mtk has quit (Ping timeout: 240 seconds)
2022-03-25 14:20:55	→	nemexis has joined #python
2022-03-25 14:20:57	→	schumaml has joined #python
2022-03-25 14:21:04	←	dkdn has quit (Ping timeout: 256 seconds)
2022-03-25 14:21:41	←	NeilRG has quit (Remote host closed the connection)
2022-03-25 14:21:46	←	zaquest has quit (Remote host closed the connection)
2022-03-25 14:22:04	deltab	switcher61: yes, I think you understand it correctly
2022-03-25 14:22:07	←	nuclearg1 has quit (Ping timeout: 272 seconds)
2022-03-25 14:22:37	→	medecau has joined #python
2022-03-25 14:22:50	→	merijn has joined #python
2022-03-25 14:23:09	→	millie290 has joined #python
2022-03-25 14:23:13	→	dkdn has joined #python
2022-03-25 14:23:28	←	kaiseisei has quit (Remote host closed the connection)
2022-03-25 14:23:34	millie290	how do I write a list comprehension for this code? https://bpa.st/5WSQ
2022-03-25 14:23:55	→	zaquest has joined #python
2022-03-25 14:24:19	←	odinsbane has quit (Remote host closed the connection)
2022-03-25 14:24:45	flower_	how can I get my python app to find this file after it is installed as a wheel file with pip?
2022-03-25 14:24:48	flower_	carla-jack-multi
2022-03-25 14:24:54	flower_	err
2022-03-25 14:25:15	flower_	2 # create logger
2022-03-25 14:25:16	deniska	millie290: you can replace a loop with .append() inside with .extend()
2022-03-25 14:25:34	flower_	logging.config.fileConfig('logging.conf')
2022-03-25 14:25:42	→	moog_ has joined #python
2022-03-25 14:25:44	←	Lando-HoloNet has quit (Ping timeout: 252 seconds)
2022-03-25 14:25:48	deniska	millie290: While you can nest comprehensions, I typically suggest not to because it's not too readable
2022-03-25 14:26:06	deltab	millie290: move the expression in the append call to the start, and remove the colons: [v for value in valid_prefix.values() for v in value]
2022-03-25 14:26:38	flower_	I've logging.conf in MANIFEST.in. I can't get it included when the logging.conf file is in the root file next to setup.cfg, but it works when I put it in src/config/logging.conf
2022-03-25 14:26:52	flower_	But the installed application can't find it, it seems
2022-03-25 14:27:40	millie290	Thank you
2022-03-25 14:27:55	←	kts has quit (Quit: Konversation terminated!)
2022-03-25 14:28:09	←	moog__ has quit (Ping timeout: 240 seconds)
2022-03-25 14:28:11	→	sawk has joined #python
2022-03-25 14:28:48	→	LucaTM has joined #python
2022-03-25 14:28:58	deltab	I agree about it not being too readable though
2022-03-25 14:29:08	→	bahamas has joined #python
2022-03-25 14:29:27	←	widp has quit (Ping timeout: 245 seconds)
2022-03-25 14:29:50	flower_	logging.config.fileConfig('config/logging.conf')
2022-03-25 14:29:58	←	km has quit (Remote host closed the connection)
2022-03-25 14:30:00	flower_	you would think, but that doesn't work
2022-03-25 14:30:07	←	medecau has quit (Quit: medecau)
2022-03-25 14:30:25	→	AquaL1te has joined #python
2022-03-25 14:30:33	←	merijn has quit (Ping timeout: 240 seconds)
2022-03-25 14:30:45	ℹ	dcaro_away is now known as dcaro
2022-03-25 14:30:52	←	rustyshackleford has quit (Quit: Connection closed for inactivity)
2022-03-25 14:31:44	→	km has joined #python
2022-03-25 14:32:20	←	sawk has quit (Client Quit)
2022-03-25 14:32:30	→	sawk has joined #python
2022-03-25 14:32:38	→	reset has joined #python
2022-03-25 14:32:48	←	sawk has quit (Client Quit)
2022-03-25 14:34:40	→	nuclearg1 has joined #python
2022-03-25 14:35:05	flower_	https://paste.debian.net/1235520/  This is the error I got. I suspect that it doesn't find the file.
2022-03-25 14:35:28	switcher61	deltab Gotcha, yeah I should probably rename them to self at some point
2022-03-25 14:36:15	→	dvx has joined #python
2022-03-25 14:36:21	←	jpic has quit (Ping timeout: 256 seconds)
2022-03-25 14:36:24	switcher61	deltab would I be able to then do: return self.__class__(res, self.precision) to carry over the precision?
2022-03-25 14:37:15	←	roxfan has quit (Ping timeout: 260 seconds)
2022-03-25 14:37:44	mickey	i have a list and i need to loop through every combination of the items (order doesnt matter), e.g. for [1,2,3] i need to loop through [[1], [1,2], [1,2,3], [2], [2,3], [3]] (maybe i missed something)
2022-03-25 14:37:50	mickey	whats a good approach to achieve that?
2022-03-25 14:38:12	→	OP-0 has joined #python
2022-03-25 14:38:14	→	jpic has joined #python
2022-03-25 14:38:45	mickey	i found itertools.combinations but i wonder if there's a better way
2022-03-25 14:38:56	←	nuclearg1 has quit (Ping timeout: 252 seconds)
2022-03-25 14:39:10	deltab	mickey: []? [1, 3]?
2022-03-25 14:39:25	flower_	How do I include a logging.conf file in a python package and how does my app find it, when installed?
2022-03-25 14:39:27	mickey	not [] but yeah, [1,3] too
2022-03-25 14:39:59	→	jpn has joined #python
2022-03-25 14:40:04	deltab	mickey: for a set of n items, its powerset contains 2^n sets
2022-03-25 14:40:22	deltab	so you'd have 8 sets
2022-03-25 14:40:24	mickey	im not looking for the number of combinations. i need the combinations themselves to loop through
2022-03-25 14:40:43	deltab	right just pointing how you can check you've got them all :-)
2022-03-25 14:40:58	←	Asgaroth has quit (Read error: Connection reset by peer)
2022-03-25 14:41:13	←	ApostleInTriumph has quit (Quit: Client closed)
2022-03-25 14:42:46	←	ghost43 has quit (Remote host closed the connection)
2022-03-25 14:42:49	→	ghost43_ has joined #python
2022-03-25 14:42:54	mickey	itertools.combinations just gives me the combinations of n length, so if it's for 2, then [1,2], [2,3], [1,3], but i need all lengths :/
2022-03-25 14:43:05	→	zen_coder has joined #python
2022-03-25 14:43:45	mickey	i could wrap that in another loop for range(len(list)), but..
2022-03-25 14:44:21	deltab	yeah, then chanin them
2022-03-25 14:44:24	deltab	chain
2022-03-25 14:44:46	deltab	chain.from_iterable(combinations(s, r) for r in range(1, len(s)+1))
2022-03-25 14:44:52	←	bahamas has quit (Ping timeout: 245 seconds)
2022-03-25 14:45:06	←	acidsys has quit (Excess Flood)
2022-03-25 14:45:40	→	acidsys has joined #python
2022-03-25 14:45:42	←	acidsys has quit (Excess Flood)
2022-03-25 14:46:20	→	acidsys has joined #python
2022-03-25 14:46:31	←	gusto has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-03-25 14:46:41	mickey	cool thanks
2022-03-25 14:46:55	→	oaulakh has joined #python
2022-03-25 14:46:58	→	dante-as has joined #python
2022-03-25 14:47:58	deltab	not sure about why the +1 was there
2022-03-25 14:48:32	oaulakh	can anyone explain why i'm getting this traceback with just simple code. Traceback: https://bpa.st/EOAA , Code: https://bpa.st/74ZA
2022-03-25 14:48:37	switcher61	deltab: Okay this works:)  https://bpa.st/3U4Q
2022-03-25 14:48:50	←	jpn has quit (Ping timeout: 252 seconds)
2022-03-25 14:48:58	switcher61	now, to copy paste this same exact code over every arithmetic overload :/
2022-03-25 14:49:19	←	ghost43_ has quit (Remote host closed the connection)
2022-03-25 14:49:24	switcher61	I think i should look into making a generic function and just pass the __<arith>__ functions
2022-03-25 14:49:49	→	gulzar has joined #python
2022-03-25 14:49:54	→	menace has joined #python
2022-03-25 14:49:54	←	menace has quit (Changing host)
2022-03-25 14:49:54	→	menace has joined #python
2022-03-25 14:50:08	ℹ	menace is now known as Deknos
2022-03-25 14:50:10	deltab	switcher61: I suspect it'll need to be different depending on the operation
2022-03-25 14:50:31	←	dkdn has quit (Quit: Client closed)
2022-03-25 14:51:07	←	{4144} has quit (Ping timeout: 245 seconds)
2022-03-25 14:51:23	→	widp has joined #python
2022-03-25 14:51:36	ℹ	switcher61 is now known as switcher
2022-03-25 14:51:37	→	ghost43 has joined #python
2022-03-25 14:51:54	switcher	deltab Yeah I think I'll just keep the super stuff in the overloads, and then do the re-wrapping in a single function
2022-03-25 14:52:07	deltab	oaulakh: your module is named json, it's importing itself
2022-03-25 14:53:21	oaulakh	deltab, but docs https://docs.python.org/3/library/json.html
2022-03-25 14:53:44	deltab	oaulakh: your module is named json, so it overrides that
2022-03-25 14:54:07	→	Payam has joined #python
2022-03-25 14:54:21	oaulakh	ok ok sorry deltab i get it now :)
2022-03-25 14:54:31	millie290	What can I improve in this program? https://bpa.st/XI2Q
2022-03-25 14:54:46	→	blindguard has joined #python
2022-03-25 14:55:08	deltab	python looks for modules locally first before it looks in the libraries (with the usual sys.path setting)
2022-03-25 14:55:19	dante-as	Hi guys, I have defined a parameter as os.path.basename(__file__) which outputs the name of the file that is triggering. Here is an example: https://bpa.st/HOPA What I would need is to declare somehow the optional parameter to still get output test.py. Any idea how I can achieve that?
2022-03-25 14:55:43	→	marcello42 has joined #python
2022-03-25 14:55:49	→	a1eaiact1 has joined #python
2022-03-25 14:55:58	millie290	https://bpa.st/T5NQ is the updated link. My bad.
2022-03-25 14:56:18	→	xcombelle3 has joined #python
2022-03-25 14:56:29	←	diogenese has quit (Quit: Has anybody seen the bridge?)
2022-03-25 14:56:48	→	diogenese has joined #python
2022-03-25 14:56:52	→	shuck has joined #python
2022-03-25 14:57:05	←	Imk0tter has quit (Ping timeout: 252 seconds)
2022-03-25 14:57:34	→	jpn has joined #python
2022-03-25 14:57:35	←	mon_aaraj has quit (Ping timeout: 272 seconds)
2022-03-25 14:57:42	→	Imk0tter has joined #python
2022-03-25 14:58:41	→	kaiseisei has joined #python
2022-03-25 14:58:43	←	xcombelle has quit (Ping timeout: 252 seconds)
2022-03-25 14:59:02	→	mon_aaraj has joined #python
2022-03-25 14:59:41	→	bahamas has joined #python
2022-03-25 14:59:44	gulzar	Hi. This is my dictionary. https://bpa.st/KCPQ   . I need to sort it by timestamp. and keep it sorted . How can this be done
2022-03-25 15:00:15	→	slav0nic has joined #python
2022-03-25 15:00:40	→	NeilRG has joined #python
2022-03-25 15:00:41	NeilRG	test
2022-03-25 15:00:48	deltab	millie290: for name, prefixes in valid_prefix.items(): for prefix in prefixes: if card_number.startswith(prefix): return name
2022-03-25 15:01:09	→	Y4knotiS has joined #python
2022-03-25 15:01:24	←	ybonatakis has quit (Quit: WeeChat 3.4)
2022-03-25 15:01:31	→	merijn has joined #python
2022-03-25 15:01:44	NeilRG	test
2022-03-25 15:02:00	deltab	millie290: for name, prefixes in valid_prefix.items(): for prefix in prefixes: if card_number.startswith(prefix): break;; else: exit('INVALID')
2022-03-25 15:02:00	millie290	Okay
2022-03-25 15:02:32	←	widp has quit (Ping timeout: 240 seconds)
2022-03-25 15:04:15	←	bahamas has quit (Ping timeout: 250 seconds)
2022-03-25 15:04:19	→	{4144} has joined #python
2022-03-25 15:04:27	←	driib2 has quit (Quit: The Lounge - https://thelounge.chat)
2022-03-25 15:04:54	→	driib2 has joined #python
2022-03-25 15:04:56	deltab	sorry, that ";;" should be ";;;" in my not-recognised-by-python notation: the else coordinates with the for
2022-03-25 15:05:22	→	gevreeen has joined #python
2022-03-25 15:05:37	gevreeen	is there a way to preserve application state via python global variables in wsgi?
2022-03-25 15:05:43	←	argument has quit (Ping timeout: 260 seconds)
2022-03-25 15:06:13	gevreeen	when I defined a global variable i = 0, and later used it in the application callable, and the error log gave out unreferenced variable
2022-03-25 15:06:29	←	SallyAhaj has quit (Quit: SallyAhaj)
2022-03-25 15:07:00	gevreeen	ideally this would be a counter, to be incremented for each successful request
2022-03-25 15:07:38	→	mIk3_08 has joined #python
2022-03-25 15:08:08	millie290	deltab, I think I should return the card name instead of the break statement right?
2022-03-25 15:08:17	deltab	gevreeen: did you declare it global? if you don't, and you assign to it, it's local
2022-03-25 15:08:18	→	nuclearg1 has joined #python
2022-03-25 15:08:35	→	widp has joined #python
2022-03-25 15:08:40	gevreeen	right
2022-03-25 15:08:42	deltab	millie290: yes, if you put it in a function
2022-03-25 15:09:29	→	ThanatosJ has joined #python
2022-03-25 15:11:01	←	NeilRG has quit (Remote host closed the connection)
2022-03-25 15:11:18	→	dante-as39 has joined #python
2022-03-25 15:11:43	←	kclark has quit (Remote host closed the connection)
2022-03-25 15:11:48	←	OP-0 has quit (Ping timeout: 260 seconds)
2022-03-25 15:12:23	otisolsen70	I have to use pycharm on a restricted network. So I cannot reach python.org or pypi.org. How can I configure PyCharm to use a local pip mirror instead? I have made a local mirror on a local httpd.
2022-03-25 15:12:30	ℹ	a1eaiact1 is now known as a1eaiactaest
2022-03-25 15:12:38	←	dante-as has quit (Ping timeout: 256 seconds)
2022-03-25 15:12:57	←	nuclearg1 has quit (Ping timeout: 240 seconds)
2022-03-25 15:13:21	←	xcombelle3 has quit (Ping timeout: 240 seconds)
2022-03-25 15:13:35	←	xcombelle1 has quit (Ping timeout: 252 seconds)
2022-03-25 15:14:02	→	jpn_ has joined #python
2022-03-25 15:14:52	→	plastico has joined #python
2022-03-25 15:15:10	deltab	otisolsen70: this? https://stackoverflow.com/questions/32660777/how-do-i-get-pycharm-to-update-from-my-local-package-repository
2022-03-25 15:15:38	→	iob has joined #python
2022-03-25 15:15:44	→	kclark has joined #python
2022-03-25 15:15:48	←	pepper has quit (Quit: Leaving)
2022-03-25 15:16:17	otisolsen70	deltab, thanks!
2022-03-25 15:16:27	jinsun	you could make a config file for pip and set index-url there too probably https://pip.pypa.io/en/stable/topics/configuration/
2022-03-25 15:16:49	←	jpn has quit (Ping timeout: 250 seconds)
2022-03-25 15:16:53	←	esther has quit (Ping timeout: 240 seconds)
2022-03-25 15:17:09	←	pycurious has quit (Ping timeout: 256 seconds)
2022-03-25 15:17:09	←	Payam has quit (Quit: Client closed)
2022-03-25 15:17:41	←	mon_aaraj has quit (Ping timeout: 250 seconds)
2022-03-25 15:18:13	→	jmiehe has joined #python
2022-03-25 15:19:37	→	mon_aaraj has joined #python
2022-03-25 15:20:00	→	nyah has joined #python
2022-03-25 15:20:24	→	paul424 has joined #python
2022-03-25 15:21:09	←	shuck has quit (Ping timeout: 250 seconds)
2022-03-25 15:21:46	→	shuck has joined #python
2022-03-25 15:21:52	→	Giovanni has joined #python
2022-03-25 15:23:58	←	dante-as39 has quit (Ping timeout: 256 seconds)
2022-03-25 15:24:25	oxide	deltab: i added the parent of a node as an instance variable and deletion works now
2022-03-25 15:24:28	oxide	thanks
2022-03-25 15:25:11	→	gusto has joined #python
2022-03-25 15:25:28	←	botfather has quit (Remote host closed the connection)
2022-03-25 15:26:09	→	varaindemian has joined #python
2022-03-25 15:27:12	←	ThanatosJ has quit (Read error: Connection reset by peer)
2022-03-25 15:27:22	→	ThanatosJ has joined #python
2022-03-25 15:28:05	→	Thanattt has joined #python
2022-03-25 15:28:25	→	xkuru has joined #python
2022-03-25 15:28:27	←	millie290 has quit (Quit: Client closed)
2022-03-25 15:29:38	←	ThanatosJ has quit (Read error: Connection reset by peer)
2022-03-25 15:31:05	←	Giovanni has quit (Ping timeout: 256 seconds)
2022-03-25 15:31:58	→	Giovanni has joined #python
2022-03-25 15:32:28	←	ghost43 has quit (Remote host closed the connection)
2022-03-25 15:32:45	→	ghost43 has joined #python
2022-03-25 15:32:51	←	fluter has quit (Ping timeout: 250 seconds)
2022-03-25 15:33:54	←	tobybl has quit (Remote host closed the connection)
2022-03-25 15:34:29	←	lessshaste has quit (Read error: Connection reset by peer)
2022-03-25 15:34:36	switcher	deltab Thanks for the help. I didn't understand how it worked before I had to describe it here :D
2022-03-25 15:34:40	→	lessshaste has joined #python
2022-03-25 15:34:41	→	mathe has joined #python
2022-03-25 15:34:41	switcher	https://github.com/Duckle29/EEValue/blob/main/src/eevalue/eevalue.py#L117 now this seems to do the trick :)
2022-03-25 15:36:27	→	CaryHartline has joined #python
2022-03-25 15:37:25	→	darksun has joined #python
2022-03-25 15:37:29	←	mathe8989 has quit (Ping timeout: 272 seconds)
2022-03-25 15:38:53	←	Thanattt has quit (Read error: Connection reset by peer)
2022-03-25 15:39:03	→	SallyAhaj has joined #python
2022-03-25 15:39:15	←	gurkenglas has quit (Ping timeout: 256 seconds)
2022-03-25 15:40:25	→	mathe8989 has joined #python
2022-03-25 15:42:08	←	mathe has quit (Ping timeout: 240 seconds)
2022-03-25 15:42:15	→	esther has joined #python
2022-03-25 15:43:08	←	oaulakh has quit (Quit: Leaving)
2022-03-25 15:43:19	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 15:43:25	←	chenqisu1 has quit (Quit: Leaving)
2022-03-25 15:46:24	→	pycurious has joined #python
2022-03-25 15:46:55	→	Thanattt has joined #python
2022-03-25 15:48:02	→	tobybl has joined #python
2022-03-25 15:48:39	←	jazzy2 has quit (Ping timeout: 260 seconds)
2022-03-25 15:48:51	→	Payam has joined #python
2022-03-25 15:50:21	→	Giovanni has joined #python
2022-03-25 15:50:36	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 15:51:07	←	rud0lf has quit (Ping timeout: 245 seconds)
2022-03-25 15:51:19	→	rud0lf has joined #python
2022-03-25 15:51:29	←	kosh has quit (Ping timeout: 256 seconds)
2022-03-25 15:52:34	→	gitesh has joined #python
2022-03-25 15:52:38	←	zumba_addict has quit (Quit: Client closed)
2022-03-25 15:53:20	→	broccoli_lover has joined #python
2022-03-25 15:54:34	←	l4s8g has quit (Quit: l4s8g)
2022-03-25 15:54:51	→	foobaz212 has joined #python
2022-03-25 15:57:08	←	tobybl has quit (Remote host closed the connection)
2022-03-25 15:57:22	←	mathe8989 has quit (Remote host closed the connection)
2022-03-25 15:57:25	→	otis^ has joined #python
2022-03-25 15:58:02	→	Giovanni has joined #python
2022-03-25 15:58:58	←	jmiehe has quit (Quit: jmiehe)
2022-03-25 15:59:40	←	foobaz212 has quit (Ping timeout: 256 seconds)
2022-03-25 16:00:19	←	ghost43 has quit (Remote host closed the connection)
2022-03-25 16:00:57	←	merijn has quit (Ping timeout: 240 seconds)
2022-03-25 16:01:07	←	ckdCreations has quit (Read error: Connection reset by peer)
2022-03-25 16:01:09	→	ghost43 has joined #python
2022-03-25 16:01:17	→	ckdCreations has joined #python
2022-03-25 16:01:55	←	Enitin has quit (Ping timeout: 256 seconds)
2022-03-25 16:02:07	→	nuclearg1 has joined #python
2022-03-25 16:04:06	→	elb0w has joined #python
2022-03-25 16:05:16	←	han-solo has quit (Ping timeout: 252 seconds)
2022-03-25 16:07:01	←	VoidSync has quit (Remote host closed the connection)
2022-03-25 16:07:20	←	nuclearg1 has quit (Ping timeout: 260 seconds)
2022-03-25 16:08:43	←	elb0w has quit (Ping timeout: 256 seconds)
2022-03-25 16:09:23	→	nomic has joined #python
2022-03-25 16:11:43	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 16:11:59	←	the_lanetly_052 has quit (Remote host closed the connection)
2022-03-25 16:12:24	←	Hackerpcs has quit (Quit: Hackerpcs)
2022-03-25 16:13:14	→	Guest54 has joined #python
2022-03-25 16:13:36	←	Guest54 has quit (Quit: Client closed)
2022-03-25 16:14:40	→	Hackerpcs has joined #python
2022-03-25 16:16:32	←	kaiseisei has quit (Ping timeout: 240 seconds)
2022-03-25 16:16:39	←	jeho has quit (Ping timeout: 256 seconds)
2022-03-25 16:18:18	→	jpn has joined #python
2022-03-25 16:19:22	→	someone235 has joined #python
2022-03-25 16:20:38	flower_	how do I make sure my python app is finding a included file? I get this error: https://paste.debian.net/1235552/
2022-03-25 16:20:56	→	han-solo has joined #python
2022-03-25 16:21:05	→	sawk has joined #python
2022-03-25 16:21:10	→	nuclearg1 has joined #python
2022-03-25 16:21:11	←	jpn_ has quit (Ping timeout: 250 seconds)
2022-03-25 16:21:12	flower_	$ unzip -l dist/noz_manager-0.0.1-py3-none-any.whl | grep yaml 1027  2022-03-25 10:44   config/logging.yaml
2022-03-25 16:21:16	→	kosh has joined #python
2022-03-25 16:21:50	flower_	installed the wheel using pip
2022-03-25 16:22:49	Ulti	flower_ there's a couple of things, one is you can catch the specific file not found exception and then perhaps prompt for another path from a user, you're also using a relative path which can be very different depending on how your program executes
2022-03-25 16:23:15	→	vantage|work has joined #python
2022-03-25 16:23:17	Ulti	do you want it relative to the executing script file? because the best plan then is to get the absolute path for the script then add on the rest of what you expect
2022-03-25 16:23:34	←	death916 has quit (Read error: Connection reset by peer)
2022-03-25 16:24:08	→	foobaz212 has joined #python
2022-03-25 16:24:10	flower_	Ulti: the best plan sounds a good one
2022-03-25 16:24:51	→	acer has joined #python
2022-03-25 16:25:30	→	death916 has joined #python
2022-03-25 16:26:04	flower_	Ulti: hm, I thought it could work, like importing modules do work.
2022-03-25 16:26:17	←	vantage has quit (Ping timeout: 256 seconds)
2022-03-25 16:26:28	→	Syzygy has joined #python
2022-03-25 16:26:34	flower_	Ulti: a fixed located, which the app knows, no matter where you run it.
2022-03-25 16:26:42	Ulti	flower_: try something like this, totally untested sorry https://gist.github.com/MattOates/2a41bb5219f5dc0d73142cb90092081a
2022-03-25 16:27:21	Ulti	flower_: sure but you are opening the file relative to the current working directory whith the call to open()
2022-03-25 16:28:29	flower_	Ulti: that call was a quick fix I read on stackoverflow tbh
2022-03-25 16:28:36	←	gusto has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-03-25 16:28:58	flower_	Ulti: because I got a dict reading error
2022-03-25 16:29:26	flower_	https://stackoverflow.com/questions/49012123/python3-logging-yaml-configuration
2022-03-25 16:30:19	←	ghost43 has quit (Remote host closed the connection)
2022-03-25 16:30:23	flower_	hm should the user be able to edit the logging.yaml file, without having to reinstall the application... hm
2022-03-25 16:30:39	←	death916 has quit (Changing host)
2022-03-25 16:30:40	→	death916 has joined #python
2022-03-25 16:30:59	←	acer has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2022-03-25 16:31:02	→	toulene3 has joined #python
2022-03-25 16:31:05	←	sawk has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2022-03-25 16:31:14	→	ghost43 has joined #python
2022-03-25 16:31:19	←	toulene has quit (Ping timeout: 272 seconds)
2022-03-25 16:31:19	ℹ	toulene3 is now known as toulene
2022-03-25 16:31:40	flower_	for now I think I just don't want the user to be able to edit it. So it could be on a fixed install location (linux)
2022-03-25 16:32:07	←	vantage|work has quit (Quit: Leaving)
2022-03-25 16:32:27	→	vantage has joined #python
2022-03-25 16:32:31	←	hanetzer has quit (Ping timeout: 256 seconds)
2022-03-25 16:32:39	→	zer0bitz has joined #python
2022-03-25 16:32:58	Ulti	if you're not really sure can I suggest you just start with a Python module called config.py and import variables from that you can always refactor where and how those variables get populated later on
2022-03-25 16:33:31	Ulti	also definitely check out libraries to help do configuration rather than do it yourself
2022-03-25 16:34:02	→	roxfan has joined #python
2022-03-25 16:34:05	←	thurs has quit (Quit: The Lounge - https://thelounge.chat)
2022-03-25 16:34:26	→	hanetzer has joined #python
2022-03-25 16:35:07	←	mon_aaraj has quit (Ping timeout: 272 seconds)
2022-03-25 16:36:19	←	foobaz212 has quit (Quit: Client closed)
2022-03-25 16:36:33	→	foobaz212 has joined #python
2022-03-25 16:36:36	→	bitkiller has joined #python
2022-03-25 16:36:38	←	skipper has quit (Quit: brb)
2022-03-25 16:36:41	→	mon_aaraj has joined #python
2022-03-25 16:36:48	→	whatsupboy has joined #python
2022-03-25 16:37:09	←	whatsupboy has quit (Client Quit)
2022-03-25 16:37:11	←	zeenk has quit (Quit: Konversation terminated!)
2022-03-25 16:37:35	←	Alan has quit (Quit: The Lounge - https://thelounge.chat)
2022-03-25 16:37:53	←	flower_ has quit (Ping timeout: 240 seconds)
2022-03-25 16:38:15	→	Giovanni has joined #python
2022-03-25 16:38:55	←	nuclearg1 has quit (Ping timeout: 272 seconds)
2022-03-25 16:39:01	→	flower_ has joined #python
2022-03-25 16:40:44	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 16:41:56	←	Thanatos has quit (Remote host closed the connection)
2022-03-25 16:43:35	→	Thanatos has joined #python
2022-03-25 16:44:26	←	foobaz212 has quit (Ping timeout: 256 seconds)
2022-03-25 16:44:30	flower_	I'm a bit baffled. Why is this such a pain in the ass?
2022-03-25 16:44:33	←	yemel has quit (Ping timeout: 240 seconds)
2022-03-25 16:44:37	←	Thanattt has quit (Ping timeout: 272 seconds)
2022-03-25 16:44:49	→	yemel has joined #python
2022-03-25 16:44:59	→	rpkilby has joined #python
2022-03-25 16:45:21	←	ktosiek has quit (Ping timeout: 240 seconds)
2022-03-25 16:45:35	→	ktosiek has joined #python
2022-03-25 16:47:16	→	jay-m1262 has joined #python
2022-03-25 16:48:30	flower_	where should one put the logging.conf file normally? All docs simply use: logging.config.fileConfig('logging.conf')
2022-03-25 16:48:31	→	ericleer has joined #python
2022-03-25 16:48:47	flower_	so how does the installed application know where logging.conf is located?
2022-03-25 16:50:00	flower_	Of course, this works when you run a script and the logging.conf is in the same folder as the script you run from. But what if you install the script via pip?
2022-03-25 16:50:18	→	rljk has joined #python
2022-03-25 16:50:53	←	pycurious has quit (Ping timeout: 240 seconds)
2022-03-25 16:51:12	→	pycurious has joined #python
2022-03-25 16:52:26	The-Compiler	flower_: you can pass a file-like object to it - so if you want to bundle a logging config with your code, you'd probably use whatever you'd use for other resources too, typically importlib.resources
2022-03-25 16:52:32	→	ThanatosJ has joined #python
2022-03-25 16:52:38	→	bigRoo has joined #python
2022-03-25 16:53:06	flower_	The-Compiler: thanks for the pointer
2022-03-25 16:54:03	←	death916 has quit (Ping timeout: 256 seconds)
2022-03-25 16:54:43	←	GNUmoon has quit (Remote host closed the connection)
2022-03-25 16:54:57	→	Alan has joined #python
2022-03-25 16:55:09	→	GNUmoon has joined #python
2022-03-25 16:55:45	←	vantage has quit (Ping timeout: 256 seconds)
2022-03-25 16:55:52	←	pycurious has quit (Ping timeout: 260 seconds)
2022-03-25 16:56:12	→	Enitin has joined #python
2022-03-25 16:56:15	→	sawk has joined #python
2022-03-25 16:56:37	→	the_lanetly_052 has joined #python
2022-03-25 16:57:27	←	ericleer has quit (Ping timeout: 256 seconds)
2022-03-25 16:57:40	←	Alan has quit (Client Quit)
2022-03-25 16:58:14	han-solo	flower_: https://pypi.org/project/appdirs/ # may help
2022-03-25 16:59:23	←	ghost43 has quit (Remote host closed the connection)
2022-03-25 16:59:42	→	ghost43 has joined #python
2022-03-25 17:00:04	←	ThanatosJ has quit (Ping timeout: 260 seconds)
2022-03-25 17:00:31	←	Enitin has quit (Ping timeout: 260 seconds)
2022-03-25 17:00:43	→	Enitin has joined #python
2022-03-25 17:01:11	flower_	han-solo: thx
2022-03-25 17:01:31	←	Payam has quit (Quit: Client closed)
2022-03-25 17:01:45	←	a1eaiactaest has quit (Ping timeout: 240 seconds)
2022-03-25 17:02:36	→	iomari891 has joined #python
2022-03-25 17:02:41	gloomy	Hey, two questions: say I have a class A and subclass Aplus. Aplus should never be instantiated directly, but only derived from an instance of A (with a @classmethoc from_A(cls,...)). Is there a way to "enforce" this?
2022-03-25 17:03:15	→	rsx has joined #python
2022-03-25 17:03:28	→	pycurious has joined #python
2022-03-25 17:03:48	←	Dantalion has quit (Quit: Bye)
2022-03-25 17:04:04	→	vimal has joined #python
2022-03-25 17:04:12	←	src has quit (Quit: leaving)
2022-03-25 17:04:23	→	kts has joined #python
2022-03-25 17:04:41	→	Giovanni has joined #python
2022-03-25 17:05:23	→	foobaz212 has joined #python
2022-03-25 17:05:30	←	sawk has quit (Remote host closed the connection)
2022-03-25 17:05:38	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 17:05:44	→	sawk has joined #python
2022-03-25 17:05:45	→	nuclearg1 has joined #python
2022-03-25 17:06:08	←	mon_aaraj has quit (Ping timeout: 240 seconds)
2022-03-25 17:07:17	←	paul424 has quit (Quit: Leaving)
2022-03-25 17:07:22	→	Alan has joined #python
2022-03-25 17:07:29	←	funhouse has quit (Quit: Client closed)
2022-03-25 17:07:34	gloomy	second question: Say I also have a class `CollectionOfA` with attribute `contents: List[A]`, and I want a subclass `CollectionOfAplus`.  The main difference is that the new class instead has `contents: List[Aplus]`. A lot of methods are exactly the same, but have incorrect types - for instance say CollectionOfA has a `get_random_a(self) -> A` method, that method in the CollectionOfAplus should have the same exact behaviour but return a Aplus. How do
2022-03-25 17:07:34	gloomy	I fix this?
2022-03-25 17:07:39	←	shan has quit (Ping timeout: 256 seconds)
2022-03-25 17:08:06	→	Giovanni has joined #python
2022-03-25 17:08:23	→	mon_aaraj has joined #python
2022-03-25 17:09:23	→	tobybl has joined #python
2022-03-25 17:10:03	→	kts_ has joined #python
2022-03-25 17:10:04	←	kts has quit (Quit: Konversation terminated!)
2022-03-25 17:10:06	←	Alan has quit (Client Quit)
2022-03-25 17:10:14	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 17:10:22	→	ThanatosJ has joined #python
2022-03-25 17:10:34	→	Alan has joined #python
2022-03-25 17:10:35	←	kts_ has quit (Client Quit)
2022-03-25 17:10:41	gloomy	Snippet to maybe clarify :https://dpaste.org/xgTA
2022-03-25 17:10:43	→	death916 has joined #python
2022-03-25 17:10:54	→	aknot has joined #python
2022-03-25 17:11:12	→	purple_cthulhu has joined #python
2022-03-25 17:11:14	→	Giovanni has joined #python
2022-03-25 17:12:18	jinsun	gloomy: for the firat one maybe something like this https://bpa.st/66UA
2022-03-25 17:12:31	jinsun	s/firat/first
2022-03-25 17:12:35	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 17:12:56	→	Xano has joined #python
2022-03-25 17:13:25	gloomy	interesting, never used new (haven't done much OO in python before)
2022-03-25 17:13:42	←	very_sneaky has quit (Ping timeout: 260 seconds)
2022-03-25 17:13:43	→	shad has joined #python
2022-03-25 17:14:26	gloomy	jinsun: is it intentional that  from_A is a method of A or was it meant to be a method of Aplus?
2022-03-25 17:14:28	Xano	I've got a singledispatch function for which implementations are registered across modules. I'd really like to be ably to add @typing.overload, but that won't work as these implementations are not in the same module. Is there a way to somehow 'trick' parsers into believing that a @typing.overload declaration is somehow for another module?
2022-03-25 17:14:37	→	Giovanni has joined #python
2022-03-25 17:14:48	→	ericleer has joined #python
2022-03-25 17:14:54	→	OP-0 has joined #python
2022-03-25 17:15:21	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 17:15:36	→	very_sneaky has joined #python
2022-03-25 17:15:56	←	revolve has quit (Ping timeout: 260 seconds)
2022-03-25 17:16:02	→	kts has joined #python
2022-03-25 17:16:03	jinsun	gloomy: it could be a method in Aplus also, but I thought you wanted it to be a method in A for some reason
2022-03-25 17:16:57	←	purple_cthulhu has left #python
2022-03-25 17:19:14	→	azidhaka has joined #python
2022-03-25 17:20:40	←	xa0s has quit (Quit: leaving)
2022-03-25 17:21:14	→	Giovanni has joined #python
2022-03-25 17:21:25	jinsun	gloomy: and second one is a typing question I assume? that can be solved with generics https://bpa.st/KZSQ
2022-03-25 17:21:36	→	han-solo_ has joined #python
2022-03-25 17:22:10	←	han-solo has quit (Killed (NickServ (GHOST command used by han-solo_)))
2022-03-25 17:22:15	ℹ	han-solo_ is now known as han-solo
2022-03-25 17:22:23	←	ivanf has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-03-25 17:23:16	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 17:23:31	←	ericleer has quit (Ping timeout: 256 seconds)
2022-03-25 17:23:37	Deknos	hey, i want to test if a certain URL does have content behind (like that a GET returns a 200) but that URL might not support other modes besides GET and POST. now my URL content might big (think iso-image-size) and i want to stop this after data comes in. what would be the canonical way in python (perhaps with request?) to do this?
2022-03-25 17:23:46	gloomy	Hmmm, not really - while a lot of functions have the same behaviour, some need to be implemented differently (hence why I used a subclass)
2022-03-25 17:23:47	→	andreasbuhr has joined #python
2022-03-25 17:23:48	←	andreasbuhr has quit (Client Quit)
2022-03-25 17:24:27	jinsun	okay you didn't specify that
2022-03-25 17:24:40	→	revolve has joined #python
2022-03-25 17:24:50	←	gulzar has quit (Quit: gulzar)
2022-03-25 17:24:53	jinsun	you can make only some methods generic and keep other ones not generic
2022-03-25 17:25:15	→	purple_cthulhu has joined #python
2022-03-25 17:25:19	gloomy	Nope, sorry :p was trying to abstract away the irrelevant parts but apparently that wasn't clear
2022-03-25 17:25:37	han-solo	Deknos: just try a HEAD ? or GET is fine, as long as you don't read the content, i guess
2022-03-25 17:25:51	←	switcher has quit (Quit: Connection closed)
2022-03-25 17:26:12	han-solo	`res = requests.get(url); res.raise_for_status();..`
2022-03-25 17:26:36	azidhaka	Hi everyone, which is correct? "return True if dns_record else False" or "return True if dns_record else return False"
2022-03-25 17:26:45	d3x	If it doesn't support HEAD (which is weird, but OK), you can use requests' streaming capability and cut off after the first bytes fetched: https://stackoverflow.com/a/22347526
2022-03-25 17:27:06	han-solo	azidhaka: former
2022-03-25 17:27:11	han-solo	second one seems like an error
2022-03-25 17:27:13	←	Bobathan_ has quit (Ping timeout: 240 seconds)
2022-03-25 17:27:43	jinsun	azidhaka: the latter is invalid syntax so the former, but it should just be `return bool(dns_record)`
2022-03-25 17:27:54	→	vantage has joined #python
2022-03-25 17:28:03	←	ghost43 has quit (Remote host closed the connection)
2022-03-25 17:28:12	azidhaka	han-solo: it is, but i was wondering why, isn't it: ACTION else ANOTHER_ACTION, but the action in case is return Something
2022-03-25 17:28:17	→	ghost43 has joined #python
2022-03-25 17:29:08	jinsun	no it is not "ACTION" it is a ternary expression, you can only have expressions there
2022-03-25 17:29:28	jinsun	and return is a statement not expression
2022-03-25 17:29:29	han-solo	https://docs.python.org/3/reference/expressions.html#conditional-expressions
2022-03-25 17:29:44	azidhaka	right, got it, thanks everyone
2022-03-25 17:30:01	jinsun	if you want to have statements, then use a proper if else, instead of the one-liner expression version
2022-03-25 17:30:07	→	Giovanni has joined #python
2022-03-25 17:30:09	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 17:30:42	←	death916 has quit (Changing host)
2022-03-25 17:30:43	→	death916 has joined #python
2022-03-25 17:30:56	→	shan has joined #python
2022-03-25 17:31:05	→	Giovanni has joined #python
2022-03-25 17:31:05	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 17:31:30	azidhaka	jinsun: yeah, just wanted to make the code shorter because the functions are very small and 4 lines for the return statements seemed too much
2022-03-25 17:32:04	→	whaley has joined #python
2022-03-25 17:32:06	←	foobaz212 has quit (Quit: Client closed)
2022-03-25 17:32:21	→	foobaz212 has joined #python
2022-03-25 17:32:47	→	PaterTemporalis has joined #python
2022-03-25 17:32:49	→	vulpes_vulpes has joined #python
2022-03-25 17:33:41	jinsun	well luckily you can use the one-liner expression here, the return just has to be "outside" of the expression, like in the second case, because return is statement
2022-03-25 17:33:53	→	ghost43_ has joined #python
2022-03-25 17:34:32	←	ghost43 has quit (Ping timeout: 240 seconds)
2022-03-25 17:34:38	←	vulpes_vulpes has quit (Remote host closed the connection)
2022-03-25 17:34:40	mrwick	OTOH shortening code one way to make it longer another can lead to readability problems
2022-03-25 17:35:16	→	Giovanni has joined #python
2022-03-25 17:35:27	mrwick	is there some advantage to having fewer lines? does python allocate more memory or cpu to the newline?
2022-03-25 17:35:56	han-solo	lower file size :p
2022-03-25 17:35:57	han-solo	jk
2022-03-25 17:36:06	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 17:36:21	→	vulpes_vulpes has joined #python
2022-03-25 17:36:29	→	rinzewind has joined #python
2022-03-25 17:37:32	azidhaka	mrwick: i know that, but my first language was Perl and the damage is permanent :D
2022-03-25 17:38:06	←	grooverman_ has quit (Read error: Connection reset by peer)
2022-03-25 17:38:16	←	foobaz212 has quit (Quit: Client closed)
2022-03-25 17:38:21	→	tWqaq has joined #python
2022-03-25 17:38:24	jinsun	gloomy: https://bpa.st/EWNA
2022-03-25 17:38:29	→	foobaz212 has joined #python
2022-03-25 17:39:37	←	bigRoo has quit (Remote host closed the connection)
2022-03-25 17:39:53	←	ThanatosJ has quit (Ping timeout: 268 seconds)
2022-03-25 17:39:54	mrwick	azidhaka: thanks for the info, good to know it's personal taste and not some futile quest for speed and performance
2022-03-25 17:40:11	←	stockholm has quit (Ping timeout: 260 seconds)
2022-03-25 17:40:32	→	bahamas has joined #python
2022-03-25 17:42:50	←	rljk has quit (Quit: Leaving)
2022-03-25 17:43:34	→	yotsuba has joined #python
2022-03-25 17:43:50	←	yotsuba has quit (Remote host closed the connection)
2022-03-25 17:44:33	←	jpn has quit (Ping timeout: 240 seconds)
2022-03-25 17:45:13	→	csm3105 has joined #python
2022-03-25 17:45:15	←	bitdex has quit (Quit: = "")
2022-03-25 17:45:35	→	whatsupboy has joined #python
2022-03-25 17:45:37	←	whatsupboy has quit (Client Quit)
2022-03-25 17:45:49	→	whatsupboy has joined #python
2022-03-25 17:46:08	←	rpkilby has quit (Ping timeout: 240 seconds)
2022-03-25 17:46:45	←	radny has quit (Ping timeout: 256 seconds)
2022-03-25 17:46:58	→	radny has joined #python
2022-03-25 17:47:03	anddam	Repiphany: back on the infinite generator topic, I do understand why you wrote that, but I had some vague "don't" recollection
2022-03-25 17:47:22	gloomy	jinsun: awesome, thanks a lot!
2022-03-25 17:47:24	anddam	Repiphany: it might just be noob advice that stuck on me, but of course when you know what you are doing you are free to do so
2022-03-25 17:47:50	←	kts has quit (Quit: Konversation terminated!)
2022-03-25 17:49:31	anddam	that said, I personally find jinsun's solution a bit more readable
2022-03-25 17:49:47	anddam	possibly you went a bit too dense in syntax
2022-03-25 17:50:06	→	thiras has joined #python
2022-03-25 17:50:50	anddam	Repiphany: why the n_sq assignment in https://bpa.st/A5XA rather than putting math.isqrt() inline in the any argument?
2022-03-25 17:51:02	anddam	I mean that will still be evaluated only once per is_prime() invocation, won't it?
2022-03-25 17:51:39	→	grooverman has joined #python
2022-03-25 17:51:53	←	shuck has quit (Ping timeout: 240 seconds)
2022-03-25 17:52:19	←	Syzygy has quit (Read error: Connection reset by peer)
2022-03-25 17:53:49	→	Pickchea has joined #python
2022-03-25 17:54:22	→	magla has joined #python
2022-03-25 17:54:50	→	Atque has joined #python
2022-03-25 17:55:05	→	kts has joined #python
2022-03-25 17:55:19	→	Bronto22 has joined #python
2022-03-25 17:56:09	←	revolve has quit (Ping timeout: 256 seconds)
2022-03-25 17:56:38	→	revolve has joined #python
2022-03-25 17:57:22	→	merijn has joined #python
2022-03-25 17:59:55	→	ncwbqcfe has joined #python
2022-03-25 17:59:59	←	dreamon has quit (Ping timeout: 272 seconds)
2022-03-25 18:00:20	csm3105	Hi everyone, one question...when I try to do an update in the database, pydantic returns the following output https://bpa.st/Y6OQ , in this case I just need only the closed_at and action fields of the table issues to be updated
2022-03-25 18:00:32	→	shelf has joined #python
2022-03-25 18:01:14	csm3105	I understand that pydantic is fulfilling its function and informs me of missing elements that are required because in the IssueBase class (schemas.py) I have all the fields of the table and when I do the update I only send 2 fields
2022-03-25 18:01:22	→	Dantali0n has joined #python
2022-03-25 18:01:35	→	theprophet has joined #python
2022-03-25 18:01:48	→	bloody has joined #python
2022-03-25 18:01:49	←	shad has quit (Ping timeout: 256 seconds)
2022-03-25 18:02:28	←	shelf has quit (Read error: Connection reset by peer)
2022-03-25 18:03:23	→	shad has joined #python
2022-03-25 18:03:46	→	ustedes has joined #python
2022-03-25 18:04:44	→	diana has joined #python
2022-03-25 18:04:50	csm3105	How can I perform the update sentence without having to specify all fields and not get this traceback?
2022-03-25 18:05:22	→	aphysically has joined #python
2022-03-25 18:05:41	diana	I have a list of values and I want to create a dictionary using the list values as keys. How can I do that?
2022-03-25 18:06:19	grym	diana: a for loop is simple.  do you have values you'd like to associate with each key already?
2022-03-25 18:06:25	grym	(if so there's a tidier way)
2022-03-25 18:06:27	parv	diana,{ k : None for k in list }
2022-03-25 18:06:40	→	gusto has joined #python
2022-03-25 18:07:05	diana	yes, I already have values that I'd like to associate with each key
2022-03-25 18:07:25	grym	diana: dict(zip(keyslist,valueslist))
2022-03-25 18:07:29	←	whaley has quit (Ping timeout: 256 seconds)
2022-03-25 18:07:48	diana	hmm
2022-03-25 18:07:55	diana	I'll try that
2022-03-25 18:07:58	→	tuatara has joined #python
2022-03-25 18:08:04	parv	Ah, That's shorter than I was going for.
2022-03-25 18:08:26	grym	much nicer than index-juggling
2022-03-25 18:08:38	Tritium	parv: for your version, its just dict.fromkeys(the_list)
2022-03-25 18:09:36	Tritium	though, i wouldn't flag up a dict-comprehension in a code review
2022-03-25 18:10:09	→	gurkenglas has joined #python
2022-03-25 18:10:30	parv	Tritium, I meant grym's version using zip is shorter than what would have been mine (using zip)
2022-03-25 18:11:04	→	jpn has joined #python
2022-03-25 18:11:19	Tritium	parv: i meant your dict-comprehension was doing the same as a built in classmethod on the dict type
2022-03-25 18:11:21	parv	I could not care less for dict.fromkeys()
2022-03-25 18:11:45	→	perrierjouet has joined #python
2022-03-25 18:11:57	Tritium	but i also wouldn't flag it as a problem in a code review
2022-03-25 18:12:01	han-solo	csm3105: you would get the existing issue first, then update the status or something, and then add it again
2022-03-25 18:12:19	parv	🤷‍♀️
2022-03-25 18:13:39	→	xheimlich has joined #python
2022-03-25 18:13:54	xheimlich	to this day I'm a little unsure of what sets are *for*.
2022-03-25 18:14:09	←	tuatara has left #python
2022-03-25 18:14:14	parv	Value less dict's
2022-03-25 18:14:16	→	brinza888 has joined #python
2022-03-25 18:14:33	xheimlich	e.g. optimization library Optuna computes an attribute best_trials that's a list of unique "FrozenTrial" immutable objects.
2022-03-25 18:14:46	xheimlich	by the very nature of what optuna does, those are known to be unique.
2022-03-25 18:14:50	→	SaltHillStroller has joined #python
2022-03-25 18:15:19	←	brinza888 has quit (Client Quit)
2022-03-25 18:15:19	Tritium	practically, they are for deduplication where order doesn't matter.  Originally, for a fast random access collection of values, that you can do mathematical set operations on.
2022-03-25 18:15:23	xheimlich	they've probably thought this through. One typically does not access elements at random, but loop/iterate through them.
2022-03-25 18:16:09	xheimlich	order doesn't matter for "best_trials" either since they're Pareto optimal trials for multi-objective problems and have no natural single order.
2022-03-25 18:16:12	grym	xheimlich: well, they're real nice for math...
2022-03-25 18:16:41	grym	xheimlich: but a common use is "i have a set of naughty values; prune this other collection s.t. those values are removed" in "normal" code
2022-03-25 18:16:50	Tritium	I mostly find myself reaching for them to make sense of garbage data (aside from deduplication)
2022-03-25 18:16:55	grym	in which case `x in someset` is O(1) not O(n)
2022-03-25 18:17:17	xheimlich	I assume lists are really really great in real-world scenarios with 30 < N < 1000  elements.
2022-03-25 18:17:37	xheimlich	grym: I did read on the complexity classes of operations.
2022-03-25 18:17:54	grym	if you're filtering, sets go brrrrrrr
2022-03-25 18:17:56	xheimlich	but in practice -- I never see libraries using sets.
2022-03-25 18:18:02	→	ivanf has joined #python
2022-03-25 18:18:03	Tritium	lists are great if you have sequential homogeneous data ... generators are better if that list wouldn't fit in memory
2022-03-25 18:19:03	←	jpn has quit (Ping timeout: 256 seconds)
2022-03-25 18:19:20	BtbN	Is there a way I can override a version pip/setuptools installs in the isolated build environment of a package?
2022-03-25 18:19:28	Tritium	xheimlich: I would be surprised if at least a few don't use sets internally, then convert back to lists or other types on output
2022-03-25 18:19:29	←	CatCow has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-03-25 18:19:41	xheimlich	ok, let me specify.
2022-03-25 18:19:52	xheimlich	I never see libraries returning sets in their APIs.
2022-03-25 18:20:27	grym	BtbN: install --force it post-hoc
2022-03-25 18:20:33	←	SallyAhaj has quit (Quit: SallyAhaj)
2022-03-25 18:20:36	←	foobaz212 has quit (Quit: Client closed)
2022-03-25 18:20:36	BtbN	grym, what do you mean?
2022-03-25 18:20:45	←	xkuru has quit (Read error: Connection reset by peer)
2022-03-25 18:20:48	→	foobaz212 has joined #python
2022-03-25 18:20:55	Tritium	xheimlich: I have... i guess it depends on the domain you work in
2022-03-25 18:21:15	←	Enitin has quit (Ping timeout: 260 seconds)
2022-03-25 18:22:00	csm3105	han-solo, I have this method on worker.py https://bpa.st/UOSA (this is the module implemented to collect information from the gitlab webhook)
2022-03-25 18:22:02	BtbN	grym, the issue is that the package in question is pulling in setuptools 61.0 into the isolated build env. Which is broken. I need it to pull <61
2022-03-25 18:22:04	Tritium	I have never used the complex type, plenty of people in here who have, plenty of libraries that return it
2022-03-25 18:22:20	→	EgonX has joined #python
2022-03-25 18:22:27	csm3105	Here is where I perfom the query to check if there is any record in the database associated to the id of the gitlab task I'm closing
2022-03-25 18:23:52	→	Giovanni has joined #python
2022-03-25 18:23:58	grym	BtbN: oh, sorry.  uh, fork it and pin?
2022-03-25 18:24:06	csm3105	If exists it should do the update statment, but it is prevented by pydantic validation
2022-03-25 18:24:25	BtbN	grym, that's not exactly practical.
2022-03-25 18:24:27	han-solo	csm3105: https://bpa.st/R2VQ
2022-03-25 18:24:32	←	aphysically has quit (Quit: aphysically)
2022-03-25 18:24:45	grym	BtbN: then i'm out of ideas
2022-03-25 18:24:59	BtbN	The stuff setuptools 61 broke affects like half a dozen packages we build. And thanks to build isolation, we can't even just pin it to the fixed version
2022-03-25 18:25:06	BtbN	and most packages fail to build with --no-build-isolation
2022-03-25 18:25:07	←	white2 has quit (Read error: Connection reset by peer)
2022-03-25 18:25:10	→	SallyAhaj has joined #python
2022-03-25 18:25:21	Tritium	BtbN: your other option is MitM the cheeseshop and force the version you need (i think pydev would allow this)
2022-03-25 18:25:35	→	white2 has joined #python
2022-03-25 18:25:46	BtbN	hm?
2022-03-25 18:25:59	←	Lindrian has left #python (Textual IRC Client: www.textualapp.com)
2022-03-25 18:26:04	←	ayustae has quit (Quit: ayustae)
2022-03-25 18:26:05	→	xkuru has joined #python
2022-03-25 18:26:18	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 18:27:06	Tritium	convert requests for setuptools 61 to requests for setuptools 60 or lower, and edit the package on the fly to report as 61.  its...a lot less practical than fork the package but its about the only thing i can think of
2022-03-25 18:27:36	Tritium	oh duh, manually edit setuptools, host it on pydev
2022-03-25 18:27:39	Tritium	no on the fly needed
2022-03-25 18:27:43	Tritium	but still less practical
2022-03-25 18:27:44	→	aphysically has joined #python
2022-03-25 18:27:49	csm3105	han-solo, I think the problem is here https://bpa.st/UOSA#1L37 because I'm not able to create this schema object from the pydantic schema
2022-03-25 18:28:09	BtbN	I don't see how I could possibly incorporate that into our CI environment.
2022-03-25 18:28:44	han-solo	csm3105: yes, you don't need to create a new object, get the existing issue, update whatever properties you like, then add it to the session and commit
2022-03-25 18:28:50	Dev0n	hey, if I'm handling exceptions that can be handled but want to make the unhandled exceptions bubble up, I could just simply raise e right?
2022-03-25 18:29:02	Tritium	uh, manually edit the setuptools wheel, vendor it in your repo, install it by file with pip
2022-03-25 18:29:24	←	gusto has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-03-25 18:29:37	BtbN	Yeah, that's not practical. We also can't use wheels.
2022-03-25 18:29:42	grym	Dev0n: yes
2022-03-25 18:29:50	←	foobaz212 has quit (Ping timeout: 256 seconds)
2022-03-25 18:29:50	grym	you can re-raise
2022-03-25 18:29:51	ChrisWarrick	BtbN: why not?
2022-03-25 18:29:58	BtbN	Because there's no wheels for pyston.
2022-03-25 18:30:09	Tritium	BtbN: ...the wheel for setuptools
2022-03-25 18:30:24	Dev0n	thanls grym, wasn't sure if there was a better way to re-raise so just checking
2022-03-25 18:30:33	→	rpkilby has joined #python
2022-03-25 18:30:42	BtbN	Tritium, I can freely downgrade setuptools in our env just fine, that's not the issue
2022-03-25 18:30:58	←	parv has quit (Quit: parv)
2022-03-25 18:31:04	BtbN	the issue is that with build isolation, the individual packages that need it then pull the broken version back in themselves into their isolated build env
2022-03-25 18:31:15	→	Giovanni has joined #python
2022-03-25 18:31:21	←	merijn has quit (Ping timeout: 240 seconds)
2022-03-25 18:31:30	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 18:32:01	BtbN	like, try "pip install --no-binary kiwisolver kiwisolver" in a fresh venv
2022-03-25 18:32:05	Tritium	BtbN: I am suggesting you modify a version of setuptools to report as the version being requested, and pre install it in the isolated envs before doing the isolated builds.
2022-03-25 18:32:11	→	jpn has joined #python
2022-03-25 18:32:28	→	stockholm has joined #python
2022-03-25 18:32:31	BtbN	Tritium, I don't think I have any means to pre-install anything in those env? pip creates and deletes them on the fly in /tmp
2022-03-25 18:32:37	←	XV8 has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-03-25 18:32:46	csm3105	han-solo, I dont need to create inside the crud method, bc I'm passing it as an argument (issue: schemas.Issue), but when creating this object I'm having problems with pydantic
2022-03-25 18:33:26	→	XV8 has joined #python
2022-03-25 18:33:43	Tritium	BtbN: ...vendor the world that the build needs as a folder and tell pip to use that folder as the index, so it never goes to the cheeseshop.
2022-03-25 18:34:27	BtbN	That'd be a nightmare to maintain, and also significantly increase the size of our images.
2022-03-25 18:34:41	BtbN	The only sensible conclusion to me is that setuptools 61 needs to ASAP revert whatever shit they broke
2022-03-25 18:34:41	jinsun	easier to just disable the build isolation than that
2022-03-25 18:34:46	←	gdd has quit (Ping timeout: 268 seconds)
2022-03-25 18:34:47	←	Helle has quit (Changing host)
2022-03-25 18:34:48	→	Helle has joined #python
2022-03-25 18:34:48	Tritium	You have to maintain it long enough for an upstream fix to materialize
2022-03-25 18:34:51	BtbN	jinsun, then it fails with other errors :D
2022-03-25 18:34:57	←	rpkilby has quit (Ping timeout: 240 seconds)
2022-03-25 18:35:23	BtbN	It also has some quite hefty build-time only dependencies which I'd then have to drag along as well
2022-03-25 18:35:33	←	slav0nic has quit (Remote host closed the connection)
2022-03-25 18:36:04	Tritium	Gonna have to download em anyways, you are just throwing what pip would download into a folder...
2022-03-25 18:36:22	→	slav0nic has joined #python
2022-03-25 18:36:23	→	gdd has joined #python
2022-03-25 18:36:28	BtbN	I'm not concerned about downloading them. I'm concerned about them bloating up the resulting docker image
2022-03-25 18:36:50	Tritium	...they are going to have to be in the docker image anyways...
2022-03-25 18:37:00	BtbN	no they don't. They're build-time only deps.
2022-03-25 18:37:05	Tritium	or not, i was suggesting throwing them in your repo
2022-03-25 18:37:08	←	jpn has quit (Ping timeout: 260 seconds)
2022-03-25 18:37:11	→	gabriel_sevecek has joined #python
2022-03-25 18:37:21	han-solo	csm3105: https://bpa.st/AUGQ
2022-03-25 18:37:31	←	gabriel_sevecek has quit (Client Quit)
2022-03-25 18:38:08	←	roxfan has quit (Ping timeout: 240 seconds)
2022-03-25 18:38:27	→	a1eaiactaest has joined #python
2022-03-25 18:38:30	Tritium	The question boils down to "And upstreem dependency is broken, how do i work until its fixed" the answer being "annoyingly."
2022-03-25 18:38:57	←	kts has quit (Ping timeout: 240 seconds)
2022-03-25 18:39:46	→	rpkilby has joined #python
2022-03-25 18:39:53	←	rpkilby has quit (Read error: Connection reset by peer)
2022-03-25 18:39:58	BtbN	Well, it's setuptools being broken. Which is... quite annoying and basically a stopping brick with no fix
2022-03-25 18:40:37	Tritium	You either fork the thing you are trying to build until the dependency issue is solved (either by the thing you are trying to build changing its dependencies, or the dependency fixing itself) or you warp reality around the build to make it think its using the dependency it asked for but isn't.
2022-03-25 18:41:04	←	cuanim has quit (Read error: Connection reset by peer)
2022-03-25 18:41:21	BtbN	Both aren't feasible solutions, soo, yeah. We are just stuck without working builds until setuptools figures this out and releases a fix
2022-03-25 18:41:22	csm3105	han-solo, https://bpa.st/AUGQ#2L17 should not receive CloseIssue object the close_issue() at crud.py?
2022-03-25 18:41:26	←	jaggz has left #python (Leaving)
2022-03-25 18:41:34	jinsun	yeah custom index-url instead of pypi might be the only "simple" solution for this
2022-03-25 18:41:47	Tritium	BtbN: file a detailed bug with setuptools
2022-03-25 18:41:59	BtbN	There's already 20+ of them swamping in on them, I think they know
2022-03-25 18:42:13	Tritium	then it wont be long
2022-03-25 18:42:14	→	sn1tch3r has joined #python
2022-03-25 18:42:38	csm3105	han-solo, also I dont't have defined any CloseIssue object in schemas.py
2022-03-25 18:42:44	BtbN	I wouldn't call them detailed, but a lot of people are reporting that their shit broke over night
2022-03-25 18:42:46	han-solo	csm3105: change that to `CloseIssue`
2022-03-25 18:42:59	→	kts has joined #python
2022-03-25 18:43:09	jinsun	BtbN: looks like this one covers both the packages you found earlier https://github.com/pypa/setuptools/issues/3197
2022-03-25 18:43:26	Tritium	BtbN: if you can narrow it down to the lines of code that changed that broke your build, that would probably help them
2022-03-25 18:43:49	←	EgonX has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-03-25 18:43:50	jinsun	grerat title for that bug report btw "[BUG]" :D
2022-03-25 18:44:05	jinsun	s/grerat/great
2022-03-25 18:44:08	csm3105	han-solo, https://bpa.st/Y6OQ I'm not sure how to implement that new CloseIssue class
2022-03-25 18:44:37	BtbN	Tritium, I don't even understand what changed to break so many builds in different ways
2022-03-25 18:44:41	BtbN	like, it's not only kiwisolver
2022-03-25 18:44:42	Tritium	I'm...shocked that wasn't closed as 'wont fix' with a great title like that
2022-03-25 18:44:42	←	aknot has quit (Ping timeout: 260 seconds)
2022-03-25 18:45:10	→	EgonX has joined #python
2022-03-25 18:45:47	Tritium	BtbN: from the description it sounds like maybe setuptools is getting confused with pure extension modules with no python code, that don't define any python modules in the setup file.
2022-03-25 18:46:42	→	mtk has joined #python
2022-03-25 18:47:17	han-solo	csm3105: just create a new one with id action an closed_at properties ?
2022-03-25 18:47:17	→	jpn has joined #python
2022-03-25 18:47:18	Tritium	was... 61 a major refactor release or something?
2022-03-25 18:47:19	→	foobaz212 has joined #python
2022-03-25 18:48:08	diana	how do I create a nested dictionary that has the the first key (say "name") of an iterator as a key to another dictionary?  Or, keep the first value reserved and use the rest of the keys to form a dictionary, is that possible?
2022-03-25 18:48:13	han-solo	but then that should have been the really base Issue class, but will for the task, just messed up heirarchy in schema though
2022-03-25 18:48:30	→	Sylhouette has joined #python
2022-03-25 18:49:29	→	ps_ has joined #python
2022-03-25 18:49:48	ps_	Hi, any idea how to convert an html email to a text only?
2022-03-25 18:49:54	Tritium	Ah, it looks like they got rid of the concept of 'empty distributions' ... pure c modules will have all their python modules added to their distributions by default...and if you have no .py files.... its confused
2022-03-25 18:50:25	→	msalvatore has joined #python
2022-03-25 18:50:56	←	sn1tch3r has quit (Quit: Leaving)
2022-03-25 18:51:08	→	l4s8g_ has joined #python
2022-03-25 18:51:24	←	ghost43_ has quit (Remote host closed the connection)
2022-03-25 18:51:46	→	ghost43 has joined #python
2022-03-25 18:51:53	radny	ps_ you can use html2text
2022-03-25 18:52:02	csm3105	han-solo, like this https://bpa.st/QEFA ?
2022-03-25 18:53:10	→	gabriel_sevecek has joined #python
2022-03-25 18:53:10	han-solo	missing an id, but maybe something like https://bpa.st/4FYQ
2022-03-25 18:53:11	←	mon_aaraj has quit (Ping timeout: 272 seconds)
2022-03-25 18:53:12	←	gabriel_sevecek has quit (Client Quit)
2022-03-25 18:53:41	→	gabriel_sevecek has joined #python
2022-03-25 18:53:56	Tritium	auto discovery should be an opt in feature of setuptools, not a default with obscure activation conditions
2022-03-25 18:54:09	csm3105	han-solo, but if it inherits from BaseIssue, it wont require also the rest of the fields?
2022-03-25 18:54:28	→	cdown has joined #python
2022-03-25 18:54:32	han-solo	csm3105: check the IssueBase, it is minimal
2022-03-25 18:54:47	→	mon_aaraj has joined #python
2022-03-25 18:55:03	→	sonnie has joined #python
2022-03-25 18:55:40	csm3105	han-solo, ok, I see...thank you very much I'll try it later, but you're the best again :)
2022-03-25 18:56:09	←	csm3105 has quit (Quit: Leaving)
2022-03-25 18:56:25	ps_	radny: but the output include markdown. I just want plan text without markdown
2022-03-25 18:56:47	←	gabriel_sevecek has quit (Client Quit)
2022-03-25 18:57:02	→	vlado has joined #python
2022-03-25 18:57:16	phy1729	Does it start as markdown and then get rendered to html? If so, can you just render the markdown to text directly?
2022-03-25 18:57:23	←	Bronto22 has quit (Quit: Konversation terminated!)
2022-03-25 18:57:37	→	gabriel_sevecek has joined #python
2022-03-25 18:57:43	←	gabriel_sevecek has quit (Client Quit)
2022-03-25 18:58:04	Tritium	Part of the point of markdown is that its... supposed to be readable as plain text without rendering
2022-03-25 18:58:18	→	gabriel_sevecek has joined #python
2022-03-25 18:58:36	→	ubert has joined #python
2022-03-25 19:00:05	←	l4s8g_ has quit (Remote host closed the connection)
2022-03-25 19:00:25	→	lukedashjr has joined #python
2022-03-25 19:00:34	ps_	Tritium: good point
2022-03-25 19:00:48	ps_	pycurious: it starts as html and ends as markdown
2022-03-25 19:00:59	ps_	but maybe it is what i want
2022-03-25 19:00:59	→	kingsir has joined #python
2022-03-25 19:01:19	ps_	Because I want to parse some html emails to text (Not all clients are sending text only versions)
2022-03-25 19:01:40	←	slav0nic has quit (Remote host closed the connection)
2022-03-25 19:02:15	→	qlixed has joined #python
2022-03-25 19:02:21	←	pycurious has quit (Quit: Leaving.)
2022-03-25 19:02:28	→	ub has joined #python
2022-03-25 19:02:41	←	bahamas has quit (Ping timeout: 272 seconds)
2022-03-25 19:02:41	←	a1eaiactaest has quit (Ping timeout: 256 seconds)
2022-03-25 19:02:51	→	humberto1 has joined #python
2022-03-25 19:02:53	←	moog_ has quit (Ping timeout: 240 seconds)
2022-03-25 19:02:56	←	ubert has quit (Ping timeout: 252 seconds)
2022-03-25 19:02:56	ℹ	ub is now known as ubert
2022-03-25 19:03:19	←	luke-jr has quit (Ping timeout: 272 seconds)
2022-03-25 19:03:24	ℹ	lukedashjr is now known as luke-jr
2022-03-25 19:03:24	←	purple_cthulhu has left #python
2022-03-25 19:04:30	←	revolve has quit (Read error: Connection reset by peer)
2022-03-25 19:06:10	←	Thanatos has quit (Remote host closed the connection)
2022-03-25 19:06:15	→	revolve has joined #python
2022-03-25 19:06:36	→	Thanatos has joined #python
2022-03-25 19:07:45	←	stockholm has quit (Ping timeout: 240 seconds)
2022-03-25 19:09:44	newdimension	Is adding a len_a = len(a) variable the best way to avoid calling len() multiple times here? https://dpaste.org/wnNM
2022-03-25 19:09:47	→	a1eaiactaest has joined #python
2022-03-25 19:11:11	ChrisWarrick	newdimension: you’re calling it twice, and len() is O(1), so it doesn’t really matter
2022-03-25 19:11:35	ChrisWarrick	(well-behaved len(), as seen in the built-in collections, that is)
2022-03-25 19:12:17	Tritium	....beware of __len__ methods that make a socket request (i have seen this)
2022-03-25 19:12:46	deniska	or sql query a database :D
2022-03-25 19:12:57	Tritium	i have seen this too!
2022-03-25 19:13:03	←	jay-m1262 has quit (Ping timeout: 260 seconds)
2022-03-25 19:13:16	Tritium	I think i've *written* that
2022-03-25 19:14:07	←	tobybl has quit (Remote host closed the connection)
2022-03-25 19:14:49	→	jay-m1262 has joined #python
2022-03-25 19:15:44	SnoopJ	yeesh
2022-03-25 19:15:59	→	ub has joined #python
2022-03-25 19:16:08	←	ubert has quit (Ping timeout: 252 seconds)
2022-03-25 19:16:08	ℹ	ub is now known as ubert
2022-03-25 19:17:03	grym	"how long are you?" "uhh, i dunno, lemme look real quick.."
2022-03-25 19:17:10	←	ubert has quit (Client Quit)
2022-03-25 19:17:31	←	foobaz212 has quit (Quit: Client closed)
2022-03-25 19:17:39	SnoopJ	needing to check I can understand, but opening a socket for that is a whole other thing :)
2022-03-25 19:17:47	→	foobaz212 has joined #python
2022-03-25 19:17:57	Tritium	if you have to look up how big you are (like... how many items are in a remote API, or in a query...) that should look like an expensive call
2022-03-25 19:18:37	Tritium	one of the few times i would (now) do a get method
2022-03-25 19:18:46	grym	.query_size() or something, yeah
2022-03-25 19:18:47	deniska	foo.retrieve_length_from_the_remote_api()
2022-03-25 19:18:54	←	Enissay has quit (Quit: WeeChat 3.0)
2022-03-25 19:19:29	SnoopJ	+1
2022-03-25 19:20:34	→	Enissay has joined #python
2022-03-25 19:22:32	←	foobaz212 has quit (Ping timeout: 256 seconds)
2022-03-25 19:22:45	→	bahamas has joined #python
2022-03-25 19:22:54	→	argument has joined #python
2022-03-25 19:22:55	←	argument has quit (Changing host)
2022-03-25 19:22:55	→	argument has joined #python
2022-03-25 19:23:23	←	ghost43 has quit (Remote host closed the connection)
2022-03-25 19:24:12	→	ghost43 has joined #python
2022-03-25 19:26:10	→	HaMsTeRs has joined #python
2022-03-25 19:28:38	←	argument has quit (Quit: WeeChat 1.9.1)
2022-03-25 19:29:07	→	medecau has joined #python
2022-03-25 19:29:54	←	gabriel_sevecek has quit (Quit: WeeChat 3.4)
2022-03-25 19:30:19	←	ghost43 has quit (Remote host closed the connection)
2022-03-25 19:31:21	→	dante-as has joined #python
2022-03-25 19:31:40	ℹ	Titore_ is now known as Titore
2022-03-25 19:31:50	dante-as	Hi guys, is any possibility to rename the logger declared as logger = logger.getLogger(__name__)?
2022-03-25 19:32:13	←	schumaml has quit (Ping timeout: 240 seconds)
2022-03-25 19:32:16	grym	dante-as: `foo = logger`
2022-03-25 19:32:53	dante-as	grym: No, I meant to rename the `__name__` somehow
2022-03-25 19:33:04	→	ghost43 has joined #python
2022-03-25 19:33:13	grym	dante-as: that's not renaming the logger though
2022-03-25 19:33:40	SnoopJ	dante-as, is there a reason not to create a new Logger instance with the name you're after?
2022-03-25 19:33:40	dante-as	Yeah, that's correct. It's any way of renaming that __name__ ?
2022-03-25 19:33:59	grym	dante-as: well, you can pass whatever you want instead of __name__ anyway
2022-03-25 19:34:27	→	foobaz212 has joined #python
2022-03-25 19:34:30	SnoopJ	You might be able to do `logger.name = "some new name"` but I have no idea if that's intended usage.
2022-03-25 19:34:35	←	nuclearg1 has quit (Ping timeout: 268 seconds)
2022-03-25 19:34:43	dante-as	SnoopJ: Yes. I am having multiple logger objects and it's a big mess
2022-03-25 19:34:52	←	Atque has quit (Quit: ...)
2022-03-25 19:34:53	←	revolve has quit (Ping timeout: 240 seconds)
2022-03-25 19:36:23	←	cdown has quit (Ping timeout: 250 seconds)
2022-03-25 19:36:37	←	diana has quit (Quit: Client closed)
2022-03-25 19:37:09	SnoopJ	dante-as, changing the name attribute seems to do what I would expect in output messages that use %(name) and taking a quick peek inside the logging module it seems like it's generally used as `self.name`
2022-03-25 19:38:54	→	jeho has joined #python
2022-03-25 19:39:13	→	caveman has joined #python
2022-03-25 19:39:16	→	jmdaemon has joined #python
2022-03-25 19:39:31	→	revolve has joined #python
2022-03-25 19:39:41	→	pycurious has joined #python
2022-03-25 19:39:42	newdimension	ChrisWarrick: Just saw your answer. I know it's insignificant, just wondering if there's a better/more Pythonic way. But guess, there isn't?
2022-03-25 19:39:48	→	TheCat has joined #python
2022-03-25 19:40:15	→	Vornicus has joined #python
2022-03-25 19:40:17	←	otis^ has quit (Remote host closed the connection)
2022-03-25 19:40:33	←	HaMsTeRs has quit (Ping timeout: 240 seconds)
2022-03-25 19:41:07	→	MerrinX has joined #python
2022-03-25 19:42:19	→	HaMsTeRs has joined #python
2022-03-25 19:42:25	←	HaMsTeRs has quit (Client Quit)
2022-03-25 19:42:25	ezakimak	trying to install gstreamer from sources: https://bpa.st/M6GA
2022-03-25 19:43:01	→	[itchyjunk] has joined #python
2022-03-25 19:43:33	→	on^ has joined #python
2022-03-25 19:43:38	←	a1eaiactaest has quit (Ping timeout: 252 seconds)
2022-03-25 19:43:40	dante-as	@SnoopJ: Thanks. It worked like self.logger.name
2022-03-25 19:43:45	←	sonnie has quit (Quit: Client closed)
2022-03-25 19:44:05	SnoopJ	dante-as, `self.logger`? Is that storing a logger on a custom class instance?
2022-03-25 19:44:37	←	flower_ has quit (Ping timeout: 256 seconds)
2022-03-25 19:45:18	→	Giovanni has joined #python
2022-03-25 19:45:30	→	flower_ has joined #python
2022-03-25 19:46:15	←	orbisvicis has quit (Quit: Leaving)
2022-03-25 19:46:27	→	nuclearg1 has joined #python
2022-03-25 19:46:56	←	xheimlich has quit (Ping timeout: 240 seconds)
2022-03-25 19:47:04	←	white2 has quit (Read error: Connection reset by peer)
2022-03-25 19:47:35	→	white2 has joined #python
2022-03-25 19:47:41	→	a1eaiactaest has joined #python
2022-03-25 19:48:10	←	mIk3_08 has quit (Quit: mIk3_08)
2022-03-25 19:48:48	→	moog has joined #python
2022-03-25 19:49:51	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 19:50:17	→	gusto has joined #python
2022-03-25 19:50:25	→	moog_ has joined #python
2022-03-25 19:50:49	←	PublicWiFi has quit (Ping timeout: 272 seconds)
2022-03-25 19:51:00	→	_h4x0r_ has joined #python
2022-03-25 19:51:07	→	jmiehe has joined #python
2022-03-25 19:51:19	←	ghost43 has quit (Remote host closed the connection)
2022-03-25 19:51:51	←	jmiehe has quit (Client Quit)
2022-03-25 19:51:53	←	Masklin has quit (Ping timeout: 252 seconds)
2022-03-25 19:52:09	→	ghost43 has joined #python
2022-03-25 19:52:44	←	nuclearg1 has quit (Ping timeout: 260 seconds)
2022-03-25 19:53:11	←	moog has quit (Ping timeout: 260 seconds)
2022-03-25 19:55:09	←	moldorcoder7 has quit (Ping timeout: 256 seconds)
2022-03-25 19:55:11	→	txer has joined #python
2022-03-25 19:55:44	←	BlackBishop has quit (Quit: WeeChat 3.3)
2022-03-25 19:55:51	←	otisolsen70 has quit (Quit: Leaving)
2022-03-25 19:57:00	→	mefistofeles has joined #python
2022-03-25 19:57:26	←	califax has quit (Remote host closed the connection)
2022-03-25 19:57:26	←	brabrax has quit (Quit: ZNC 1.8.2 - https://znc.in)
2022-03-25 19:58:19	←	a1eaiactaest has quit (Ping timeout: 260 seconds)
2022-03-25 19:58:34	←	marcello42 has quit (Quit: WeeChat 3.4.1)
2022-03-25 19:58:47	→	Giovanni has joined #python
2022-03-25 19:59:04	→	a1eaiactaest has joined #python
2022-03-25 19:59:23	→	brabrax has joined #python
2022-03-25 19:59:52	←	_wovixo_ has quit (Quit: Leaving)
2022-03-25 19:59:53	←	humberto1 has quit (Ping timeout: 240 seconds)
2022-03-25 20:00:09	→	wovixo has joined #python
2022-03-25 20:00:51	←	m5zs7k has quit (Read error: Connection reset by peer)
2022-03-25 20:00:54	dba	is it possible to get the the start index of sliced list example `list[2:]` how can I retrieve the `2`?
2022-03-25 20:00:57	→	m5zs7k_ has joined #python
2022-03-25 20:01:02	→	moldorcoder7 has joined #python
2022-03-25 20:01:04	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 20:01:30	ℹ	m5zs7k_ is now known as m5zs7k
2022-03-25 20:01:39	SnoopJ	dba, the slice information isn't stored anywhere. If you need to hold onto it, you might want to manually create a slice object. `sl = slice(2, None, None); lst[sl]` is equivalent to `lst[2:]`
2022-03-25 20:02:09	←	krisd has quit (Ping timeout: 240 seconds)
2022-03-25 20:02:14	dba	SnoopJ: Thank you very much, that is very helpful
2022-03-25 20:02:26	SnoopJ	(and on the slice() object the indices are stored as .start .stop and .step)
2022-03-25 20:02:56	dba	Gotcha!
2022-03-25 20:03:07	→	krisd has joined #python
2022-03-25 20:03:29	→	gr33n7007h has joined #python
2022-03-25 20:03:38	←	NoelFlantier3 has quit (Remote host closed the connection)
2022-03-25 20:03:39	→	akk has joined #python
2022-03-25 20:03:41	→	PublicWiFi has joined #python
2022-03-25 20:03:53	←	a1eaiactaest has quit (Ping timeout: 256 seconds)
2022-03-25 20:04:00	→	NoelFlantier3 has joined #python
2022-03-25 20:04:32	→	ericleer has joined #python
2022-03-25 20:05:00	→	nuclearg1 has joined #python
2022-03-25 20:05:02	←	kingsir has quit (Quit: Leaving)
2022-03-25 20:05:36	→	aclark has joined #python
2022-03-25 20:05:38	←	radny has quit (Ping timeout: 252 seconds)
2022-03-25 20:06:05	→	stockholm has joined #python
2022-03-25 20:06:15	←	gevreeen has quit (Ping timeout: 260 seconds)
2022-03-25 20:06:44	→	Barones has joined #python
2022-03-25 20:07:25	→	radny has joined #python
2022-03-25 20:07:26	ChrisWarrick	newdimension: I’d consider len(a) to be slightly nicer than the variable; there isn’t anything better though
2022-03-25 20:08:08	←	gurkenglas has quit (Ping timeout: 240 seconds)
2022-03-25 20:08:36	←	broccoli_lover has quit (Ping timeout: 260 seconds)
2022-03-25 20:08:51	→	humberto1 has joined #python
2022-03-25 20:08:59	←	ericleer has quit (Ping timeout: 256 seconds)
2022-03-25 20:09:02	→	shuck has joined #python
2022-03-25 20:09:47	ChrisWarrick	ezakimak: sudo apt-get build-dep python3-gst-1.0
2022-03-25 20:09:49	←	nuclearg1 has quit (Ping timeout: 272 seconds)
2022-03-25 20:09:55	→	Giovanni has joined #python
2022-03-25 20:09:57	←	frannk has quit (Quit: leaving)
2022-03-25 20:11:34	→	gurkenglas has joined #python
2022-03-25 20:11:54	newdimension	ChrisWarrick: Gotcha, I've been using variables but found them to add unnecessary lines so no more guild about using len() :D
2022-03-25 20:12:01	newdimension	*guilt
2022-03-25 20:13:22	←	Giovanni has quit (Read error: Connection reset by peer)
2022-03-25 20:16:03	←	bahamas has quit (Ping timeout: 250 seconds)
2022-03-25 20:16:41	←	kts has quit (Ping timeout: 256 seconds)
2022-03-25 20:17:03	←	foobaz212 has quit (Quit: Client closed)
2022-03-25 20:17:14	→	foobaz212 has joined #python
2022-03-25 20:17:32	ℹ	irc: disconnected from server
2022-04-21 08:33:20	→	oxide has joined #python
2022-04-21 08:33:20	ℹ	Topic for #python is "Anything Python is on-topic. | Don't paste, use https://bpa.st/+python | Questions about this channel? https://www.pound-python.org | CoC: https://j.mp/psf-coc | Tutorial: https://j.mp/PyTut | New programmer? https://j.mp/23X7emF | Ops: #python-ops"
2022-04-21 08:33:20	ℹ	Topic set by nedbat (~nedbat@python/psf/nedbat) on Sat, 18 Sep 2021 03:27:50
2022-04-21 08:33:20	ℹ	Channel #python: 1581 nicks (1 op, 0 voices, 1580 normals)
2022-04-21 08:33:22	ℹ	Channel created on Wed, 19 May 2021 19:20:29
2022-04-21 08:35:03	ℹ	irc: disconnected from server
2022-04-28 14:51:02	→	oxide has joined #python
2022-04-28 14:51:02	ℹ	Topic for #python is "Anything Python is on-topic. | Don't paste, use https://bpa.st/+python | Questions about this channel? https://www.pound-python.org | CoC: https://j.mp/psf-coc | Tutorial: https://j.mp/PyTut | New programmer? https://j.mp/23X7emF | Ops: #python-ops"
2022-04-28 14:51:02	ℹ	Topic set by nedbat (~nedbat@python/psf/nedbat) on Sat, 18 Sep 2021 03:27:50
2022-04-28 14:51:02	ℹ	Channel #python: 1610 nicks (1 op, 0 voices, 1609 normals)
2022-04-28 14:51:03	ℹ	Channel created on Wed, 19 May 2021 19:20:29
2022-04-28 14:51:22	←	nomic has quit (Quit: Leaving)
2022-04-28 14:51:31	←	caveman has quit (Quit: caveman)
2022-04-28 14:51:33	→	han-solo has joined #python
2022-04-28 14:52:09	→	caveman has joined #python
2022-04-28 14:52:16	oxide	i have a directed, unweighted graph. for two nodes A,B, i want to find the optimal meeting point, i.e. a node C such that max(dist(A,C),dist(C,B)) is minimised
2022-04-28 14:52:47	oxide	is there a better method than doing single-source dijkstra on both A,B?
2022-04-28 14:52:51	←	bindu_ has quit (Ping timeout: 276 seconds)
2022-04-28 14:53:30	→	cdown has joined #python
2022-04-28 14:53:41	←	arinov has quit (Ping timeout: 272 seconds)
2022-04-28 14:54:55	→	bluesmonk has joined #python
2022-04-28 14:58:01	Fossil	How would I access these values? {b'time_added': 1651134154, b'seeding_time': 0, b'active_time': 3803}.  I dont understand what that b means (I am very new to Python, coming from PHP :-)
2022-04-28 14:58:31	parv	b'' denotes a byte string
2022-04-28 14:58:34	bjs	Fossil: that_thing[b'time_added']
2022-04-28 14:59:24	Fossil	lol thanks. I was doing just 'time_added' but I needed to add that b back again apparently
2022-04-28 14:59:54	bjs	Fossil: just 'time_added' in a normal string (text), but b'time_added' is bytes
2022-04-28 15:00:04	Fossil	Roger, thanks
2022-04-28 15:00:14	sy	Fossil: you may find this snippet useful: https://0x0.st/oT7f.txt - it converts many objects with byte code values to normal strings, you can remove the tuple and list things if you don't need them
2022-04-28 15:00:14	bjs	Fossil: b'time_added' is really just a shorthand for bytes([0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64])
2022-04-28 15:00:39	Fossil	Cool
2022-04-28 15:01:12	←	lina has quit (Remote host closed the connection)
2022-04-28 15:01:21	bjs	Fossil: how did you end up with bytes in your dictionary?
2022-04-28 15:01:36	Fossil	Coming from some API's own package
2022-04-28 15:01:52	Fossil	bit odd if you ask me but I am new to Python so yeah
2022-04-28 15:01:54	sy	probably how it's stored in the database, the redis package does this too
2022-04-28 15:01:57	←	synbiose has quit (Ping timeout: 246 seconds)
2022-04-28 15:02:05	←	jbeimler has quit (Ping timeout: 250 seconds)
2022-04-28 15:03:24	→	lina has joined #python
2022-04-28 15:04:11	bjs	Fossil: it seems odd to me too, if they're really text.
2022-04-28 15:04:23	bjs	If it's just "arbitrary data from a database" then fair enough
2022-04-28 15:04:44	←	pa has quit (Quit: quit.)
2022-04-28 15:05:02	→	foobaz212 has joined #python
2022-04-28 15:05:32	←	nuala2 has quit (Read error: Connection reset by peer)
2022-04-28 15:06:15	→	philectro has joined #python
2022-04-28 15:07:51	←	zer0bitz has quit (Read error: Connection reset by peer)
2022-04-28 15:07:55	→	jbeimler has joined #python
2022-04-28 15:08:06	→	pah has joined #python
2022-04-28 15:08:35	←	Kharec2 has quit (Ping timeout: 256 seconds)
2022-04-28 15:09:08	→	Kharec2 has joined #python
2022-04-28 15:09:50	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-28 15:10:07	→	zer0bitz has joined #python
2022-04-28 15:10:31	←	ckdCreations has quit (Read error: Connection reset by peer)
2022-04-28 15:10:48	←	wingsorc has quit (Ping timeout: 260 seconds)
2022-04-28 15:11:48	→	nuala2 has joined #python
2022-04-28 15:14:42	The-Compiler	lina: you probably didn't install it for the same Python (or Python version) you are running. With "python -v" you will see where Python looks for modules; compare that with a list of packages in that package (can usually ask your package manager for one). Maybe you need python3-protobuf instead, depending on what distribution that is.
2022-04-28 15:15:32	→	ckdCreations has joined #python
2022-04-28 15:16:41	→	Taosim has joined #python
2022-04-28 15:17:00	←	Taosim has left #python (ERC 5.4 (IRC client for GNU Emacs 28.1))
2022-04-28 15:18:26	dminuoso	ssbr | syntactic macros aren't very hard in any language with a well-defined AST, which includes Python
2022-04-28 15:18:34	dminuoso	Id say this is mostly wrong.
2022-04-28 15:18:39	→	gurkenglas has joined #python
2022-04-28 15:18:55	ssbr	dminuoso: how is that?
2022-04-28 15:19:24	→	pavlushka has joined #python
2022-04-28 15:19:44	→	mugen has joined #python
2022-04-28 15:19:47	dminuoso	It greatly depends on the feature set. Things like external linkage can be utterly complicated to do right.
2022-04-28 15:19:56	dminuoso	Or maybe cross compilation difficulties.
2022-04-28 15:20:20	ssbr	dminuoso: sure, layering problems where code is executed on one machine to produce code on another machine can be a problem.
2022-04-28 15:20:47	ssbr	dminuoso: that assumes that your macros are code, which many aren't -- most macro systems are just rule-based rewrites (e.g. macro-by-example, as seen in scheme and rust)
2022-04-28 15:21:35	→	nuclearg1 has joined #python
2022-04-28 15:21:57	ssbr	(and yeah, both rust and scheme also have a non-example-based rewriting engine where you run into these problems, but there's nothing insurmountable)
2022-04-28 15:22:04	←	mug3n_ has quit (Ping timeout: 240 seconds)
2022-04-28 15:22:18	ssbr	the real issue is when you don't have a well-enough defined AST to be able to do macros at all. IIUC that's C++'s big problem.
2022-04-28 15:22:37	dminuoso	Im just saying merely a well-defined AST doesnt make a macro language easy.
2022-04-28 15:22:49	dminuoso	well-defined AST is certainly8 a necessity, but its not sufficient,
2022-04-28 15:25:06	→	vezon has joined #python
2022-04-28 15:26:40	←	nuclearg1 has quit (Ping timeout: 260 seconds)
2022-04-28 15:26:43	←	jazzy2 has quit (Ping timeout: 256 seconds)
2022-04-28 15:28:20	→	gitesh has joined #python
2022-04-28 15:32:19	←	arinov_ has quit (Ping timeout: 272 seconds)
2022-04-28 15:33:06	←	xkuru has quit (Read error: Connection reset by peer)
2022-04-28 15:33:32	←	han-solo has quit (Changing host)
2022-04-28 15:33:32	→	han-solo has joined #python
2022-04-28 15:34:45	lina	The-Compiler: thanks, I have python3-protobuf installed
2022-04-28 15:35:37	←	Kharec2 has quit (Quit: WeeChat 3.4.1)
2022-04-28 15:35:51	lina	python -v shows that it checks in some python2.7 directories
2022-04-28 15:36:18	The-Compiler	lina: use the same python executable you are using to run your application
2022-04-28 15:36:32	lina	same command with python3 works.. thanks
2022-04-28 15:36:35	←	kmh has quit (Read error: Connection reset by peer)
2022-04-28 15:36:48	→	kmh has joined #python
2022-04-28 15:37:11	←	kmh has quit (Read error: Connection reset by peer)
2022-04-28 15:37:19	←	cdown has quit (Ping timeout: 240 seconds)
2022-04-28 15:38:04	→	nuclearg1 has joined #python
2022-04-28 15:41:06	←	soju-test-user has quit (Remote host closed the connection)
2022-04-28 15:41:51	→	esther has joined #python
2022-04-28 15:43:05	←	nuclearg1 has quit (Ping timeout: 272 seconds)
2022-04-28 15:43:44	←	brentaarnold has quit (Ping timeout: 256 seconds)
2022-04-28 15:44:56	→	soju-test-user has joined #python
2022-04-28 15:49:04	→	brentaarnold has joined #python
2022-04-28 15:49:56	→	cosimone has joined #python
2022-04-28 15:50:29	→	rama has joined #python
2022-04-28 15:52:49	←	parv has quit (Quit: parv)
2022-04-28 15:56:50	→	m4r35n357 has joined #python
2022-04-28 15:57:01	←	pavlushka has quit (Ping timeout: 272 seconds)
2022-04-28 15:59:25	→	sprout has joined #python
2022-04-28 15:59:37	→	vladoski has joined #python
2022-04-28 15:59:56	vladoski	If in the code I have a coroutine that I don't await
2022-04-28 16:00:05	vladoski	and I get the Warning, is this coroutine still executed?
2022-04-28 16:00:17	vladoski	even if I don't await it so I don't know when's running/finished?
2022-04-28 16:00:45	←	rama has quit (Ping timeout: 246 seconds)
2022-04-28 16:04:25	←	siwica`` has quit (Remote host closed the connection)
2022-04-28 16:04:30	←	AquaL1te has quit (Read error: Connection reset by peer)
2022-04-28 16:06:25	nedbat	vladoski: the warning means the code wasn't run
2022-04-28 16:06:47	vladoski	so if I don't await it the coroutine doesn't even run?
2022-04-28 16:06:49	→	teut has joined #python
2022-04-28 16:06:57	nedbat	vladoski: right
2022-04-28 16:07:16	vladoski	why?
2022-04-28 16:07:25	teut	https://bpa.st/GJPA , can someone help with this please? Don't know why I am getting key error when "is_active" is there in the df
2022-04-28 16:07:37	vladoski	I mean I can understand if it runs but I don't know when and when has finished
2022-04-28 16:07:46	vladoski	but not even running it seems stupid?
2022-04-28 16:08:01	→	cdown has joined #python
2022-04-28 16:08:16	→	georgios has joined #python
2022-04-28 16:08:44	nedbat	vladoski: i can't comment on "stupid", I just know how it works.
2022-04-28 16:08:48	→	p-i- has joined #python
2022-04-28 16:08:56	ssbr	vladoski: to run, it must be passed to something that will run it. That's what await is for.
2022-04-28 16:09:26	→	drogas has joined #python
2022-04-28 16:09:56	→	AquaL1te has joined #python
2022-04-28 16:10:29	vladoski	okay understood thanks
2022-04-28 16:10:40	bjs	vladoski: calling an `async def` creates a paused coroutine.
2022-04-28 16:10:47	→	cdown_ has joined #python
2022-04-28 16:10:54	bjs	vladoski: you need to give it to some scheduler (e.g. asyncio) for it to run. The easiest (but not only) way to do this is with `await`
2022-04-28 16:11:09	vladoski	okok understood
2022-04-28 16:11:25	vladoski	makes sense, without it the coroutine doesn't have a loop where to run
2022-04-28 16:11:31	bjs	vladoski: exactly :)
2022-04-28 16:12:09	←	Lord_of_Life has quit (Ping timeout: 276 seconds)
2022-04-28 16:12:27	vladoski	so if I really wanna run a coroutine without really waiting for the result or knowing when runs I can just use asyncio.run
2022-04-28 16:12:29	→	nuclearg1 has joined #python
2022-04-28 16:12:31	→	Lord_of_Life has joined #python
2022-04-28 16:13:11	mav`rik	vladoski: asyncio.run is still synchronous. The coroutine will run to completion before run returns
2022-04-28 16:13:19	←	cdown has quit (Ping timeout: 240 seconds)
2022-04-28 16:13:23	ℹ	cdown_ is now known as cdown
2022-04-28 16:13:43	bjs	vladoski: if you're in an `async def` and you want to "schedule another coroutine" but not wait for it to finish there and then, you can use asyncio.create_task()
2022-04-28 16:13:55	→	foobaz212 has joined #python
2022-04-28 16:13:55	vladoski	mav`rik, okay
2022-04-28 16:13:59	←	p-i- has quit (Ping timeout: 240 seconds)
2022-04-28 16:14:01	zaher	hi, is django have own frontend browser framework?
2022-04-28 16:14:03	←	ick has quit (Ping timeout: 246 seconds)
2022-04-28 16:14:05	vladoski	bjs, okay okay thanks
2022-04-28 16:14:19	←	pydev1 has quit (Ping timeout: 240 seconds)
2022-04-28 16:14:19	bjs	vladoski: but note that the way asyncio works is that it switches between different `async def`s as it goes, so the other coroutine won't "run" until asyncio switches away from the current one (at an `await`)
2022-04-28 16:14:30	exarkun	vladoski: Make sure you have error logging set up for it, otherwise the most likely thing that will happen is you'll have a trivial programming error at the top and it will never run anyway and you'll spend an hour debugging it.
2022-04-28 16:15:17	←	pretty_dumm_guy has quit (Quit: WeeChat 3.5)
2022-04-28 16:16:13	→	pretty_dumm_guy has joined #python
2022-04-28 16:16:48	←	scienceape has quit (Quit: Client closed)
2022-04-28 16:17:05	→	wyclif has joined #python
2022-04-28 16:18:39	←	nuclearg1 has quit (Ping timeout: 240 seconds)
2022-04-28 16:20:03	←	philectro has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2022-04-28 16:21:32	→	fbiagent has joined #python
2022-04-28 16:25:49	←	fbiagent has quit (Remote host closed the connection)
2022-04-28 16:27:12	nedbat	zaher: django doesn't have a browser framework, and #django will have better answers.
2022-04-28 16:27:16	→	hans_ has joined #python
2022-04-28 16:27:40	→	fbiagent has joined #python
2022-04-28 16:27:47	zaher	ty nedbat
2022-04-28 16:28:29	hans_	to separate lines without actual newlines python, you use semicolon?
2022-04-28 16:28:46	hans_	or what do you use?
2022-04-28 16:28:49	exarkun	newlines
2022-04-28 16:28:57	→	baffodoro has joined #python
2022-04-28 16:29:04	hans_	exarkun: when newlines are not available
2022-04-28 16:29:05	nedbat	hans_: semicolons work, but they are very very rare.  Why not newlines?
2022-04-28 16:29:10	→	ldlflw has joined #python
2022-04-28 16:29:14	exarkun	python has limited support for separating statements with ; but no one writes any real programs with them
2022-04-28 16:29:25	nedbat	hans_: there are many places a newline cannot be replaced by semicolons
2022-04-28 16:29:27	exarkun	you might write `python -c 'import foo; foo.bar()'` for some quick thing on the cli
2022-04-28 16:29:29	→	Abhigbos2020 has joined #python
2022-04-28 16:29:35	←	EvilDMP has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-28 16:29:35	hans_	exactly like that, thanks
2022-04-28 16:29:42	ldlflw	hello
2022-04-28 16:29:44	ldlflw	bui
2022-04-28 16:29:44	exarkun	(but of course you can put newlines in a command on the cli so even that's not always ideal or required)
2022-04-28 16:30:02	hans_	just saw this code in the wild, what is "linux2" ?  >system_platform:str = platform.system().lower(); if system_platform == "linux" or system_platform == "linux2":
2022-04-28 16:30:33	ℹ	Abhigbos2020 is now known as Abhigbos
2022-04-28 16:31:00	→	driib25 has joined #python
2022-04-28 16:32:05	hans_	i'll try asking #linux  ^^
2022-04-28 16:33:07	←	driib2 has quit (Ping timeout: 272 seconds)
2022-04-28 16:33:07	ℹ	driib25 is now known as driib2
2022-04-28 16:33:08	←	joey has quit (Quit: WeeChat 3.5)
2022-04-28 16:34:15	←	iomari891 has quit (Ping timeout: 276 seconds)
2022-04-28 16:34:22	nedbat	hans_: see the second bullet here:  https://docs.python.org/3/whatsnew/3.3.html#porting-python-code
2022-04-28 16:35:25	→	rama has joined #python
2022-04-28 16:37:10	→	admin123 has joined #python
2022-04-28 16:38:19	←	baffodoro has quit (Quit: Leaving)
2022-04-28 16:39:15	←	jpn has quit (Ping timeout: 256 seconds)
2022-04-28 16:39:49	←	admin124 has quit (Ping timeout: 256 seconds)
2022-04-28 16:40:38	→	jpn has joined #python
2022-04-28 16:41:22	→	Henry_ has joined #python
2022-04-28 16:41:55	←	mcleuder has quit (Quit: mcleuder)
2022-04-28 16:42:05	ℹ	HorrificShroud is now known as mpmc
2022-04-28 16:42:56	→	arinov_ has joined #python
2022-04-28 16:43:38	→	DrBrownBear has joined #python
2022-04-28 16:45:00	←	white2 has quit (Ping timeout: 240 seconds)
2022-04-28 16:45:25	→	mcleuder has joined #python
2022-04-28 16:46:04	ℹ	BillyZane2 is now known as BillyZane
2022-04-28 16:46:09	→	bitkiller has joined #python
2022-04-28 16:46:25	←	rama has quit (Ping timeout: 272 seconds)
2022-04-28 16:48:56	→	oakridge has joined #python
2022-04-28 16:49:25	→	ick has joined #python
2022-04-28 16:50:55	←	oakridge has quit (Client Quit)
2022-04-28 16:51:30	←	revolve has quit (Ping timeout: 246 seconds)
2022-04-28 16:52:04	→	kmh has joined #python
2022-04-28 16:53:27	→	revolve has joined #python
2022-04-28 16:55:39	←	Oddity has quit (Ping timeout: 240 seconds)
2022-04-28 16:57:05	→	quhar has joined #python
2022-04-28 16:57:21	←	quhar has quit (Remote host closed the connection)
2022-04-28 16:57:38	→	quhar has joined #python
2022-04-28 16:57:45	→	zeenk has joined #python
2022-04-28 16:58:51	→	oakridge has joined #python
2022-04-28 16:59:05	→	ssbr_ has joined #python
2022-04-28 16:59:08	←	oakridge has quit (Client Quit)
2022-04-28 17:00:06	→	EvilDMP has joined #python
2022-04-28 17:01:15	←	ssbr has quit (Ping timeout: 250 seconds)
2022-04-28 17:01:37	→	skapata has joined #python
2022-04-28 17:01:37	←	skapata has quit (Changing host)
2022-04-28 17:01:37	→	skapata has joined #python
2022-04-28 17:02:41	→	B33F_1337 has joined #python
2022-04-28 17:03:39	←	arinov_ has quit (Ping timeout: 240 seconds)
2022-04-28 17:03:45	→	pydev1 has joined #python
2022-04-28 17:05:38	→	nuclearg1 has joined #python
2022-04-28 17:07:57	→	ssbr` has joined #python
2022-04-28 17:07:57	←	Abhigbos has quit (Ping timeout: 272 seconds)
2022-04-28 17:08:21	←	mcleuder has quit (Remote host closed the connection)
2022-04-28 17:09:04	→	df_data has joined #python
2022-04-28 17:10:03	←	nuclearg1 has quit (Ping timeout: 246 seconds)
2022-04-28 17:10:08	←	ssbr_ has quit (Ping timeout: 248 seconds)
2022-04-28 17:10:34	←	EvilDMP has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-28 17:12:07	←	georgios has quit (Ping timeout: 240 seconds)
2022-04-28 17:13:34	←	pulsar12 has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2022-04-28 17:13:38	→	masta`` has joined #python
2022-04-28 17:15:21	→	Abhigbos has joined #python
2022-04-28 17:15:51	←	KirkMcDonald has quit (Ping timeout: 276 seconds)
2022-04-28 17:17:04	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-28 17:18:05	←	bluesmonk has quit (Ping timeout: 272 seconds)
2022-04-28 17:19:08	←	pydev1 has quit (Ping timeout: 260 seconds)
2022-04-28 17:20:05	←	teut has quit (Quit: Client closed)
2022-04-28 17:20:06	←	milkt has quit (Remote host closed the connection)
2022-04-28 17:20:08	apollo13	on ubuntu 18.04 this /usr/bin/python3.8 -Esm pip install --isolated --ignore-installed --prefix /tmp/pdm-build-env-vipwaccb-shared django gives me "ERROR: Can not combine '--user' and '--prefix' as they imply different installation locations"
2022-04-28 17:20:14	→	txtsd has joined #python
2022-04-28 17:20:18	apollo13	I am not sure why it would think user is specified, any ideas?
2022-04-28 17:20:37	→	rama has joined #python
2022-04-28 17:20:56	→	milkt has joined #python
2022-04-28 17:21:12	→	joey has joined #python
2022-04-28 17:21:32	→	teut has joined #python
2022-04-28 17:21:34	Andrew	apollo13: (1) Check aliases
2022-04-28 17:21:37	Andrew	apollo13: (2) check if there is a wrapper script around pip that adds it for you
2022-04-28 17:22:14	apollo13	Andrew: nope on aliases and I do execute "python -mpip" so wrapper scripts should not matter, no?
2022-04-28 17:22:24	→	KirkMcDonald has joined #python
2022-04-28 17:22:37	Andrew	Hmm, that's true
2022-04-28 17:23:18	Andrew	That suonds like a system-specific issue, might wait for someone who's familiar with GNU/Linux and Ubuntu
2022-04-28 17:23:31	apollo13	I am fully prepated to blame the shitty packaging from ubuntu; or maybe it is a bug in pip 9 XD
2022-04-28 17:23:46	nedbat	apollo13: check environment variables and config files: https://pip.pypa.io/en/stable/topics/configuration/
2022-04-28 17:23:49	→	Lando-HoloNet has joined #python
2022-04-28 17:24:20	apollo13	nedbat: no config files or env variables used
2022-04-28 17:24:46	apollo13	let me try in a fresh ubuntu 18.04 container
2022-04-28 17:24:53	nedbat	apollo13: /etc/pip.conf ?
2022-04-28 17:24:54	Andrew	Where is pip?
2022-04-28 17:25:05	apollo13	nedbat: none-existant
2022-04-28 17:25:11	apollo13	Andrew: what do you mean?
2022-04-28 17:25:20	apollo13	pip 9.0.1 from /usr/lib/python3/dist-packages (python 3.8)
2022-04-28 17:25:38	Andrew	sounds like it shouldn't do anything fishy
2022-04-28 17:25:39	nedbat	apollo13: i see you have -E and --isolated
2022-04-28 17:25:57	apollo13	nedbat: yes
2022-04-28 17:25:58	nedbat	apollo13: so i don't know, sorry
2022-04-28 17:26:04	→	kuwv has joined #python
2022-04-28 17:26:51	apollo13	wtf works in a docker cntainer
2022-04-28 17:27:04	→	Guest5044 has joined #python
2022-04-28 17:27:11	apollo13	oh but only as root
2022-04-28 17:27:13	apollo13	not as user
2022-04-28 17:27:33	Andrew	Docker isn't a standard setup
2022-04-28 17:27:40	←	DrBrownBear has quit (Remote host closed the connection)
2022-04-28 17:27:42	apollo13	Andrew: for all intents and purposes here it is
2022-04-28 17:27:53	apollo13	I just wanted to reproduce the failure after all
2022-04-28 17:28:18	ldlflw	favorite?
2022-04-28 17:28:19	apollo13	ie it is nothing I did do to my system if I see the same behavior in docker
2022-04-28 17:28:29	apollo13	ldlflw: stop spaming people
2022-04-28 17:28:38	←	quhar has quit (Quit: quhar)
2022-04-28 17:28:50	ℹ	Guest5044 is now known as IBeRyUS
2022-04-28 17:29:19	nedbat	ldlflw: hi, what's up?
2022-04-28 17:30:00	→	PJBoy has joined #python
2022-04-28 17:30:49	←	rama has quit (Ping timeout: 256 seconds)
2022-04-28 17:32:01	ssbr`	ah, that's where the spam PM came from.
2022-04-28 17:32:08	ℹ	Mode #python [+o ssbr`] by ChanServ
2022-04-28 17:32:20	ℹ	Mode #python [+b *!*@195.244.5.79] by ssbr`
2022-04-28 17:32:21	←	ssbr` has kicked ldlflw (no onlyfans spam)
2022-04-28 17:32:31	ℹ	Mode #python [-o ssbr`] by ChanServ
2022-04-28 17:32:32	→	zaher_ has joined #python
2022-04-28 17:32:34	←	YuGiOhJCJ has quit (Ping timeout: 240 seconds)
2022-04-28 17:34:49	←	IBeRyUS has quit (Quit: Client closed)
2022-04-28 17:35:10	apollo13	nedbat: uff --user defaults to true
2022-04-28 17:35:11	←	zaher has quit (Ping timeout: 272 seconds)
2022-04-28 17:35:15	→	YuGiOhJCJ has joined #python
2022-04-28 17:35:22	apollo13	at least in the variant ubuntu installs it
2022-04-28 17:35:24	apollo13	ffs
2022-04-28 17:35:31	→	pwug has joined #python
2022-04-28 17:36:58	apollo13	*sigh* they did indeed patch that
2022-04-28 17:37:03	←	vanessa has quit (Remote host closed the connection)
2022-04-28 17:37:04	←	milkt has quit (Ping timeout: 240 seconds)
2022-04-28 17:37:29	jess	ssbr`, nedbat: did you both get a spam PM from them?
2022-04-28 17:37:36	←	teut has quit (Ping timeout: 252 seconds)
2022-04-28 17:37:59	nedbat	jess: no
2022-04-28 17:38:00	ssbr`	jess: I did, after rejoining when debugging some connectivity issue. I think nedbat was just looking at their post history in channel.
2022-04-28 17:38:05	nedbat	right
2022-04-28 17:38:17	jess	cool
2022-04-28 17:38:39	jess	thanks
2022-04-28 17:38:51	→	codificat has joined #python
2022-04-28 17:39:23	←	wyclif has quit (Ping timeout: 250 seconds)
2022-04-28 17:39:35	→	zeenk2 has joined #python
2022-04-28 17:40:09	→	nyah has joined #python
2022-04-28 17:40:09	→	milkt has joined #python
2022-04-28 17:40:16	→	georgios has joined #python
2022-04-28 17:40:29	Andrew	I did too
2022-04-28 17:40:55	←	bart__ has quit (Read error: Connection reset by peer)
2022-04-28 17:40:59	→	fofoni has joined #python
2022-04-28 17:41:14	→	bart__ has joined #python
2022-04-28 17:41:34	←	han-solo has quit (Quit: leaving)
2022-04-28 17:42:09	←	zeenk has quit (Ping timeout: 256 seconds)
2022-04-28 17:42:35	→	nomic has joined #python
2022-04-28 17:45:36	jess	Andrew: thanks
2022-04-28 17:46:02	→	iomari891 has joined #python
2022-04-28 17:46:03	→	Atque has joined #python
2022-04-28 17:46:38	→	orbisvicis has joined #python
2022-04-28 17:46:48	→	jbooker has joined #python
2022-04-28 17:48:21	→	blindguard has joined #python
2022-04-28 17:48:22	→	IBeRyUS has joined #python
2022-04-28 17:48:28	←	cosimone has quit (Remote host closed the connection)
2022-04-28 17:48:50	→	grooverman has joined #python
2022-04-28 17:50:42	→	imakestuff has joined #python
2022-04-28 17:51:01	imakestuff	can anyone please suggest a good guide on SqlAlchemy? thanks
2022-04-28 17:51:36	→	cosimone has joined #python
2022-04-28 17:53:00	←	ssbr` has quit (Ping timeout: 240 seconds)
2022-04-28 17:53:57	→	derfflinger has joined #python
2022-04-28 17:54:08	→	fling has joined #python
2022-04-28 17:56:17	→	mrgz has joined #python
2022-04-28 17:56:42	←	kevr has quit (Remote host closed the connection)
2022-04-28 17:57:01	→	nuclearg1 has joined #python
2022-04-28 17:57:06	←	rsx has quit (Quit: rsx)
2022-04-28 17:57:26	→	kevr has joined #python
2022-04-28 17:58:23	→	siwica has joined #python
2022-04-28 17:58:57	←	zeenk2 has quit (Quit: Konversation terminated!)
2022-04-28 17:59:56	→	kostkon_ has joined #python
2022-04-28 18:00:08	←	YuGiOhJCJ has quit (Quit: YuGiOhJCJ)
2022-04-28 18:00:11	←	bob_x1 has quit (Remote host closed the connection)
2022-04-28 18:00:15	→	p-i- has joined #python
2022-04-28 18:00:24	→	slowButPresent has joined #python
2022-04-28 18:00:30	→	bob_x1 has joined #python
2022-04-28 18:00:49	→	zeenk has joined #python
2022-04-28 18:01:16	←	fofoni has quit (Quit: Leaving)
2022-04-28 18:02:13	siwica	touch /tmp/test.txt && python -c "f = open('/tmp/test.txt', 'wb'); f.seek(10); print(f.tell()); f.write(b'abc'); print(f.tell())" && cat /tmp/test.txt
2022-04-28 18:02:25	←	nuclearg1 has quit (Ping timeout: 272 seconds)
2022-04-28 18:03:00	siwica	Why are seek() and tell() behaving in this way? Why can a seek(10) move the cursor on an empty file?
2022-04-28 18:03:51	←	nomic has quit (Quit: Leaving)
2022-04-28 18:04:46	→	nomic has joined #python
2022-04-28 18:05:04	←	fling has quit (Ping timeout: 240 seconds)
2022-04-28 18:05:15	←	KimK has quit (Ping timeout: 276 seconds)
2022-04-28 18:05:53	→	EgonX has joined #python
2022-04-28 18:06:09	←	zeenk has quit (Quit: Konversation terminated!)
2022-04-28 18:07:38	→	fling has joined #python
2022-04-28 18:08:52	ℹ	test_ is now known as _flood
2022-04-28 18:08:55	→	wyclif has joined #python
2022-04-28 18:09:09	←	pretty_dumm_guy has quit (Ping timeout: 276 seconds)
2022-04-28 18:11:45	←	tricklynch has quit (Ping timeout: 276 seconds)
2022-04-28 18:12:12	←	roxfan has quit (Ping timeout: 240 seconds)
2022-04-28 18:12:29	←	IBeRyUS has quit (Quit: Client closed)
2022-04-28 18:12:33	←	Pickchea has quit (Ping timeout: 272 seconds)
2022-04-28 18:12:56	←	zaher_ has left #python (Leaving Channel)
2022-04-28 18:13:21	→	tricklynch has joined #python
2022-04-28 18:13:28	←	Atque has quit (Quit: ...)
2022-04-28 18:13:47	nedbat	siwica: that's the behavior of the underlying system calls.
2022-04-28 18:13:49	→	carl- has joined #python
2022-04-28 18:14:16	→	squirrel has joined #python
2022-04-28 18:14:29	→	nuclearg1 has joined #python
2022-04-28 18:15:01	←	JaredCE has quit (Ping timeout: 256 seconds)
2022-04-28 18:15:13	→	bluesmonk has joined #python
2022-04-28 18:16:09	←	Abhigbos has quit (Ping timeout: 256 seconds)
2022-04-28 18:16:35	→	Atque has joined #python
2022-04-28 18:16:46	→	pretty_dumm_guy has joined #python
2022-04-28 18:17:30	siwica	nedbat: I, understood in the meantime. A seek() beyond eof enlarges the file and zeros get prepended on the next write. Since they are not printed I didn't see it in the terminal output.
2022-04-28 18:17:41	mav`rik	siwica: Files can have "holes" in a number of OS. You can seek past the end of file and write.
2022-04-28 18:17:59	nedbat	siwica: yes:  hexdump -C /tmp/test.txt
2022-04-28 18:18:04	←	bitdex has quit (Ping timeout: 240 seconds)
2022-04-28 18:19:06	mav`rik	siwica: look up sparse files. The gaps are recorded as metadata in the inodes representing the file
2022-04-28 18:19:37	←	sumi80m has quit (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
2022-04-28 18:19:39	siwica	mav`rik: That's interesting. I didn't know this.
2022-04-28 18:19:41	←	tricklynch has quit (Ping timeout: 250 seconds)
2022-04-28 18:20:01	←	derfflinger has left #python (Leaving)
2022-04-28 18:20:42	→	bitdex has joined #python
2022-04-28 18:21:13	→	zerothule has joined #python
2022-04-28 18:21:55	→	pydev1 has joined #python
2022-04-28 18:22:20	→	ibrahim_ has joined #python
2022-04-28 18:22:24	siwica	mav`rik: The gaps seem to count as file size though (at least with ext4 on my machine) and zeros are printed when reading from the gap. So this seems just an implementation detail of the file system? Or do different file systems behave differently in this regard?
2022-04-28 18:22:27	→	tricklynch has joined #python
2022-04-28 18:23:35	←	hanetzer has quit (Quit: WeeChat 3.5)
2022-04-28 18:24:41	mav`rik	siwica: the file, when read may appear to have zeroes, but that can be a filesystem implementation detail, and the overall size as shown by ls may well differ compared to that by df (you could test this by seeking to 1GB, writing, then seeing df's number as much smaller than ls)
2022-04-28 18:24:57	mav`rik	siwica: not all OS/filesystems do this though
2022-04-28 18:25:27	←	zerothule has quit (Ping timeout: 240 seconds)
2022-04-28 18:25:50	→	[itchyjunk] has joined #python
2022-04-28 18:26:13	Peng	If I remember correctly, "filefrag -v test.txt" shows sparseness if you're on Linux(?)
2022-04-28 18:26:40	→	Arw- has joined #python
2022-04-28 18:27:07	←	bindu has quit (Ping timeout: 272 seconds)
2022-04-28 18:27:29	←	imakestuff has quit (Ping timeout: 250 seconds)
2022-04-28 18:27:29	←	Arw has quit (Ping timeout: 256 seconds)
2022-04-28 18:27:45	←	ice9 has quit (Ping timeout: 272 seconds)
2022-04-28 18:28:13	siwica	mav`rik: true! Just tested it out.
2022-04-28 18:28:18	←	tricklynch has quit (Read error: Connection reset by peer)
2022-04-28 18:28:30	←	Atque has quit (Quit: ...)
2022-04-28 18:28:59	←	orbisvicis has quit (Ping timeout: 240 seconds)
2022-04-28 18:29:11	←	jbeimler has quit (Ping timeout: 256 seconds)
2022-04-28 18:30:49	→	tricklynch has joined #python
2022-04-28 18:31:13	→	sumi80m has joined #python
2022-04-28 18:31:21	→	bindu has joined #python
2022-04-28 18:33:31	←	Piraty has left #python (-)
2022-04-28 18:34:08	←	CatCow has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-04-28 18:35:08	←	bitdex has quit (Quit: = "")
2022-04-28 18:35:18	←	jbooker has quit (Quit: jbooker)
2022-04-28 18:40:33	→	teut has joined #python
2022-04-28 18:40:48	←	Masklin has quit (Ping timeout: 248 seconds)
2022-04-28 18:41:19	teut	typing `python main.py ` in the terminal , runs the file, how to supply argument so that debugger is executed?
2022-04-28 18:41:24	teut	I am using vscode
2022-04-28 18:41:32	→	arinov_ has joined #python
2022-04-28 18:41:52	→	Atque has joined #python
2022-04-28 18:41:59	←	Atque has quit (Client Quit)
2022-04-28 18:42:07	→	Masklin has joined #python
2022-04-28 18:42:14	mav`rik	teut: `python -m pdb main.py` perhaps. Though there might be a more VSCode-specific way to manage this
2022-04-28 18:42:27	teut	will that run vscode debugger?
2022-04-28 18:42:33	→	jbeimler has joined #python
2022-04-28 18:42:45	mav`rik	teut: no, I have no idea about VSCode sorry
2022-04-28 18:42:47	teut	pdb , I find a bit tough
2022-04-28 18:43:25	→	Abhigbos has joined #python
2022-04-28 18:43:50	←	Abhigbos has quit (Client Quit)
2022-04-28 18:44:03	→	Abhigbos has joined #python
2022-04-28 18:44:19	←	Abhigbos has quit (Client Quit)
2022-04-28 18:44:52	→	bloody has joined #python
2022-04-28 18:46:29	teut	https://bpa.st/A5LQ.  oh so that is just path to vscode's debugger and python file
2022-04-28 18:47:00	←	jbeimler has quit (Ping timeout: 246 seconds)
2022-04-28 18:47:21	→	ssbr has joined #python
2022-04-28 18:47:28	→	zeenk has joined #python
2022-04-28 18:47:50	→	jbeimler has joined #python
2022-04-28 18:48:16	←	Mathisen has quit (Quit: ZNC 1.8.2 - https://znc.in)
2022-04-28 18:48:36	←	oprypin has quit (Remote host closed the connection)
2022-04-28 18:49:02	←	adanwan_ has quit (Remote host closed the connection)
2022-04-28 18:49:35	→	Mathisen has joined #python
2022-04-28 18:49:46	→	oprypin has joined #python
2022-04-28 18:50:09	→	rama has joined #python
2022-04-28 18:50:28	→	[_] has joined #python
2022-04-28 18:50:47	←	upsala has quit (Quit: WeeChat 3.5)
2022-04-28 18:52:10	teut	import pdb; pdb.set_trace()
2022-04-28 18:52:10	teut	does vscode inserts these lines of code when we set a breakpoint?
2022-04-28 18:52:15	←	jbeimler has quit (Ping timeout: 246 seconds)
2022-04-28 18:52:17	→	frmlof has joined #python
2022-04-28 18:52:26	teut	I was reading this https://docs.python.org/3/library/pdb.html
2022-04-28 18:53:12	hodapp	https://pypi.org/project/goto-statement/ aww, this doesn't work on 3.8
2022-04-28 18:53:24	←	[itchyjunk] has quit (Ping timeout: 260 seconds)
2022-04-28 18:53:26	mav`rik	teut: modern python you can use `breakpoint()` iirc, which might do what you hope
2022-04-28 18:53:41	teut	yes, that's written in the docs
2022-04-28 18:53:53	teut	it's a keyword
2022-04-28 18:54:00	→	JaredCE has joined #python
2022-04-28 18:54:17	mav`rik	https://peps.python.org/pep-0553/
2022-04-28 18:54:28	teut	but its too much work to write all that
2022-04-28 18:54:29	←	revolve has quit (Read error: Connection reset by peer)
2022-04-28 18:54:35	teut	and then remove after work
2022-04-28 18:55:20	→	upsala has joined #python
2022-04-28 18:55:49	→	jbeimler has joined #python
2022-04-28 18:55:50	mav`rik	teut: you can't do it from VSCode? https://python.land/creating-python-programs/python-in-vscode#breakpoints
2022-04-28 18:56:19	teut	do what?
2022-04-28 18:56:24	→	revolve has joined #python
2022-04-28 18:56:44	teut	I can set breakpooints in vscode, yes  , if you are talking about that
2022-04-28 18:56:55	mav`rik	teut: set breakpoints that don't necessitate modifying, then undoing, changes which add breakpoints for debugging
2022-04-28 18:57:27	teut	doing it on the gui is very easy
2022-04-28 18:58:32	teut	but in code looks dirty
2022-04-28 18:58:50	ℹ	[_] is now known as [itchyjunk]
2022-04-28 18:58:56	→	Tempesta has joined #python
2022-04-28 18:59:09	→	Elliria has joined #python
2022-04-28 18:59:13	←	arinov_ has quit (Ping timeout: 256 seconds)
2022-04-28 18:59:34	teut	ok, I will think about writing code with that thought, thanks mav`rik
2022-04-28 19:01:09	←	jbeimler has quit (Ping timeout: 276 seconds)
2022-04-28 19:01:39	←	giorgian has quit (Ping timeout: 240 seconds)
2022-04-28 19:04:30	←	rama has quit (Ping timeout: 246 seconds)
2022-04-28 19:05:00	→	lagk4365 has joined #python
2022-04-28 19:05:03	Andrew	What are python breakpoints for
2022-04-28 19:05:31	nedbat	Andrew: starting the debugger
2022-04-28 19:05:38	→	zebrag has joined #python
2022-04-28 19:05:46	⚡	Andrew doesn't even know a python debugger
2022-04-28 19:06:05	Andrew	I prefer getting dropped into an interactive session whenever there's an error
2022-04-28 19:06:44	mav`rik	Andrew: Which is exactly what `python -m pdb your_program.py` will do
2022-04-28 19:06:46	Andrew	So sometimes I just interweave some looped exec() and eval()'s (catches SyntaxError from eval to exec) and get a dumb interactive shell
2022-04-28 19:07:03	→	Ruptile has joined #python
2022-04-28 19:07:38	nedbat	Andrew: you should definitely try out pdb
2022-04-28 19:07:53	→	Atque has joined #python
2022-04-28 19:07:56	teut	with vscode it will show all the variables on the side
2022-04-28 19:08:06	teut	hovering facility etc
2022-04-28 19:08:10	←	Atque has quit (Client Quit)
2022-04-28 19:08:31	→	adanwan has joined #python
2022-04-28 19:09:16	→	giorgian has joined #python
2022-04-28 19:09:33	→	frat3rius0 has joined #python
2022-04-28 19:09:45	←	frat3rius has quit (Ping timeout: 246 seconds)
2022-04-28 19:09:45	ℹ	frat3rius0 is now known as frat3rius
2022-04-28 19:10:17	→	sandipan has joined #python
2022-04-28 19:10:20	Andrew	Not specific to vscode
2022-04-28 19:10:25	Andrew	nedbat: I will, thanks
2022-04-28 19:10:58	Andrew	pdb isn't in pip :(
2022-04-28 19:11:05	SnoopJ	Andrew, it's part of the standard library
2022-04-28 19:11:21	Andrew	what-
2022-04-28 19:11:29	SnoopJ	https://docs.python.org/3/library/pdb.html
2022-04-28 19:11:36	→	jbeimler has joined #python
2022-04-28 19:11:37	Andrew	Thanks
2022-04-28 19:11:48	←	Elliria has quit (Quit: Konversation terminated!)
2022-04-28 19:12:23	→	john__ has joined #python
2022-04-28 19:13:15	←	john__ has quit (Max SendQ exceeded)
2022-04-28 19:13:30	←	bytehackr has quit (Ping timeout: 276 seconds)
2022-04-28 19:13:31	→	foobaz212 has joined #python
2022-04-28 19:13:51	→	john__ has joined #python
2022-04-28 19:13:52	lagk4365	hello, help can't register an account and I can't and I really need it - https://w.metty.us/regsiter687
2022-04-28 19:14:07	←	wyclif has quit (Ping timeout: 240 seconds)
2022-04-28 19:14:18	←	txtsd has quit (Ping timeout: 246 seconds)
2022-04-28 19:14:38	lidless	no thank you
2022-04-28 19:14:42	grym	sus link
2022-04-28 19:14:43	grym	(〠_〠)
2022-04-28 19:15:00	→	sudomannn has joined #python
2022-04-28 19:15:05	nedbat	lagk4365: is that a #python question?
2022-04-28 19:15:13	←	john__ has quit (Remote host closed the connection)
2022-04-28 19:15:20	→	horner has joined #python
2022-04-28 19:15:30	Andrew	lagk4365: Wrong place to ask
2022-04-28 19:15:36	←	lagk4365 has quit (K-Lined)
2022-04-28 19:15:42	→	wyclif has joined #python
2022-04-28 19:16:33	→	txtsd has joined #python
2022-04-28 19:16:46	SnoopJ	oh hey, the dead-trees edition of Fluent Python 2E is out
2022-04-28 19:17:21	hodapp	we just had the same spam in #emacs but with a sob-story about Ukraine
2022-04-28 19:17:31	←	nortoh has quit (Quit: this is not importent)
2022-04-28 19:17:55	←	jbeimler has quit (Ping timeout: 256 seconds)
2022-04-28 19:18:26	wyre	why pip says wheel it's not installed when it's actually using a cached version? https://bpa.st/PMBA
2022-04-28 19:18:27	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-28 19:18:37	←	sudomann has quit (Ping timeout: 250 seconds)
2022-04-28 19:19:40	SnoopJ	wyre, the "Using cached wheel-..." message means "I am going to install the package `wheel` as part of this invocation, and here is where I will get it from," but it is not available during the installation of the other packages
2022-04-28 19:19:54	→	nortoh has joined #python
2022-04-28 19:19:54	←	nortoh has quit (Changing host)
2022-04-28 19:19:54	→	nortoh has joined #python
2022-04-28 19:19:56	→	angelacrust has joined #python
2022-04-28 19:20:23	←	p-i- has quit (Remote host closed the connection)
2022-04-28 19:20:31	wyre	SnoopJ, so ... should I manage to create a venv with wheel inside? 🤔
2022-04-28 19:20:45	←	wyclif has quit (Ping timeout: 256 seconds)
2022-04-28 19:20:52	SnoopJ	wyre, if you need `wheel` to be present before installing some package, you should install it in a separate step, yea.
2022-04-28 19:21:13	→	wyclif has joined #python
2022-04-28 19:22:12	wyre	SnoopJ, so should I do first pip install wheel and the pip install -r requirements.txt?
2022-04-28 19:22:36	SnoopJ	wyre, I don't really know what you're doing, but probably.
2022-04-28 19:23:15	wyre	SnoopJ, usually when I run pip install -r requirements.txt I can see some errors because the venv hasn't wheel installed
2022-04-28 19:23:28	wyre	so ... I'd like to prevent those errors
2022-04-28 19:25:06	ℹ	nan00k_ is now known as nan00k
2022-04-28 19:25:43	→	akk has joined #python
2022-04-28 19:25:47	SnoopJ	wyre, well, if the things you're installing aren't implementing PEP 517/518 to tell pip "here is what is necessary in a build environment for this package," you'll have to do it by hand.
2022-04-28 19:26:30	←	wyclif has quit (Ping timeout: 276 seconds)
2022-04-28 19:26:30	wyre	SnoopJ, well, apparently these packages are able to fallback to legacy setup.py install
2022-04-28 19:26:46	→	wyclif has joined #python
2022-04-28 19:26:52	wyre	but ... I think it's more appropriate to have wheel available in the venv
2022-04-28 19:27:00	wyre	so they don't need to fallback
2022-04-28 19:27:46	SnoopJ	my point is that if the packages can't talk to pip in the modern way to tell it what packages are _build-time_ dependencies, the onus falls to the user who is invoking pip.
2022-04-28 19:28:33	wyre	SnoopJ, the onus? 🤔
2022-04-28 19:30:24	SnoopJ	The responsibility
2022-04-28 19:30:37	→	sudorm has joined #python
2022-04-28 19:31:33	←	teut has quit (Quit: Client closed)
2022-04-28 19:32:28	→	zumba_addict has joined #python
2022-04-28 19:32:32	→	junktext has joined #python
2022-04-28 19:32:34	←	ano has quit (Ping timeout: 240 seconds)
2022-04-28 19:34:02	←	rexbinary has quit (Quit: ZNC - https://znc.in)
2022-04-28 19:34:52	→	cthulchu has joined #python
2022-04-28 19:35:50	←	Ruptile has quit (Quit: ASCII a stupid question, get a stupid ANSI!)
2022-04-28 19:36:12	→	vantage has joined #python
2022-04-28 19:38:45	→	Vornicus has joined #python
2022-04-28 19:38:54	←	daniel-leinweber has quit (Quit: WeeChat 3.4.1)
2022-04-28 19:39:38	←	mnemonic has quit (Quit: WeeChat 3.5)
2022-04-28 19:39:55	→	vdamewood has joined #python
2022-04-28 19:41:25	→	jbeimler has joined #python
2022-04-28 19:41:43	←	pwug has quit (Quit: Leaving)
2022-04-28 19:42:29	←	strugee_ has quit (Ping timeout: 272 seconds)
2022-04-28 19:43:20	→	p-i- has joined #python
2022-04-28 19:43:49	→	uvgisme has joined #python
2022-04-28 19:44:03	←	Enitin has quit (Ping timeout: 276 seconds)
2022-04-28 19:44:16	→	ebrau has joined #python
2022-04-28 19:44:32	→	morgado has joined #python
2022-04-28 19:44:53	morgado	hello I have questions
2022-04-28 19:45:02	morgado	what is / Vs //?
2022-04-28 19:45:28	→	strugee has joined #python
2022-04-28 19:46:09	randall	morgado: In what context?
2022-04-28 19:46:16	←	Guest5 has quit (Quit: Client closed)
2022-04-28 19:46:36	mav`rik	morgado: // forces integer results (round toward negative infinity), whereas / will return a float if the result is non-integral
2022-04-28 19:47:24	←	frost has quit (Ping timeout: 252 seconds)
2022-04-28 19:47:32	SnoopJ	point of clarification: the result doesn't have to be an `int` but it will be floor()ed
2022-04-28 19:47:50	hop	morgado: you can find such things in the index: https://docs.python.org/3/genindex-Symbols.html
2022-04-28 19:47:51	SnoopJ	i.e. `3.14/1 == 3.14` and `3.14//1 == 3.0`
2022-04-28 19:48:21	ℹ	Balzy_ is now known as Balzy
2022-04-28 19:48:23	mav`rik	SnoopJ: Fair point, I had been working purely with integer as inputs in mind
2022-04-28 19:48:23	←	morgado has quit (Remote host closed the connection)
2022-04-28 19:48:46	SnoopJ	mav`rik, I think it's technically still correct as you expressed it since integers are exactly representable, but it's one of those quirks I regularly forget :)
2022-04-28 19:49:24	mav`rik	SnoopJ: integers are only exactly representable if their representation can be performed in 53 bits or fewer I think, assuming I'm understanding you correctly
2022-04-28 19:49:52	←	gurkenglas has quit (Ping timeout: 260 seconds)
2022-04-28 19:50:24	Fossil	Anyone who can help me fix this small issue with replacing data in a dictionary? https://kopy.io/0vsIk#nKH5AZo4E1BG79
2022-04-28 19:50:45	SnoopJ	mav`rik, true :)
2022-04-28 19:51:08	→	luva83 has joined #python
2022-04-28 19:51:56	→	vlado1 has joined #python
2022-04-28 19:52:27	←	luva8 has quit (Ping timeout: 246 seconds)
2022-04-28 19:52:27	ℹ	luva83 is now known as luva8
2022-04-28 19:52:37	→	teut has joined #python
2022-04-28 19:52:45	←	crabbedhaloablut has quit (Remote host closed the connection)
2022-04-28 19:52:46	ℹ	luva8 is now known as luva
2022-04-28 19:53:04	→	crabbedhaloablut has joined #python
2022-04-28 19:53:08	→	imakestuff has joined #python
2022-04-28 19:53:29	←	greenaar has quit (Quit: The Lounge - https://thelounge.chat)
2022-04-28 19:53:48	←	ebrau has quit (Ping timeout: 276 seconds)
2022-04-28 19:54:01	→	qlixed has joined #python
2022-04-28 19:54:24	←	rindolf has quit (Read error: Connection reset by peer)
2022-04-28 19:54:46	→	rindolf has joined #python
2022-04-28 19:54:55	←	m4r35n357 has quit (Quit: Leaving)
2022-04-28 19:56:15	→	greenaar has joined #python
2022-04-28 19:56:50	←	sudorm has quit (Read error: Connection reset by peer)
2022-04-28 19:57:08	→	sudorm has joined #python
2022-04-28 19:57:10	→	GreenResponse has joined #python
2022-04-28 19:58:38	→	Enitin has joined #python
2022-04-28 20:00:23	→	Sargento has joined #python
2022-04-28 20:01:24	←	sprout has quit (Ping timeout: 240 seconds)
2022-04-28 20:01:42	→	twofingersneat has joined #python
2022-04-28 20:02:09	→	rexbinary has joined #python
2022-04-28 20:02:56	←	Enitin has quit (Ping timeout: 260 seconds)
2022-04-28 20:03:06	hodapp	https://pytorch.org/blog/introduction-to-quantization-on-pytorch/#device-and-operator-support - in the example code, what is this "import torchbackend='fbgemm'" syntax?
2022-04-28 20:03:14	→	Enitin has joined #python
2022-04-28 20:04:08	→	Pickchea has joined #python
2022-04-28 20:04:23	Pilate	wild never seen that before
2022-04-28 20:05:17	←	strugee has quit (Ping timeout: 272 seconds)
2022-04-28 20:05:55	→	saroy|afk has joined #python
2022-04-28 20:06:20	←	teut has quit (Quit: Client closed)
2022-04-28 20:06:31	→	strugee has joined #python
2022-04-28 20:08:42	→	roxfan has joined #python
2022-04-28 20:08:55	←	sandipan has quit (Ping timeout: 256 seconds)
2022-04-28 20:09:07	→	pwug has joined #python
2022-04-28 20:09:13	←	bridrod has quit ()
2022-04-28 20:10:44	←	herjazz has quit (Quit: leaving)
2022-04-28 20:10:52	←	saroy|afk has quit (Ping timeout: 260 seconds)
2022-04-28 20:11:14	→	aknot has joined #python
2022-04-28 20:11:24	→	foobaz212 has joined #python
2022-04-28 20:11:44	hodapp	I've not either
2022-04-28 20:12:04	→	fandre1986 has joined #python
2022-04-28 20:12:17	→	lagk4365 has joined #python
2022-04-28 20:13:24	←	Guest39 has quit (Quit: Client closed)
2022-04-28 20:13:27	←	Masklin has quit (Ping timeout: 246 seconds)
2022-04-28 20:13:34	→	Guest39 has joined #python
2022-04-28 20:13:43	→	yupea__ has joined #python
2022-04-28 20:14:15	SnoopJ	It's not valid Python, but I'm not sure if there's a DSL at play here, or if that's a silly typographical error.
2022-04-28 20:14:22	SnoopJ	I'm inclined to think it's the latter.
2022-04-28 20:15:29	→	wakeup has joined #python
2022-04-28 20:15:32	hodapp	it's definitely not syntax I've ever seen
2022-04-28 20:15:43	←	lagk4365 has quit (Client Quit)
2022-04-28 20:15:56	grym	https://nitter.eu/dsakya/status/1244517903744950272
2022-04-28 20:16:25	←	yupea__ has quit (Client Quit)
2022-04-28 20:16:48	→	yupea__ has joined #python
2022-04-28 20:16:55	←	zumba_addict has quit (Quit: Client closed)
2022-04-28 20:16:56	SnoopJ	hodapp, I think it's supposed to be `get_default_qconfig(backend='fbgemm')`, looks like a copy-paste error maybe
2022-04-28 20:17:00	←	FinnElija has quit (Remote host closed the connection)
2022-04-28 20:17:07	hodapp	that could make sense
2022-04-28 20:17:31	→	EvilDMP has joined #python
2022-04-28 20:17:53	SnoopJ	upon further consideration, it seems even more likely: what would a `torchbackend` even do since there's functionality for it in the core
2022-04-28 20:18:01	SnoopJ	a `torchbackend` package*, I mean
2022-04-28 20:18:19	hodapp	no one really knows what torch does, not even the authors
2022-04-28 20:18:59	SnoopJ	oh you know what, it's even simpler
2022-04-28 20:19:01	SnoopJ	there's a missing newline
2022-04-28 20:19:09	→	mitrokov has joined #python
2022-04-28 20:19:13	hodapp	ohhhh
2022-04-28 20:19:16	SnoopJ	`backend='fbgemm'` should be its own line
2022-04-28 20:19:29	←	angelacrust has quit (Quit: Client closed)
2022-04-28 20:19:49	SnoopJ	The software is nice but the docs are still fuzzy around the edges in some places :)
2022-04-28 20:20:35	→	arinov_ has joined #python
2022-04-28 20:21:04	←	fling has quit (Ping timeout: 240 seconds)
2022-04-28 20:21:16	→	bridrod has joined #python
2022-04-28 20:21:23	←	bridrod has quit (Client Quit)
2022-04-28 20:21:48	←	sudorm has quit (Read error: Connection reset by peer)
2022-04-28 20:22:06	→	sudorm has joined #python
2022-04-28 20:22:29	→	fling has joined #python
2022-04-28 20:22:31	←	mrwick has quit (Ping timeout: 256 seconds)
2022-04-28 20:23:21	←	sudorm has quit (Read error: Connection reset by peer)
2022-04-28 20:23:24	←	dogbert2 has quit (Remote host closed the connection)
2022-04-28 20:23:30	←	trace987 has quit (Remote host closed the connection)
2022-04-28 20:23:39	→	sudorm has joined #python
2022-04-28 20:23:39	→	dogbert2 has joined #python
2022-04-28 20:23:42	←	vicfred has quit (Quit: Leaving)
2022-04-28 20:23:42	←	cdown has quit (Ping timeout: 276 seconds)
2022-04-28 20:23:46	→	teut has joined #python
2022-04-28 20:24:02	←	sudorm has quit (Client Quit)
2022-04-28 20:24:38	nedbat	Fossil: i think you need to handle the tuple case differently
2022-04-28 20:24:52	nedbat	Fossil: shouldn't it be wrapped in tuple() ?
2022-04-28 20:26:21	←	EvilDMP has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-28 20:26:28	Pilate	also seems a bit overkill for replacing a value
2022-04-28 20:26:43	→	sprout has joined #python
2022-04-28 20:26:57	→	brownan has joined #python
2022-04-28 20:27:04	nedbat	Pilate: how would you do it?
2022-04-28 20:27:34	←	wakeup has quit (Quit: Client closed)
2022-04-28 20:28:15	←	arinov_ has quit (Ping timeout: 276 seconds)
2022-04-28 20:28:17	→	schumaml has joined #python
2022-04-28 20:28:28	←	vezon has quit (Remote host closed the connection)
2022-04-28 20:28:31	Pilate	iterate items, look for the character you want to replace, set new value?
2022-04-28 20:28:53	Fossil	I "fixed" it by moving to UTF-8 and then doing the replacing later in the program
2022-04-28 20:28:54	→	zerothule has joined #python
2022-04-28 20:29:08	→	johnkeats6 has joined #python
2022-04-28 20:29:32	nedbat	Pilate: the value could be in a dict in a list in a dict, etc.
2022-04-28 20:30:32	→	bridrod has joined #python
2022-04-28 20:31:15	←	nuclearg1 has quit (Ping timeout: 272 seconds)
2022-04-28 20:31:50	←	Guest39 has quit (Quit: Client closed)
2022-04-28 20:32:03	→	Guest39 has joined #python
2022-04-28 20:32:20	←	BASHitup has quit (Ping timeout: 260 seconds)
2022-04-28 20:32:31	←	wyclif has quit (Ping timeout: 272 seconds)
2022-04-28 20:32:33	←	yupea__ has quit (Quit: Leaving)
2022-04-28 20:32:36	←	adiKt has quit (Quit: Connection closed for inactivity)
2022-04-28 20:32:41	Pilate	do you have a file tree in that dict? how do you not know which parts of it will contain filenames?
2022-04-28 20:33:25	nedbat	Pilate: i don't know how deep the data structure is.  It sounds like Fossil has found a better solution anyway.
2022-04-28 20:33:31	←	kuwv has quit (Quit: Client closed)
2022-04-28 20:33:44	→	nuclearg1 has joined #python
2022-04-28 20:34:06	→	justm33 has joined #python
2022-04-28 20:34:32	Pilate	well, a working solution at least :)
2022-04-28 20:35:38	←	digicyc has quit (Quit: WeeChat 2.7.1)
2022-04-28 20:36:07	←	justm3 has quit (Ping timeout: 256 seconds)
2022-04-28 20:36:09	ℹ	justm33 is now known as justm3
2022-04-28 20:36:27	←	Pharyngeal has quit (Ping timeout: 240 seconds)
2022-04-28 20:37:03	→	ttree has joined #python
2022-04-28 20:37:05	→	pretty_d1 has joined #python
2022-04-28 20:37:17	←	pretty_d1 has quit (Client Quit)
2022-04-28 20:37:38	←	foobaz212 has quit (Quit: Client closed)
2022-04-28 20:37:49	←	jbeimler has quit (Ping timeout: 256 seconds)
2022-04-28 20:37:53	→	foobaz212 has joined #python
2022-04-28 20:38:21	←	pretty_dumm_guy has quit (Ping timeout: 250 seconds)
2022-04-28 20:38:31	→	wakeup has joined #python
2022-04-28 20:42:24	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-28 20:42:25	→	Aviran has joined #python
2022-04-28 20:42:47	←	raym has quit (Quit: kernel update, rebooting...)
2022-04-28 20:43:30	←	ketiv has quit (Quit: WeeChat 3.3)
2022-04-28 20:43:36	←	Hanii has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2022-04-28 20:44:21	←	pyre has quit (Read error: Connection reset by peer)
2022-04-28 20:45:01	→	orbisvicis has joined #python
2022-04-28 20:45:09	→	pyre has joined #python
2022-04-28 20:46:36	→	cdown has joined #python
2022-04-28 20:47:12	→	wyclif has joined #python
2022-04-28 20:47:19	←	NotThatRPG has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-28 20:47:28	→	stats4647 has joined #python
2022-04-28 20:47:59	→	Sheilong has joined #python
2022-04-28 20:48:01	←	nuclearg1 has quit (Ping timeout: 256 seconds)
2022-04-28 20:48:02	→	admin124 has joined #python
2022-04-28 20:48:25	←	georgios has quit (Quit: My mom said I should quit)
2022-04-28 20:49:42	→	trace987 has joined #python
2022-04-28 20:49:57	→	tangy has joined #python
2022-04-28 20:50:24	→	FinnElija has joined #python
2022-04-28 20:51:00	←	admin123 has quit (Ping timeout: 276 seconds)
2022-04-28 20:51:55	→	FluffyMask has joined #python
2022-04-28 20:53:57	→	jbeimler has joined #python
2022-04-28 20:54:11	→	han-solo has joined #python
2022-04-28 20:54:18	→	zer0bitz_ has joined #python
2022-04-28 20:55:44	←	zer0bitz has quit (Ping timeout: 248 seconds)
2022-04-28 20:57:10	←	pvergain has quit (Quit: pvergain)
2022-04-28 21:01:02	→	nuclearg1 has joined #python
2022-04-28 21:01:59	←	soju-test-user has quit (Ping timeout: 240 seconds)
2022-04-28 21:02:06	→	raym has joined #python
2022-04-28 21:02:17	→	rama has joined #python
2022-04-28 21:04:49	←	bluesmonk has quit (Ping timeout: 272 seconds)
2022-04-28 21:05:41	→	foobaz212 has joined #python
2022-04-28 21:05:58	→	xrogaan has joined #python
2022-04-28 21:06:08	nedbat	Pilate: you didn't like their first solution, and now without seeing it, you are also suspicious of their second solution?
2022-04-28 21:06:22	teut	https://bpa.st/7KHA
2022-04-28 21:06:39	teut	I chain main.py to __main__.py to make folder module
2022-04-28 21:06:50	teut	now imports arent working
2022-04-28 21:07:03	→	barry1 has joined #python
2022-04-28 21:07:03	teut	can someone tell how to fix it?
2022-04-28 21:07:51	←	tricklynch has quit (Ping timeout: 256 seconds)
2022-04-28 21:08:00	→	jero98772 has joined #python
2022-04-28 21:08:19	←	efertone_ has quit (Ping timeout: 240 seconds)
2022-04-28 21:08:27	teut	there is __init__.py in functions
2022-04-28 21:08:35	←	barry1 has quit (Client Quit)
2022-04-28 21:08:40	InPhase	teut: Where is functions?
2022-04-28 21:08:54	→	barry1 has joined #python
2022-04-28 21:08:59	←	dreamon has quit (Ping timeout: 240 seconds)
2022-04-28 21:09:10	teut	https://ibb.co/pPqczTN
2022-04-28 21:09:14	←	duuude has quit (Read error: Connection reset by peer)
2022-04-28 21:09:26	→	duuude has joined #python
2022-04-28 21:09:39	teut	is it coming broken for you too?
2022-04-28 21:10:36	→	arinov_ has joined #python
2022-04-28 21:11:46	teut	imgur is asking phone number which I dont want to enter
2022-04-28 21:12:29	→	efertone has joined #python
2022-04-28 21:13:34	←	fling has quit (Ping timeout: 240 seconds)
2022-04-28 21:13:51	teut	https://bpa.st/JOXQ
2022-04-28 21:14:20	InPhase	teut: from DailyMonit...Performance.functions.mailsender import mail_sender
2022-04-28 21:14:52	teut	anything better?
2022-04-28 21:15:41	→	RabidToaster has joined #python
2022-04-28 21:15:48	teut	should I just add path of __main__.py's basedir to sys.path?
2022-04-28 21:16:00	→	MeanEYE has joined #python
2022-04-28 21:16:23	→	fling has joined #python
2022-04-28 21:16:41	teut	thanks
2022-04-28 21:18:06	→	magla has joined #python
2022-04-28 21:18:07	←	twofingersneat has quit (Ping timeout: 272 seconds)
2022-04-28 21:18:27	←	tangy has quit (Remote host closed the connection)
2022-04-28 21:18:40	←	rama has quit (Ping timeout: 248 seconds)
2022-04-28 21:18:42	TML	InPhase: That "..." looks suspect
2022-04-28 21:19:06	←	arinov_ has quit (Quit: Konversation terminated!)
2022-04-28 21:19:07	InPhase	teut: You can also do:  from .functions.mailsender import mail_sender
2022-04-28 21:19:16	ℹ	magla is now known as geli
2022-04-28 21:19:19	InPhase	teut: Or for a bare entry, from . import something
2022-04-28 21:19:32	InPhase	TML: The "..." was me not wanting to type all that.  :)
2022-04-28 21:19:40	TML	oh :)
2022-04-28 21:19:53	InPhase	I had faith in teut's intellect.  ;)
2022-04-28 21:20:05	→	blackop has joined #python
2022-04-28 21:20:07	blackop	hi
2022-04-28 21:20:10	TML	I wasn't watching the whole conversation, I drifted back in from a zoom call
2022-04-28 21:20:19	blackop	should i install both 32 and 64bit versions in windows?
2022-04-28 21:20:26	TML	and thought "That…looks wrong"
2022-04-28 21:20:32	TML	blackop: probably not
2022-04-28 21:20:37	blackop	just 64bit?
2022-04-28 21:20:57	teut	what language has the best import mechanism?
2022-04-28 21:21:09	TML	that's really up to what you're doing, but 64bit is a pretty sensible default these days
2022-04-28 21:21:35	←	mat001_ has quit (Remote host closed the connection)
2022-04-28 21:21:55	→	mat001_ has joined #python
2022-04-28 21:21:58	exarkun	teut: Monty
2022-04-28 21:22:25	teut	?
2022-04-28 21:22:28	hodapp	ML modules are famous for some reason I forget.
2022-04-28 21:23:10	→	Elodin has joined #python
2022-04-28 21:23:39	exarkun	maybe only for being early
2022-04-28 21:23:48	exarkun	I can't remember anything particularly fancy about them
2022-04-28 21:25:44	exarkun	teut: sorry, Monte
2022-04-28 21:26:09	exarkun	http://www.monte-language.org/
2022-04-28 21:26:45	←	JaredCE has quit (Ping timeout: 276 seconds)
2022-04-28 21:26:49	SnoopJ	teut, what does "best" mean to you?
2022-04-28 21:27:16	InPhase	blackop: It seems they aren't even making 32-bit phones anymore.  I think it's safe to call 32-bit dead for everything other than special purpose low cost embedded systems.
2022-04-28 21:27:27	→	bigdata has joined #python
2022-04-28 21:27:32	teut	I will look at it's  import mech exarkun, thanks
2022-04-28 21:27:51	teut	I didn't like python's or javascript's
2022-04-28 21:27:58	→	arinov_ has joined #python
2022-04-28 21:28:06	←	wakeup has quit (Quit: Client closed)
2022-04-28 21:28:15	←	lbalhar has quit (Ping timeout: 256 seconds)
2022-04-28 21:28:49	teut	although the javascripts say that they have it really great, since they encapsulate modules well
2022-04-28 21:29:08	teut	java scripters*
2022-04-28 21:29:20	teut	javascript people *
2022-04-28 21:30:07	←	JonathanFreiburg has quit (Quit: You have been kicked for being idle)
2022-04-28 21:31:21	→	sobkas has joined #python
2022-04-28 21:31:33	blackop	InPhase: got it
2022-04-28 21:31:36	blackop	thanks
2022-04-28 21:32:21	←	ubert1 has quit (Remote host closed the connection)
2022-04-28 21:35:05	←	ayustae has quit (Quit: ayustae)
2022-04-28 21:35:35	←	sobkas has quit (Remote host closed the connection)
2022-04-28 21:35:51	←	grooverman has quit (Ping timeout: 276 seconds)
2022-04-28 21:36:11	→	sobkas has joined #python
2022-04-28 21:36:31	←	arinov_ has quit (Read error: Connection reset by peer)
2022-04-28 21:36:33	←	rje has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-28 21:36:46	→	arinov_ has joined #python
2022-04-28 21:37:47	←	bigdata has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-28 21:38:57	←	sobkas has quit (Client Quit)
2022-04-28 21:39:35	Swayze	i just got a laptop with windows 32 bit installed
2022-04-28 21:39:39	←	shad has quit (Ping timeout: 272 seconds)
2022-04-28 21:39:45	Swayze	windows 10 32 bit
2022-04-28 21:39:48	Swayze	lol
2022-04-28 21:40:25	→	patiencezero has joined #python
2022-04-28 21:40:25	←	patiencezero has quit (Changing host)
2022-04-28 21:40:25	→	patiencezero has joined #python
2022-04-28 21:40:35	Swayze	too lazy to reinstall it unless i install mega ram or something
2022-04-28 21:41:02	→	stackdroid18 has joined #python
2022-04-28 21:41:03	←	marmalade has quit (Ping timeout: 276 seconds)
2022-04-28 21:41:56	→	shastenm has joined #python
2022-04-28 21:42:04	←	samuelbernardo has quit (Quit: ZNC 1.8.2 - https://znc.in)
2022-04-28 21:43:26	→	sobkas has joined #python
2022-04-28 21:44:06	→	Seto_Kaiba has joined #python
2022-04-28 21:45:22	→	samuelbernardo has joined #python
2022-04-28 21:45:30	←	patiencezero has quit (Ping timeout: 250 seconds)
2022-04-28 21:46:29	→	patiencezero has joined #python
2022-04-28 21:46:29	←	patiencezero has quit (Changing host)
2022-04-28 21:46:29	→	patiencezero has joined #python
2022-04-28 21:46:43	→	whaley has joined #python
2022-04-28 21:46:54	←	arinov_ has quit (Ping timeout: 246 seconds)
2022-04-28 21:47:12	→	arinov_ has joined #python
2022-04-28 21:47:28	←	Hunterkll has quit (Ping timeout: 260 seconds)
2022-04-28 21:48:36	←	duuude has quit (Ping timeout: 240 seconds)
2022-04-28 21:49:20	←	wyclif has quit (Ping timeout: 260 seconds)
2022-04-28 21:49:20	→	src has joined #python
2022-04-28 21:50:37	→	wyclif has joined #python
2022-04-28 21:51:00	→	dadofapollo has joined #python
2022-04-28 21:51:19	←	jpn has quit (Ping timeout: 240 seconds)
2022-04-28 21:51:27	←	arinov_ has quit (Ping timeout: 240 seconds)
2022-04-28 21:51:28	ℹ	dcaro is now known as dcaro_away
2022-04-28 21:51:29	→	twofingersneat has joined #python
2022-04-28 21:51:39	→	arinov_ has joined #python
2022-04-28 21:52:25	←	fandre1986 has quit (Quit: Connection closed)
2022-04-28 21:52:50	→	shad has joined #python
2022-04-28 21:53:50	←	vantage has quit (Read error: Connection reset by peer)
2022-04-28 21:54:04	→	vicfred has joined #python
2022-04-28 21:54:12	←	vladoski has quit (Remote host closed the connection)
2022-04-28 21:54:15	←	imakestuff has quit (Remote host closed the connection)
2022-04-28 21:56:05	→	arinov has joined #python
2022-04-28 21:56:07	→	NotThatRPG has joined #python
2022-04-28 21:56:45	←	arinov_ has quit (Ping timeout: 272 seconds)
2022-04-28 21:57:38	dskull	Q: So on osx, I have python3 installed, great. But the regular "python -v" command returns not found.. I tried installing pyenv, but still "python" is never found as a command... any idea how to properly fix this (i don't need or care about python3 command or its version)
2022-04-28 21:57:45	→	arinov_ has joined #python
2022-04-28 21:58:36	←	barry1 has quit (Ping timeout: 240 seconds)
2022-04-28 21:59:19	←	ick has quit (Ping timeout: 240 seconds)
2022-04-28 21:59:57	←	Ergo^ has quit (Remote host closed the connection)
2022-04-28 22:00:03	bjs	dskull: pyenv should make the name `python` point to whatever you tell it to, so that's a bit odd
2022-04-28 22:00:26	mav`rik	dskull: how did you install pyenv? Because there's a lot of shell integration stuff you probably need to do and I've never done that under Mac OS
2022-04-28 22:00:51	→	rje has joined #python
2022-04-28 22:01:12	←	arinov has quit (Ping timeout: 276 seconds)
2022-04-28 22:01:13	SnoopJ	n.b. that "install pyenv" does ~nothing for this problem unless you then use your installed pyenv to install Python
2022-04-28 22:01:15	←	mat001_ has quit (Ping timeout: 246 seconds)
2022-04-28 22:01:35	dskull	well i just did a brew install pyenv and away it went - it included the pyenv command to my path and i'm able to install/change versions (within pyenv) but it doesn't seem to add to the system command of "python"
2022-04-28 22:01:56	bjs	dskull: well just installing pyenv on its own doesn't do anything if you don't run any pyenv commands
2022-04-28 22:02:07	grym	dskull: look at `pyenv global` to set things for your $USER
2022-04-28 22:02:16	mav`rik	dskull: did you also set the "global" version, by doing `pyenv global some.version.number`
2022-04-28 22:02:26	SnoopJ	hmm, it may install a shim for just `python` as I think about it
2022-04-28 22:02:28	dskull	pyenv global (or pyenv local) gives me the 2.7.18 version i had installed with pyenv
2022-04-28 22:03:30	grym	dskull: i meant that running `pyenv global 3.10.4`, assuming you've pyenv install 3.10.4, should rejigger python in your shell to point to that one
2022-04-28 22:04:07	bjs	dskull: does your PATH actually contain the pyenv directories? maybe something went wrong earlier on
2022-04-28 22:04:08	SnoopJ	dskull, the extremely lazy fix here is to install a symlink named `python` somewhere on your PATH that points at the interpreter you want. pyenv should do that for you, although the changes won't take effect until you start a new terminal after installing it. If it's not working for you with a fresh post-install terminal, I dunno what's up.
2022-04-28 22:04:40	SnoopJ	probably the next step after that is digging into your PATH and making sure pyenv is getting a say, as bjs suggests
2022-04-28 22:05:25	→	Sasazuka has joined #python
2022-04-28 22:06:24	←	drogas has quit (Quit: Connection closed)
2022-04-28 22:07:03	←	giorgian has quit (Ping timeout: 276 seconds)
2022-04-28 22:08:07	→	Barones has joined #python
2022-04-28 22:09:14	→	arinov has joined #python
2022-04-28 22:09:44	←	arinov has quit (Client Quit)
2022-04-28 22:09:54	←	sobkas has quit (Quit: sobkas)
2022-04-28 22:10:57	←	arinov_ has quit (Ping timeout: 276 seconds)
2022-04-28 22:11:57	→	geri has joined #python
2022-04-28 22:12:05	←	bmr has quit (Quit: WeeChat 3.5)
2022-04-28 22:12:20	→	sobkas has joined #python
2022-04-28 22:12:21	→	bmr has joined #python
2022-04-28 22:12:25	→	saroy has joined #python
2022-04-28 22:12:33	←	bmr has quit (Client Quit)
2022-04-28 22:12:52	→	greentree has joined #python
2022-04-28 22:13:09	greentree	are there examples out there or recommended libs for a websocket server in py
2022-04-28 22:13:10	→	duuude has joined #python
2022-04-28 22:13:25	greentree	i found one example lib but seemed to not really have any features
2022-04-28 22:13:25	→	blei has joined #python
2022-04-28 22:13:33	greentree	https://github.com/Pithikos/python-websocket-server
2022-04-28 22:13:47	→	bmr has joined #python
2022-04-28 22:14:22	←	saroy has quit (Remote host closed the connection)
2022-04-28 22:14:24	←	squirrel has quit (Quit: Connection closed for inactivity)
2022-04-28 22:14:46	→	saroy has joined #python
2022-04-28 22:14:53	mav`rik	greentree: websockets, on pypi, maybe?
2022-04-28 22:15:24	←	patiencezero has quit (Remote host closed the connection)
2022-04-28 22:15:46	→	patiencezero has joined #python
2022-04-28 22:15:46	←	patiencezero has quit (Changing host)
2022-04-28 22:15:46	→	patiencezero has joined #python
2022-04-28 22:15:48	←	foobaz212 has quit (Quit: Client closed)
2022-04-28 22:16:05	→	foobaz212 has joined #python
2022-04-28 22:17:45	←	FinnElija has quit (Remote host closed the connection)
2022-04-28 22:18:04	←	fling has quit (Ping timeout: 240 seconds)
2022-04-28 22:18:43	→	FinnElija has joined #python
2022-04-28 22:18:48	→	bigdata has joined #python
2022-04-28 22:19:39	←	uuair has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2022-04-28 22:19:50	→	fling has joined #python
2022-04-28 22:20:40	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-28 22:21:12	←	hans_ has quit (Quit: Connection closed for inactivity)
2022-04-28 22:21:39	→	CykloTronic86 has joined #python
2022-04-28 22:21:41	→	uuair has joined #python
2022-04-28 22:22:00	←	NotThatRPG has quit (Ping timeout: 276 seconds)
2022-04-28 22:22:11	←	geli has quit (Read error: Connection reset by peer)
2022-04-28 22:22:23	→	EvilDMP has joined #python
2022-04-28 22:22:33	→	magla has joined #python
2022-04-28 22:22:39	←	Allegretto has quit (Ping timeout: 276 seconds)
2022-04-28 22:23:33	→	Betal has joined #python
2022-04-28 22:24:17	→	mat001_ has joined #python
2022-04-28 22:24:56	←	mat001_ has quit (Remote host closed the connection)
2022-04-28 22:25:16	dskull	so the pyenv shims are looking right i guess? (lists them with pyenv shims) but a pyenv rehash or even a brew reinstall pyenv won't allow the straight "python" command in my path
2022-04-28 22:25:28	←	EvilDMP has quit (Client Quit)
2022-04-28 22:25:33	→	mat001_ has joined #python
2022-04-28 22:27:11	SnoopJ	dskull, does running the `python` do what you expected?
2022-04-28 22:27:15	SnoopJ	err the `python` shim
2022-04-28 22:28:00	←	Guest39 has quit (Ping timeout: 252 seconds)
2022-04-28 22:28:03	dskull	yea if i run .pyenv/shims/python --version
2022-04-28 22:28:15	dskull	it provides the version of what i had installed with pyenv
2022-04-28 22:28:19	→	foobaz212 has joined #python
2022-04-28 22:28:52	SnoopJ	dskull, have you configured your shell's initialization to run the pyenv init?
2022-04-28 22:28:54	←	kmh has quit (Read error: Connection reset by peer)
2022-04-28 22:29:19	SnoopJ	or maybe brew does that? I don't know MacOS
2022-04-28 22:29:20	→	kmh has joined #python
2022-04-28 22:29:41	SnoopJ	but if the shim does what it's supposed to do, the problem is probably the contents of PATH
2022-04-28 22:30:01	←	Aviran has quit (Ping timeout: 256 seconds)
2022-04-28 22:30:26	←	boris_ has quit (Remote host closed the connection)
2022-04-28 22:31:45	→	boris_ has joined #python
2022-04-28 22:32:43	←	duuude has quit (Quit: Konversation terminated!)
2022-04-28 22:32:45	←	fivegruel has quit (Ping timeout: 250 seconds)
2022-04-28 22:32:57	→	duuude has joined #python
2022-04-28 22:32:59	←	patiencezero has quit (Ping timeout: 240 seconds)
2022-04-28 22:33:04	→	NotThatRPG has joined #python
2022-04-28 22:33:30	→	sorta has joined #python
2022-04-28 22:33:54	←	CykloTronic86 has quit (Quit: Leaving)
2022-04-28 22:33:59	←	drcrnx has quit (Ping timeout: 256 seconds)
2022-04-28 22:34:19	→	beli6147 has joined #python
2022-04-28 22:34:52	→	patiencezero has joined #python
2022-04-28 22:34:53	←	patiencezero has quit (Changing host)
2022-04-28 22:34:53	→	patiencezero has joined #python
2022-04-28 22:34:53	sorta	i would like to write a file sharing web service(operated entirely from browser) in python. i have no orevious experience i  this regard, what framework will be easy enough for a complete beginner like me?
2022-04-28 22:35:05	←	funhouse has quit (Quit: Client closed)
2022-04-28 22:35:14	→	Allegretto has joined #python
2022-04-28 22:35:36	SnoopJ	sorta, are you wanting to write one from scratch, or are you looking for software that does this "out of the box," written in Python?
2022-04-28 22:36:33	mav`rik	dskull: have you restarted your shell since the install?
2022-04-28 22:36:38	sorta	SnoopJ: i want to write from scratch and familiarise myself
2022-04-28 22:37:19	→	wakeup has joined #python
2022-04-28 22:37:21	←	tobybl has quit (Remote host closed the connection)
2022-04-28 22:37:29	dskull	i have restarted my shell, but I just found a stackoverflow that had similar issues and adding export PATH=$(pyenv root)/shims:$PATH  seems to be working
2022-04-28 22:38:39	dskull	i wonder if it's because i'm using zsh and it didn't properly add the path during install/init?
2022-04-28 22:38:54	pydev1	hello how should we usually end the processing of the function earlier ? something like return None or pass ? i mean... i have a giant block of code inside if self.purchase_date is None: {code} i thought to decrease the indentation doing if self.purchase_date is not None: pass
2022-04-28 22:38:55	mav`rik	dskull: that should all be a part of the Mac OS install instructions though?
2022-04-28 22:38:56	pydev1	is that correct ?
2022-04-28 22:39:01	←	foobaz212 has quit (Quit: Client closed)
2022-04-28 22:39:18	→	foobaz212 has joined #python
2022-04-28 22:39:20	SnoopJ	dskull, that's a normal thing you do if you install pyenv "manually," I guess brew missed a step here or something.
2022-04-28 22:39:26	dskull	i didn't see any additional instructions in the log, but that's not to say it may not have been there
2022-04-28 22:39:40	Repiphany	pydev1: `pass` doesn't end function execution
2022-04-28 22:39:47	SnoopJ	the official brew instructions don't mention any follow-ups, it could be a bug of some sort
2022-04-28 22:39:50	mav`rik	dskull: https://github.com/pyenv/pyenv#installation says "Then follow the rest of the post-installation steps under Basic GitHub Checkout, starting with #​2 ("Configure your shell's environment for Pyenv")."
2022-04-28 22:40:07	←	ibrahim_ has quit (Ping timeout: 240 seconds)
2022-04-28 22:40:09	SnoopJ	...okay, yes, they do mention post steps and I just missed it :facepalm:
2022-04-28 22:40:11	pydev1	Repiphany, how should i do ?
2022-04-28 22:40:37	sorta	so any framework suggestions to write my webapp in?
2022-04-28 22:40:50	Repiphany	A blank `return` statement doesn't execute any further instructions (but also returns None obviously)
2022-04-28 22:40:50	→	ibrahim_ has joined #python
2022-04-28 22:40:51	←	Henry_ has quit (Ping timeout: 276 seconds)
2022-04-28 22:41:28	pydev1	ok
2022-04-28 22:41:42	pydev1	can i do that? i mean..is common or is better to avoid ?
2022-04-28 22:41:43	mav`rik	sorta: "It depends". Is it a simple CMS style website, is it an API of some description, does it involve a lot of CPU-based processing, does it fetch things from other sites, etc.?
2022-04-28 22:41:53	pydev1	Repiphany, ^
2022-04-28 22:42:22	sorta	nothing of the sort, it will be usedto upload/download files from  a specific directory on the server it is hosted in
2022-04-28 22:42:27	sorta	no api
2022-04-28 22:42:29	Repiphany	It's common to use `return` to do that, if you don't expect your function to return anything in the first place
2022-04-28 22:42:36	dskull	thanks for the help tho - it was the final piece i needed to work on this legacy project that's going to be another pain in my butt
2022-04-28 22:42:39	mav`rik	sorta: I quite like FastAPI, but if you're just learning (and considering learning as a means to get a job too) also consider things that are semi-heavily used in industry, like Django
2022-04-28 22:42:53	SnoopJ	I would probably be looking for something in the Django ecosystem here, yea
2022-04-28 22:43:06	←	rhu has quit (Remote host closed the connection)
2022-04-28 22:43:13	sorta	ah the guys over at #archinstall told me that aurweb is written in fastapi too
2022-04-28 22:43:29	sorta	django is popular more in the industry right?
2022-04-28 22:43:33	ℹ	mpmc is now known as datadevil
2022-04-28 22:43:50	ℹ	datadevil is now known as mpmc
2022-04-28 22:44:30	SnoopJ	they are both popular in "industry," but they serve different purposes.
2022-04-28 22:44:39	←	roxfan has quit (Ping timeout: 240 seconds)
2022-04-28 22:45:25	SnoopJ	FastAPI fulfills many of the same roles as Flask which tend towards the "hosting an API but often not something user-facing" side of the continuum. User-facing stuff ends up in Django more often, in my experience.
2022-04-28 22:45:44	→	Aviran has joined #python
2022-04-28 22:45:44	SnoopJ	(but either framework can do "the other" task, too, these are all good tools)
2022-04-28 22:45:52	pydev1	ok
2022-04-28 22:46:08	sorta	i want a website with a upload button and list of files
2022-04-28 22:46:19	sorta	ill look into django
2022-04-28 22:46:39	←	kosh has quit (Ping timeout: 240 seconds)
2022-04-28 22:46:43	→	jpn has joined #python
2022-04-28 22:47:48	teut	has anyone seen this function in pandas .sortermk.abs()?
2022-04-28 22:48:43	→	grooverman has joined #python
2022-04-28 22:49:03	teut	https://bpa.st/Z3VQ#1L97
2022-04-28 22:49:08	←	wakeup has quit (Quit: Client closed)
2022-04-28 22:49:52	→	giorgian has joined #python
2022-04-28 22:50:12	→	xythercoder has joined #python
2022-04-28 22:50:14	mav`rik	teut: that's just calculating the absolute value of line 96 if I'm reading this correctly
2022-04-28 22:50:24	teut	how do you know that?
2022-04-28 22:50:25	←	BillyZane has quit (Ping timeout: 256 seconds)
2022-04-28 22:50:36	teut	annd why cant I find anything on google
2022-04-28 22:51:10	→	reset has joined #python
2022-04-28 22:51:34	teut	if you won't tell the logic then how can I confidently write it even?
2022-04-28 22:51:36	←	xythercoder has quit (Client Quit)
2022-04-28 22:52:08	han-solo	the function is `.abs()`
2022-04-28 22:52:08	←	foobaz212 has quit (Quit: Client closed)
2022-04-28 22:52:10	←	boris_ has quit (Remote host closed the connection)
2022-04-28 22:52:12	→	xythercoder has joined #python
2022-04-28 22:52:21	→	foobaz212 has joined #python
2022-04-28 22:52:33	han-solo	the `sortermk` is a column you just added on the line before doing `.abs`
2022-04-28 22:52:40	mav`rik	teut: https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html
2022-04-28 22:53:19	→	boris_ has joined #python
2022-04-28 22:53:22	→	teut5 has joined #python
2022-04-28 22:53:24	teut5	ohh, it's a column
2022-04-28 22:53:37	teut5	it sounded like it's a function
2022-04-28 22:53:44	←	diogenese has quit (Quit: Has anybody seen the bridge?)
2022-04-28 22:54:09	→	diogenese has joined #python
2022-04-28 22:54:51	←	giorgian has quit (Ping timeout: 250 seconds)
2022-04-28 22:55:43	→	fivegruel has joined #python
2022-04-28 22:55:52	←	teut has quit (Ping timeout: 252 seconds)
2022-04-28 22:56:14	Repiphany	.sortermk without any parentheses is an attribute of whatever
2022-04-28 22:56:28	Repiphany	So you're calling .abs() from whatever that attribute is
2022-04-28 22:56:29	→	vantage has joined #python
2022-04-28 22:57:01	mav`rik	Should that then be data_mail["jmk"] = data_mail["sortermk"].abs()  to better fit with the earlier logic (like the calculation of the sortermk column itself using data_mail["diff2"])?
2022-04-28 22:57:13	→	kickingvegas has joined #python
2022-04-28 22:58:06	Repiphany	I don't know conventional pandas way of doing stuff
2022-04-28 22:58:45	teut5	Repiphany , in pandas you can refer the column of a dataframe either via df.column_name. or. dictionary style.  df["column_name"]
2022-04-28 22:58:48	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-28 22:59:09	teut5	yep mav`rik , cleaning it,  thanks for the help
2022-04-28 22:59:21	Repiphany	Yes, I mean I don't know if it's normal to mix notations willy-nilly like that
2022-04-28 22:59:37	→	clime has joined #python
2022-04-28 23:00:02	→	onichomp has joined #python
2022-04-28 23:00:23	teut5	if there is a space in column name , then you cannot use . notation
2022-04-28 23:01:01	teut5	Repiphany , this kin of thing is very usual in javascript
2022-04-28 23:01:17	Repiphany	I'm not talking about javascript
2022-04-28 23:01:18	xythercoder	23:00 xythercoder: Hello, I have a question. Is frontend developers also want to take knowledge on db structure before designing.
2022-04-28 23:01:21	→	pikaro has joined #python
2022-04-28 23:01:23	clime	anyone familiar with pandas timestamps and date offsets? I am getting:
2022-04-28 23:01:26	clime	2005-01-03 11:00:00
2022-04-28 23:01:27	clime	2005-01-03 01:00:00
2022-04-28 23:01:39	→	s33ker has joined #python
2022-04-28 23:01:43	→	aslicedbanjo has joined #python
2022-04-28 23:02:02	clime	with row['date']+pd.offsets.DateOffset(hour=1)  (row['date'] is the first line, by adding date offset i get second line)
2022-04-28 23:03:13	clime	pandas is just full of traps
2022-04-28 23:03:26	mav`rik	clime: "hours" not "hour", using the "hour" will _set_ the field, rather than update it
2022-04-28 23:03:55	clime	how can it set the field if i use addition though...that's so strange
2022-04-28 23:04:12	clime	i.e. addition to the original time
2022-04-28 23:04:15	mav`rik	clime: see the **kwds description here - https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.tseries.offsets.DateOffset.html
2022-04-28 23:04:39	mav`rik	clime: "Temporal parameter that add to or replace the offset value."
2022-04-28 23:04:45	→	nixoeen has joined #python
2022-04-28 23:04:45	←	nixoeen has quit (Changing host)
2022-04-28 23:04:45	→	nixoeen has joined #python
2022-04-28 23:05:00	clime	ook
2022-04-28 23:05:42	clime	if I do: row['date']+pd.offsets.Hour(1)  it works as expected though
2022-04-28 23:05:48	←	kostkon_ has quit (Ping timeout: 240 seconds)
2022-04-28 23:06:13	pikaro	hi! I'm getting CA verification errors in a Docker container from the requests library when connecting to the Slack API. To debug, I installed curl and made it use the same cacert.pem (from the certifi package) with both --cacert and --capath (so it doesn't use the defaults). Then I ran the python scripts with `export REQUESTS_CA_BUNDLE=.../cacert.pem`. curl successfully verifies the certificate,
2022-04-28 23:06:14	clime	and yes, using 'hours=1' for DateOffset fixes it
2022-04-28 23:06:14	pikaro	requests doesn't. is anyone aware what could be the difference here?
2022-04-28 23:06:17	→	flower_ has joined #python
2022-04-28 23:06:18	mav`rik	clime: Sorry, I have no idea, I just read the docs. Feels like there are a few traps for the unwary
2022-04-28 23:06:51	s33ker	hi guys i have two parameters alpha and beta those are longitude and latitude so they live on earth serfice where r is "teoreticaly" the same...i want to create a dictionary where i calculate distance between two points on earth serfice for all combinations of alpha and beta and store them into a dictionary where the key is combination of alpha and
2022-04-28 23:06:52	s33ker	beta....so next time i have two combinations of alpha and beta i can just find the key for spacific combination and retrive the value under that key instead of calculation the distance....how can i store alpha and beta as a key is there a function for that i want to be able to do the same next time i want a key colision ?
2022-04-28 23:07:05	→	EvilDMP has joined #python
2022-04-28 23:07:19	clime	mav`rik: ye, thanks, you were right tha I should have used hours, i'll probably use pd.offsets.Hour(1) cause that's the clearest and it works, thanks
2022-04-28 23:07:48	←	geri has quit (Quit: Client closed)
2022-04-28 23:08:03	mav`rik	pikaro: does the slack API have a certificate that relies upon AIA chasing?
2022-04-28 23:08:26	pikaro	mav`rik: thanks for the pointer, I'll have to check
2022-04-28 23:09:06	mav`rik	pikaro: It's been a pet peeve of mine with Python for about a year or so now, it's hard to work around and we've had to advise users to make sure their certificates contain the full chain.
2022-04-28 23:09:39	→	anomal has joined #python
2022-04-28 23:10:01	supakeen	I think the status on that is 'someone has to write it and itll go in'.
2022-04-28 23:10:07	→	powftw has joined #python
2022-04-28 23:10:19	←	onichomp has quit (Read error: Connection reset by peer)
2022-04-28 23:10:57	→	onichomp has joined #python
2022-04-28 23:11:11	mav`rik	supakeen: Yeah, it's awful in general because OpenSSL kinda shrugged about it a while ago saying "we just deal with certs"... thanks.
2022-04-28 23:11:21	←	onichomp has quit (Read error: Connection reset by peer)
2022-04-28 23:11:29	→	fofoni has joined #python
2022-04-28 23:11:33	mav`rik	pikaro: what's the API hostname you're connecting to?
2022-04-28 23:11:58	→	onichomp has joined #python
2022-04-28 23:14:15	pikaro	mav`rik: no, I think it's OK, it only has one intermediate. it's hooks.slack.com
2022-04-28 23:14:31	←	shad has quit (Quit: WeeChat 3.0)
2022-04-28 23:14:56	←	teut5 has quit (Quit: Client closed)
2022-04-28 23:14:58	pikaro	and echo -n | openssl s_client -connect hooks.slack.com:443 -servername hooks.slack.com -showcerts shows both
2022-04-28 23:15:18	mav`rik	pikaro: Fair enough. I figure there'd be a lot of complaints from Python devs if they had an issue like that.
2022-04-28 23:15:39	pikaro	yeah that's likely ;)
2022-04-28 23:17:00	←	Aviran has quit (Ping timeout: 240 seconds)
2022-04-28 23:17:27	←	nixoeen has quit (Quit: This computer has gone to sleep)
2022-04-28 23:17:41	→	nixoeen has joined #python
2022-04-28 23:17:41	←	nixoeen has quit (Changing host)
2022-04-28 23:17:41	→	nixoeen has joined #python
2022-04-28 23:18:21	mav`rik	pikaro: could you create an entry on https://bpa.st/+python with the code and output?
2022-04-28 23:19:01	pikaro	I'll have to create a temp test script, just a moment
2022-04-28 23:19:22	→	bomb-on has joined #python
2022-04-28 23:19:27	←	theo has quit (Ping timeout: 240 seconds)
2022-04-28 23:21:19	→	sodmitry has joined #python
2022-04-28 23:21:37	←	Pickchea has quit (Ping timeout: 272 seconds)
2022-04-28 23:21:49	→	Cache_Money has joined #python
2022-04-28 23:21:56	→	paul424 has joined #python
2022-04-28 23:22:08	←	donofrio has quit (Read error: Connection reset by peer)
2022-04-28 23:22:33	→	donofrio has joined #python
2022-04-28 23:22:34	←	fling has quit (Ping timeout: 240 seconds)
2022-04-28 23:23:08	←	pydev1 has quit (Ping timeout: 260 seconds)
2022-04-28 23:23:41	→	kostkon_ has joined #python
2022-04-28 23:23:55	→	fling has joined #python
2022-04-28 23:24:10	→	dreamon has joined #python
2022-04-28 23:24:33	←	rajkosto has quit (Read error: Connection reset by peer)
2022-04-28 23:24:34	←	nixoeen has quit (Quit: This computer has gone to sleep)
2022-04-28 23:25:09	←	fofoni has quit (Quit: Leaving)
2022-04-28 23:27:14	→	irfanns has joined #python
2022-04-28 23:27:29	→	re101-owl-55 has joined #python
2022-04-28 23:27:33	→	tortal has joined #python
2022-04-28 23:27:38	→	theo has joined #python
2022-04-28 23:27:59	←	fivegruel has quit (Ping timeout: 240 seconds)
2022-04-28 23:28:09	←	Falcon| has quit (Quit: Falcon|)
2022-04-28 23:28:42	→	tortal_ has joined #python
2022-04-28 23:28:42	pikaro	as usual, solved by stripping it down :D it was an error in the code, not with the library itself. (didn't write it, just asking for the dev, I'm ops.) thanks for pushing me in the right direction!
2022-04-28 23:29:20	→	tortal__ has joined #python
2022-04-28 23:29:31	←	esther has quit (Ping timeout: 250 seconds)
2022-04-28 23:29:47	ℹ	Seto_Kaiba is now known as Hunterkll
2022-04-28 23:30:43	←	pikaro has quit (Quit: WeeChat 3.4)
2022-04-28 23:30:53	mav`rik	pikaro: for my own curiosity, what was the issue?
2022-04-28 23:31:07	→	Seto_Kaiba has joined #python
2022-04-28 23:31:43	→	dodobrain has joined #python
2022-04-28 23:32:29	→	Hanii has joined #python
2022-04-28 23:32:32	→	funhouse has joined #python
2022-04-28 23:32:40	→	twomoon has joined #python
2022-04-28 23:32:51	←	tortal has quit (Ping timeout: 276 seconds)
2022-04-28 23:32:51	→	foobaz212 has joined #python
2022-04-28 23:33:30	←	tortal_ has quit (Ping timeout: 276 seconds)
2022-04-28 23:34:06	→	nixoeen has joined #python
2022-04-28 23:34:08	←	Hunterkll has quit (Ping timeout: 248 seconds)
2022-04-28 23:34:48	←	mitrokov has quit (Ping timeout: 276 seconds)
2022-04-28 23:36:25	←	xythercoder has quit (Quit: Quit)
2022-04-28 23:36:27	←	han-solo has quit (Ping timeout: 250 seconds)
2022-04-28 23:36:30	→	teut has joined #python
2022-04-28 23:36:34	→	kosh has joined #python
2022-04-28 23:37:24	←	Sylhouette has quit (Remote host closed the connection)
2022-04-28 23:37:40	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-28 23:39:07	←	nixoeen has quit (Quit: This computer has gone to sleep)
2022-04-28 23:40:47	←	patiencezero has quit (Ping timeout: 250 seconds)
2022-04-28 23:42:38	→	patiencezero has joined #python
2022-04-28 23:42:38	←	patiencezero has quit (Changing host)
2022-04-28 23:42:38	→	patiencezero has joined #python
2022-04-28 23:43:31	ℹ	tortal__ is now known as tortal
2022-04-28 23:45:35	→	mrME2 has joined #python
2022-04-28 23:45:39	←	mrME1 has quit (Ping timeout: 240 seconds)
2022-04-28 23:46:10	←	Hanii has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-04-28 23:47:19	←	AM has quit (Ping timeout: 240 seconds)
2022-04-28 23:47:43	→	Auron has joined #python
2022-04-28 23:49:13	→	mrMe has joined #python
2022-04-28 23:49:20	←	dibas has quit (Read error: Connection reset by peer)
2022-04-28 23:49:25	→	AM has joined #python
2022-04-28 23:49:55	→	Falcon| has joined #python
2022-04-28 23:51:03	→	mrME1 has joined #python
2022-04-28 23:51:42	←	mrME2 has quit (Ping timeout: 276 seconds)
2022-04-28 23:51:53	nedbat	10 out of 10 for click bait, but man, this article makes no sense: https://www.itprotoday.com/programming-languages/python-now-top-programming-language-shouldnt-be
2022-04-28 23:52:07	→	patientzero has joined #python
2022-04-28 23:52:21	→	dibas has joined #python
2022-04-28 23:52:21	←	dibas has quit (Changing host)
2022-04-28 23:52:21	→	dibas has joined #python
2022-04-28 23:52:57	→	mrME2 has joined #python
2022-04-28 23:53:14	mefistofeles	nedbat: yeah :/
2022-04-28 23:53:42	→	YuGiOhJCJ has joined #python
2022-04-28 23:53:55	←	mrMe has quit (Ping timeout: 272 seconds)
2022-04-28 23:54:40	mefistofeles	I don't get why people love to undermine the programming languages and tools they don't like or use
2022-04-28 23:54:51	→	Elliria has joined #python
2022-04-28 23:55:05	←	patiencezero has quit (Ping timeout: 250 seconds)
2022-04-28 23:55:49	←	mrME1 has quit (Ping timeout: 272 seconds)
2022-04-28 23:57:15	←	magla has quit (Read error: Connection reset by peer)
2022-04-28 23:57:24	→	magla has joined #python
2022-04-28 23:58:30	←	jpn has quit (Ping timeout: 246 seconds)
2022-04-28 23:58:58	←	masta`` has quit (Remote host closed the connection)
2022-04-28 23:59:10	nedbat	mefistofeles: i think in this case, this guy has to crank out content: https://www.itprotoday.com/author/Christopher-Tozzi
2022-04-28 23:59:22	←	re101-owl-55 has quit (Quit: Client closed)
2022-04-28 23:59:54	→	jmd has joined #python
2022-04-28 23:59:58	→	mrMe has joined #python
2022-04-29 00:00:12	←	jmd has quit (Remote host closed the connection)
2022-04-29 00:00:43	←	patientzero has quit (Ping timeout: 250 seconds)
2022-04-29 00:01:14	→	veegee has joined #python
2022-04-29 00:01:26	→	giorgian has joined #python
2022-04-29 00:01:39	←	nuclearg1 has quit (Ping timeout: 240 seconds)
2022-04-29 00:02:47	←	mrME2 has quit (Ping timeout: 272 seconds)
2022-04-29 00:02:47	←	wyclif has quit (Ping timeout: 272 seconds)
2022-04-29 00:03:31	→	wyclif has joined #python
2022-04-29 00:04:13	ℹ	Seto_Kaiba is now known as Hunterkll
2022-04-29 00:05:46	s33ker	quick question creating a dictionary will ensure there are non-duplicate keys or unique keys in the dictionary ?
2022-04-29 00:06:33	←	vantage has quit (Read error: Connection reset by peer)
2022-04-29 00:06:34	→	Fiji has joined #python
2022-04-29 00:06:35	←	giorgian has quit (Ping timeout: 272 seconds)
2022-04-29 00:06:43	Elliria	Dictionaries can't have duplicate keys.
2022-04-29 00:06:45	→	jpn has joined #python
2022-04-29 00:06:46	SnoopJ	s33ker, a dictionary can't have "the same key" more than once, but when creating a dictionary keys can sometimes be repeated. Can you ask a more specific question?
2022-04-29 00:07:11	mefistofeles	I have a segmentation fault for the python interpreter and I don't even know where to start, this is weird. It's opening a netcdf file using this library/code
2022-04-29 00:07:20	Elliria	Does that prevent the dictionary from being created if you accidentally do that, SnoopJ?
2022-04-29 00:07:50	mav`rik	nedbat: Wow... "knowing how to code in Python is merely one step up from knowing how to run programs in a Bash shell, which is not coding at all" I practically barked a laugh at that one
2022-04-29 00:08:02	SnoopJ	Elliria, no https://bpa.st/Q5OA
2022-04-29 00:08:09	→	fofoni has joined #python
2022-04-29 00:08:10	nedbat	mav`rik: it's almost like an Onion parody of a python hater
2022-04-29 00:08:33	exarkun	And the hit counter is rising and rising
2022-04-29 00:08:33	→	mrME1 has joined #python
2022-04-29 00:08:49	exarkun	presumably Mr. Tozzi is perfectly content with this outcome
2022-04-29 00:08:50	mav`rik	exarkun: yeah, it's all of us idiots rubbernecking :D
2022-04-29 00:08:52	Elliria	Ah, interesting. I just tried it and it used the last one when I made two the same.
2022-04-29 00:09:08	s33ker	SnoopJ well i am making keys in this manner sample_dict[hash((i,j))] i am asking if i need to duble check if there are duplicates in my dictionary keys or will python throw an error if that happens when creating dictionery
2022-04-29 00:09:24	SnoopJ	s33ker, no, it won't throw an error
2022-04-29 00:09:42	grym	s33ker: last one in wins
2022-04-29 00:09:45	←	mrMe has quit (Ping timeout: 272 seconds)
2022-04-29 00:09:48	mav`rik	s33ker: out of interest _why_ are you using the hash of a tuple as the key, rather than just using the tuple itself?
2022-04-29 00:09:50	s33ker	ah :S ok i guess i need to double heck then
2022-04-29 00:10:04	s33ker	i have numbers
2022-04-29 00:10:14	s33ker	from 0 to 360 for both i and j
2022-04-29 00:10:21	grym	s33ker: e.g., `{"a": 1, "a": 2} == {"a": 1}`
2022-04-29 00:10:24	SnoopJ	nedbat, agreed, that article is written to a word count
2022-04-29 00:10:36	grym	uhh
2022-04-29 00:10:41	grym	exactly the other way, sorry
2022-04-29 00:10:43	→	nehsou^ has joined #python
2022-04-29 00:10:46	grym	s33ker: e.g., `{"a": 1, "a": 2} == {"a": 2}`
2022-04-29 00:11:13	s33ker	is there a simple way to check if all my keys are unique
2022-04-29 00:11:16	mav`rik	s33ker: my_dict[(1, 300)] = some_value would work just fine.
2022-04-29 00:12:05	nedbat	s33ker: as mav`rik points out, you don't need hash() at all.
2022-04-29 00:12:10	rawrrr	Anyone know how I could go about copying every line above every date in a document?
2022-04-29 00:12:17	←	iomari891 has quit (Ping timeout: 272 seconds)
2022-04-29 00:12:24	s33ker	hmm one sec
2022-04-29 00:12:36	SnoopJ	rawrrr, "above every date?"
2022-04-29 00:12:59	←	saroy has quit (Ping timeout: 240 seconds)
2022-04-29 00:13:25	rawrrr	Yeah, I have a OneNote export and need to copy like 600 page titles. The only thing making the page titles standout is that there's a date below them formatted like this: Wednesday, May 25, 2099
2022-04-29 00:13:42	←	NotThatRPG has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-29 00:14:02	s33ker	nedbat i find one value more comparison when looking for comparison later on if that key exists in the dictionary
2022-04-29 00:14:11	s33ker	more convinient *
2022-04-29 00:15:16	→	stdout has joined #python
2022-04-29 00:15:20	mav`rik	s33ker: how would you generate the hash to perform the comparison, without having generated the tuple to begin with?
2022-04-29 00:15:36	nedbat	s33ker: (1, 360)  is one value
2022-04-29 00:15:38	→	shibboleth has joined #python
2022-04-29 00:15:39	→	nixoeen has joined #python
2022-04-29 00:15:40	s33ker	mav`rik that is true i am think about that heh
2022-04-29 00:15:49	←	zeenk has quit (Quit: Konversation terminated!)
2022-04-29 00:16:06	rawrrr	Might be better off just using a text editor to do this instead of having a Python script take a txt file as input and output them all. No clue if there's a way to select every line above a regex match tho
2022-04-29 00:16:11	rawrrr	in vscode or w/e
2022-04-29 00:16:31	s33ker	so i could do (1, 300) = find a key in the dict and it would match just fine
2022-04-29 00:17:15	→	NotThatRPG has joined #python
2022-04-29 00:18:18	nedbat	s33ker: a tuple is a fine key for a dict, just like an int would be.
2022-04-29 00:18:21	→	j3g has joined #python
2022-04-29 00:18:40	←	vulpes_vulpes has quit (Remote host closed the connection)
2022-04-29 00:19:03	←	EvilDMP has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-29 00:19:03	s33ker	thanks for help all i need to do is find an easy way just to check i dont get any duplicates
2022-04-29 00:19:36	mav`rik	s33ker: where do i and j come from?
2022-04-29 00:20:03	j3g	I am currently reading the output of a bash script (multiple lines) to a string using a loop and Input().  The problem I have is that newlines get destroyed by this method. How could I add newlines without them showing up as \n on the string ?
2022-04-29 00:20:43	→	foobaz212 has joined #python
2022-04-29 00:20:56	→	esther has joined #python
2022-04-29 00:20:57	←	Lando-HoloNet has quit (Ping timeout: 276 seconds)
2022-04-29 00:21:02	mav`rik	j3g: You're piping your bash script into python? So `my_bash_script.sh | python some_name.py`?
2022-04-29 00:21:04	s33ker	mav`rik it should be fine it just two angles to put it in contest i = longitude j = latitude and they go from (0:360,0:360) each that is the range i chose
2022-04-29 00:21:36	←	jpn has quit (Ping timeout: 276 seconds)
2022-04-29 00:21:36	j3g	mav`rik exactly
2022-04-29 00:21:49	→	tortal_ has joined #python
2022-04-29 00:21:51	←	Elliria has quit (Quit: Konversation terminated!)
2022-04-29 00:21:58	s33ker	i wanna do a dictionary for distance between two points whit a specific angle
2022-04-29 00:22:14	s33ker	that way i dont need to calculate it just retrieve it
2022-04-29 00:22:15	mav`rik	j3g: don't use `input` then, do something like `for line in sys.stdin:` (or if you can't do a loop, `sys.stdin.readline()`
2022-04-29 00:22:33	nedbat	j3g: or even the fileinput module in the stdlib
2022-04-29 00:22:55	mav`rik	I always forget about that
2022-04-29 00:23:04	j3g	mav`rik that was adding the \n to the file. so the generated output from my python would include a lot of literal \n instead of real newlines
2022-04-29 00:23:21	←	tortal has quit (Ping timeout: 246 seconds)
2022-04-29 00:23:58	mav`rik	j3g: how are you writing to the file? Are you using `repr` or something at some point?
2022-04-29 00:24:00	j3g	mav`rik data=sys.stdin.readlines()
2022-04-29 00:24:01	j3g	this was resulting on a file with a lot of \n strings
2022-04-29 00:24:06	j3g	no I wasn't
2022-04-29 00:24:30	←	dogbert2 has quit (Remote host closed the connection)
2022-04-29 00:24:32	←	irfanns has quit (Remote host closed the connection)
2022-04-29 00:24:40	←	paul424 has quit (Quit: Leaving)
2022-04-29 00:24:42	j3g	should it be data=repr(sys.stdin.readlines())?
2022-04-29 00:24:46	→	dogbert2 has joined #python
2022-04-29 00:24:52	→	irfanns has joined #python
2022-04-29 00:24:57	←	s33ker has quit (Quit: Client closed)
2022-04-29 00:25:20	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-29 00:25:34	mav`rik	j3g: No, I'm trying to work out how you end up with the literal characters \ and n in place of an actual newline. How do you output `data` to your file/output?
2022-04-29 00:26:04	←	fling has quit (Ping timeout: 240 seconds)
2022-04-29 00:26:47	SnoopJ	rawrrr, I would probably approach that by writing a function is_date(), then do something like: `results = []; lines = []; for line in f: if is_date(line): if parse_date(line) > CUTOFF: results += "\n".join(lines); lines=[];; else: lines += line`
2022-04-29 00:27:01	ℹ	irc: disconnected from server
2022-04-29 15:50:06	→	oxide has joined #python
2022-04-29 15:50:06	ℹ	Topic for #python is "Anything Python is on-topic. | Don't paste, use https://bpa.st/+python | Questions about this channel? https://www.pound-python.org | CoC: https://j.mp/psf-coc | Tutorial: https://j.mp/PyTut | New programmer? https://j.mp/23X7emF | Ops: #python-ops"
2022-04-29 15:50:06	ℹ	Topic set by nedbat (~nedbat@python/psf/nedbat) on Sat, 18 Sep 2021 03:27:50
2022-04-29 15:50:08	ℹ	Channel #python: 1633 nicks (1 op, 0 voices, 1632 normals)
2022-04-29 15:50:08	ℹ	Channel created on Wed, 19 May 2021 19:20:29
2022-04-29 15:50:23	nullie	bluesmonk: is your pytest version 6.0 or higher?
2022-04-29 15:51:46	→	iwtcn has joined #python
2022-04-29 15:51:58	bluesmonk	oh
2022-04-29 15:52:02	←	wakeup has quit (Quit: Client closed)
2022-04-29 15:52:36	bluesmonk	surprisingly, I don't. That will solve it for sure. thanks for pointing it out!
2022-04-29 15:53:03	←	shouting_4_help has quit (Ping timeout: 276 seconds)
2022-04-29 15:53:18	→	rhu has joined #python
2022-04-29 15:54:14	→	msk has joined #python
2022-04-29 15:54:27	←	iwtcn has quit (Max SendQ exceeded)
2022-04-29 15:54:28	←	jazzy has quit (Ping timeout: 250 seconds)
2022-04-29 15:54:51	rick123	Hmm
2022-04-29 15:55:09	←	boris_ has quit (Remote host closed the connection)
2022-04-29 15:55:16	→	iwtcn has joined #python
2022-04-29 15:55:56	bluesmonk	lol that was it. I had it pinned to ^5.3.1. Thanks nullie
2022-04-29 15:56:17	→	boris_ has joined #python
2022-04-29 15:56:45	→	nixoeen has joined #python
2022-04-29 15:56:45	←	nixoeen has quit (Changing host)
2022-04-29 15:56:45	→	nixoeen has joined #python
2022-04-29 15:57:04	←	MajorBiscuit has quit (Ping timeout: 248 seconds)
2022-04-29 15:57:22	rick123	exarkun: So wait, let me clarify this. "they'll take turns running" - does this mean one thread finishes entire execution before another one starts, or does concurrent execution happen where bits of each run in turns and each of them exit/get done in random orders?
2022-04-29 15:58:09	→	MajorBiscuit has joined #python
2022-04-29 15:58:27	rick123	bjs: Trying to understand this, so lets a Thread1 fires an HTTP request, then execution is allowed to pass on to Thread2? So Python under-the-hood keeps a track of which disk or network I/O sockets are bound to which threads?
2022-04-29 15:58:30	←	de-facto has quit (Remote host closed the connection)
2022-04-29 15:58:34	→	uvgisme has joined #python
2022-04-29 15:58:53	→	duuude has joined #python
2022-04-29 15:59:24	bjs	rick123: well it's not really "keeping track" like that, it's just releasing the GIL before it does the I/O and acquires it again before it continues afterwards
2022-04-29 15:59:31	←	rhu has quit (Remote host closed the connection)
2022-04-29 15:59:43	→	de-facto has joined #python
2022-04-29 15:59:55	←	tortal has quit (Read error: Connection reset by peer)
2022-04-29 16:00:25	→	javaaaaaaaaaa has joined #python
2022-04-29 16:00:50	nullie	rick123: each python operation acquires GIL, then releases it immediately. So, operations run concurrently in random order
2022-04-29 16:01:26	←	mihael has quit (Ping timeout: 252 seconds)
2022-04-29 16:02:04	nullie	rick123: some operations, like read and write to sockets/files release GIL while waiting for operating system call to return
2022-04-29 16:03:06	supakeen	Python isn't keeping track, your operating system is 🙂
2022-04-29 16:03:06	bjs	rick123: e.g. when you (or your HTTP Requests library) does a socket.recv() eventually the Python implementation will call the underlying C socket recv() function and it basically goes: `ReleaseGIL(); recv(&data); AcquireGIL(); ...<continue>` so that while the thread is blocked waiting for the recv another thread can take the GIL and do some work.
2022-04-29 16:03:48	←	ssbr has quit (Ping timeout: 240 seconds)
2022-04-29 16:04:13	←	boris_ has quit (Remote host closed the connection)
2022-04-29 16:05:07	rick123	nullie: bjs: Got it!
2022-04-29 16:05:17	→	boris_ has joined #python
2022-04-29 16:05:23	→	wakeup has joined #python
2022-04-29 16:05:37	rick123	How small can an operation be? Would 2 variable assignments be 2 different operations between which the GIL would be released and acquired?
2022-04-29 16:06:18	bjs	rick123: it's hard to measure or estimate, there's no fixed amount of time/"operations" that the GIL will be held for. But you know the GIL will always be held when doing anything "Pythony"
2022-04-29 16:06:25	←	drogas has quit (Quit: Connection closed)
2022-04-29 16:06:36	nedbat	using this regex to count trailing zeros: len(re.search("0+$", s)[0])   this will have bad backtracking, right? Is there a regex way to prevent that?
2022-04-29 16:06:39	bjs	so setting variables, reading variables, looking up attributes, etc will all be "some number" of operations but they'll all hold the GIL
2022-04-29 16:06:43	nullie	I think each bytecode operation gets it's own lock/release
2022-04-29 16:06:49	bjs	nullie: no
2022-04-29 16:07:01	exarkun	It used to be 100 byte code operations (unless something special happened)
2022-04-29 16:07:04	nullie	ah
2022-04-29 16:07:04	bjs	the GIL might not be released for many bytecode,  or a single bytecode might take and release the GIL many times
2022-04-29 16:07:08	exarkun	In more recent Pythohns it is time-based
2022-04-29 16:07:12	nedbat	how the GIL behaves changes from version to version too...
2022-04-29 16:07:28	nedbat	3.10 made it so the classic +=1 race demonstration no longer fails
2022-04-29 16:07:40	exarkun	If the exact details make a difference to your program though, your program is broken
2022-04-29 16:07:59	←	ick has quit (Ping timeout: 272 seconds)
2022-04-29 16:08:03	nullie	well, people tend to assume that += is atomic
2022-04-29 16:08:15	→	z8z has joined #python
2022-04-29 16:08:21	←	MajorBiscuit has quit (Ping timeout: 250 seconds)
2022-04-29 16:08:23	→	davor_ has joined #python
2022-04-29 16:08:32	rick123	I think I'm really clear on multithreading now. I'd like to digress a bit here and ask are implementations in Ruby and PHP similar (in terms of GIL)? If any of you is aware.
2022-04-29 16:08:40	nedbat	nullie: right, but in 3.7 it is not.
2022-04-29 16:08:59	←	davor has quit (Ping timeout: 240 seconds)
2022-04-29 16:09:10	nullie	yeah, I guess it's depending on python implementation anyway, so proper locking should be there
2022-04-29 16:09:17	→	ano has joined #python
2022-04-29 16:09:17	supakeen	Both PHP and Ruby have GILs.
2022-04-29 16:09:35	→	skapata has joined #python
2022-04-29 16:09:35	←	skapata has quit (Changing host)
2022-04-29 16:09:35	→	skapata has joined #python
2022-04-29 16:09:43	supakeen	Err, or does PHP not, don't recall.
2022-04-29 16:10:29	→	MajorBiscuit has joined #python
2022-04-29 16:10:32	→	drogas has joined #python
2022-04-29 16:10:33	supakeen	I do recall it absolutely did not work when using its pthread things years ago.
2022-04-29 16:10:38	rick123	Yeah on a quick google seems like Ruby MRI have them, for PHP people just bashing it :D
2022-04-29 16:11:13	rick123	https://www.php.net/manual/en/intro.pthreads.php - "This extension is considered unmaintained and dead.
2022-04-29 16:11:16	rick123	"
2022-04-29 16:12:33	←	Lord_of_Life has quit (Ping timeout: 276 seconds)
2022-04-29 16:12:46	exarkun	But, eg, PyPy has a GIL-free mode
2022-04-29 16:13:06	→	Lord_of_Life has joined #python
2022-04-29 16:13:19	exarkun	And is generally just faster for single-threaded workloads
2022-04-29 16:13:21	bjs	and Jython has no GIL because it's on the JVM
2022-04-29 16:13:24	supakeen	I must say I've heard a lot less about the GIL the past year or two as compared to the decade before it where it was brought up every day.
2022-04-29 16:13:28	rick123	To attain that, do some features have to be cut down?
2022-04-29 16:13:47	bjs	supakeen: i think people thought more parallel workloads would appear much faster than they did
2022-04-29 16:13:52	←	iwtcn has quit (Quit: Leaving)
2022-04-29 16:13:54	exarkun	PyPy's GIL-free mode ("STM") is still a complete Python.
2022-04-29 16:13:59	→	skapate has joined #python
2022-04-29 16:13:59	←	skapate has quit (Changing host)
2022-04-29 16:13:59	→	skapate has joined #python
2022-04-29 16:14:25	←	nixoeen has quit (Quit: This computer has gone to sleep)
2022-04-29 16:14:46	←	skapate has quit (Read error: Connection reset by peer)
2022-04-29 16:14:48	supakeen	But even a decade ago it was always just 'use twisted' if you're in any sort of networking anyways.
2022-04-29 16:14:58	bjs	supakeen: and everyone got distracted with fancy async frameworks
2022-04-29 16:15:04	bjs	which is like, GIL^2 :P
2022-04-29 16:15:36	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 16:15:43	exarkun	Well, some people just stopped using Python and switched to Go or Rust
2022-04-29 16:15:46	supakeen	Apparently people run into less problems with that, I always wonder if the idiom suits the popular languages or the idiom suits the problem but hey.
2022-04-29 16:15:58	←	hans_ has quit (Quit: Connection closed for inactivity)
2022-04-29 16:16:14	exarkun	both of which have execution models better suited to multithreading
2022-04-29 16:16:14	oxide	hi, i'm trying to program kosaraju's algorithm for finding the strongly connected components of a graph, and i can print out the sccs line-by-line, but i can't create a list of the sccs
2022-04-29 16:16:15	→	gitesh has joined #python
2022-04-29 16:16:18	oxide	https://bpa.st/5HIA
2022-04-29 16:16:22	bjs	supakeen: I also think that there used to be a *lot* of misinformation about the GIL,  I used to see people trying to write multiprocessing code complaining about the GIL when doing a lot of http requests
2022-04-29 16:16:34	supakeen	Oh, definitely true.
2022-04-29 16:16:42	supakeen	I just still use Twisted for near-everything networking anyways.
2022-04-29 16:17:09	oxide	if i remove line 21 and simply return `visited`, it outputs the growing list of visited vertices instead of the list of each connected component
2022-04-29 16:17:17	→	skapate has joined #python
2022-04-29 16:17:17	←	skapate has quit (Changing host)
2022-04-29 16:17:17	→	skapate has joined #python
2022-04-29 16:17:24	←	skapata has quit (Quit: Ĝis.)
2022-04-29 16:17:34	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-29 16:18:06	←	geosmile has quit (Remote host closed the connection)
2022-04-29 16:18:16	→	Belxjander has joined #python
2022-04-29 16:18:26	←	wakeup has quit (Quit: Client closed)
2022-04-29 16:19:37	←	horner has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-29 16:19:41	nedbat	oxide: line 31 won't do anything, btw, though I'm not sure if that's affecting things
2022-04-29 16:20:26	oxide	ah, yes
2022-04-29 16:20:33	nedbat	oxide: it won't do anything for two reasons: .append() returns None, and you are assigning it to a local
2022-04-29 16:21:21	oxide	huh, that's strange
2022-04-29 16:21:25	oxide	i removed it and it stopped working
2022-04-29 16:21:27	←	otisolsen70 has quit (Ping timeout: 240 seconds)
2022-04-29 16:22:15	supakeen	You don't want to remove the entire line.
2022-04-29 16:22:26	→	raxor2k has joined #python
2022-04-29 16:22:44	raxor2k	can someone explain me this "RecursionError: maximum recursion depth exceeded in comparison" thing ?
2022-04-29 16:22:50	raxor2k	makes no sense why im getting this
2022-04-29 16:22:51	oxide	so i replaced it with stack.append(d) 
2022-04-29 16:23:01	←	Joel has quit (Remote host closed the connection)
2022-04-29 16:23:03	nullie	raxor2k: your calls are nested too deep
2022-04-29 16:23:10	nedbat	oxide: oh sorry, line 31 does do something, it mutates stack
2022-04-29 16:23:15	nullie	raxor2k: you reach the limit of recursion
2022-04-29 16:24:11	oxide	nedbat: right, so i just replaced it with stack.append(d)
2022-04-29 16:24:20	raxor2k	nullie: but i use the same type of dynamic in the code elsewhere, and it works ..
2022-04-29 16:24:21	nullie	raxor2k: it just happens that the actual limit is reach inside comparison calls
2022-04-29 16:25:03	nullie	raxor2k: same type of what?
2022-04-29 16:26:39	←	codebam has quit (Ping timeout: 240 seconds)
2022-04-29 16:27:00	←	NoelFlantier3 has quit (Read error: Connection reset by peer)
2022-04-29 16:27:11	raxor2k	nullie: im using the same type of code elsewhere and it works
2022-04-29 16:27:15	raxor2k	but not in this particular case..
2022-04-29 16:27:26	→	NoelFlantier3 has joined #python
2022-04-29 16:27:33	nullie	raxor2k: maybe you have bigger numbers or bigger data set in this case
2022-04-29 16:28:17	nullie	so recursion is triggered deeper
2022-04-29 16:28:17	←	leitz has quit (Quit: nappy time)
2022-04-29 16:31:24	raxor2k	so i solve this by adding and extra await for the information to be processed, or what ?
2022-04-29 16:31:24	←	uvgisme has quit (Read error: Connection reset by peer)
2022-04-29 16:32:46	nullie	raxor2k: no, you need to either increase max recursion depth, or convert your algorithm to an iterative one
2022-04-29 16:33:02	→	summersault has joined #python
2022-04-29 16:33:30	nullie	or maybe fix an error which leads to an infinite recursion
2022-04-29 16:33:59	←	thurs has quit (Quit: The Lounge - https://thelounge.chat)
2022-04-29 16:34:15	←	zumba_addict has quit (Quit: Client closed)
2022-04-29 16:34:47	←	ano has quit (Remote host closed the connection)
2022-04-29 16:35:07	→	ano has joined #python
2022-04-29 16:35:10	→	han-solo has joined #python
2022-04-29 16:35:39	←	sprout has quit (Ping timeout: 250 seconds)
2022-04-29 16:36:07	←	z4kz has quit (Quit: Client closed)
2022-04-29 16:39:01	←	MajorBiscuit has quit (Ping timeout: 272 seconds)
2022-04-29 16:39:59	←	NoelFlantier3 has quit (Read error: Connection reset by peer)
2022-04-29 16:40:17	←	henbruas has quit (Ping timeout: 256 seconds)
2022-04-29 16:40:17	→	nixoeen has joined #python
2022-04-29 16:40:18	←	nixoeen has quit (Changing host)
2022-04-29 16:40:18	→	nixoeen has joined #python
2022-04-29 16:40:27	→	NoelFlantier3 has joined #python
2022-04-29 16:40:58	→	Csm319_ has joined #python
2022-04-29 16:41:39	←	pydev1 has quit (Ping timeout: 240 seconds)
2022-04-29 16:42:11	→	vanessa has joined #python
2022-04-29 16:42:19	→	Joel has joined #python
2022-04-29 16:43:21	←	csm3105 has quit (Ping timeout: 246 seconds)
2022-04-29 16:43:26	→	angelacrust has joined #python
2022-04-29 16:43:41	→	henbruas has joined #python
2022-04-29 16:44:47	←	han-solo has quit (Quit: leaving)
2022-04-29 16:45:05	←	nixoeen has quit (Client Quit)
2022-04-29 16:45:05	←	SGautam has quit (Quit: Connection closed for inactivity)
2022-04-29 16:49:27	←	ssh073 has quit (Quit: The Lounge - https://thelounge.chat)
2022-04-29 16:49:39	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 16:50:59	←	boris_ has quit (Remote host closed the connection)
2022-04-29 16:51:24	←	Oddity has quit (Ping timeout: 246 seconds)
2022-04-29 16:51:26	→	ick has joined #python
2022-04-29 16:51:37	→	ssh073 has joined #python
2022-04-29 16:51:51	←	NoelFlantier3 has quit (Read error: Connection reset by peer)
2022-04-29 16:52:08	→	boris_ has joined #python
2022-04-29 16:52:14	raxor2k	nullie: seems i found the error. thanks
2022-04-29 16:52:15	→	Belxjander has joined #python
2022-04-29 16:52:18	→	NoelFlantier3 has joined #python
2022-04-29 16:52:37	rick123	https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods - This says " Note that safely forking a multithreaded process is problematic." - Then why is it the default on unix? Because spawn is slow but that's not problematic?
2022-04-29 16:54:08	lessshaste	is there a python module that will return the size of a maximum matching in a bipartite graph in a single function call?
2022-04-29 16:54:10	supakeen	It's not entirely clear but I believe they mean forking after the initial fork.
2022-04-29 16:54:26	→	slbtty has joined #python
2022-04-29 16:54:33	supakeen	nedbat: Aren't you involved with the docs-people?
2022-04-29 16:54:34	→	mihael has joined #python
2022-04-29 16:54:53	nedbat	supakeen: I am
2022-04-29 16:55:03	supakeen	What is their usual venue of discussion?
2022-04-29 16:55:05	nedbat	(depending on what you mean by involved, docs, and people)
2022-04-29 16:55:08	nedbat	:)
2022-04-29 16:55:21	nedbat	"you" at least was unambiguous
2022-04-29 16:55:26	→	rama has joined #python
2022-04-29 16:55:26	supakeen	Hehe.
2022-04-29 16:55:45	nullie	rick123: I think it's because forking is faster
2022-04-29 16:55:47	→	MajorBiscuit has joined #python
2022-04-29 16:55:53	exarkun	rick123: Because fork is old
2022-04-29 16:55:54	nullie	rick123: and may occupy less memory
2022-04-29 16:56:06	exarkun	rick123: And stuff in the stdlib tends not to change very dramatically
2022-04-29 16:56:27	nedbat	supakeen: for fixes to words, I think opening an issue or pr is the best thing. it's all on github now
2022-04-29 16:56:42	supakeen	Okay, I had a typo PR merged like two days ago on it too.
2022-04-29 16:56:47	supakeen	I'll keep doing that route then 🙂
2022-04-29 16:56:48	←	raxor2k has quit (Remote host closed the connection)
2022-04-29 16:57:05	rick123	exarkun: nullie: Why is forking problematic though? Because its old? thats it? :D
2022-04-29 16:57:26	exarkun	"problematic" implies a use-case and a set of requirements
2022-04-29 16:57:36	exarkun	so it's wrong to just say "forking is problematic"
2022-04-29 16:57:45	exarkun	But maybe it is problematic in the face of certain goals
2022-04-29 16:57:58	nullie	in the context of multithreaded processes
2022-04-29 16:58:08	supakeen	I misread the text, they say that if you are doing multiple threads and are going to use multiprocessing to then fork.
2022-04-29 16:58:10	exarkun	yep, that's one
2022-04-29 16:58:33	supakeen	That would only 'copy' the current active thread which leads to all sorts of ~~fun~~ regarding locks and such.
2022-04-29 16:58:44	→	nyah has joined #python
2022-04-29 16:58:57	exarkun	oh yea I missed "multithreading" in that quote, just read it as "multiprocess"
2022-04-29 16:58:59	←	maxzor has quit (Ping timeout: 240 seconds)
2022-04-29 16:59:05	supakeen	Same.
2022-04-29 16:59:10	supakeen	That's what I'd want to make clear in those docs.
2022-04-29 16:59:18	→	zerothule has joined #python
2022-04-29 16:59:21	exarkun	rick123: What if your program has 2 threads and a lock and one of the threads is holding the lock and then you fork?
2022-04-29 16:59:38	rick123	Ah I get it now, ok.
2022-04-29 17:00:04	supakeen	If you fork that way for the fork it only has the one thread and all the other ones 'disappeared'.
2022-04-29 17:01:27	supakeen	(theoretically you could do it right, practically you likely won't)
2022-04-29 17:02:22	vanessa	hi all
2022-04-29 17:02:43	←	summersault has quit (Remote host closed the connection)
2022-04-29 17:03:51	←	zerothule has quit (Ping timeout: 260 seconds)
2022-04-29 17:03:56	vanessa	if I am running something like this: `for x in my_iter: something()` and my_iter throws an error. what would x contain?
2022-04-29 17:03:58	→	summersault has joined #python
2022-04-29 17:04:57	nedbat	vanessa: if it throws it before the first value, then x doesn't exist yet.  You would get an UnboundLocalError if you accessed it
2022-04-29 17:06:23	vanessa	no. the loop has already ran many times before it throws an exception
2022-04-29 17:07:09	←	revolve has quit (Ping timeout: 276 seconds)
2022-04-29 17:07:12	←	funhouse has quit (Quit: Client closed)
2022-04-29 17:08:24	vanessa	x would contain the last value that my_iter send?
2022-04-29 17:08:36	←	iomari891 has quit (Ping timeout: 240 seconds)
2022-04-29 17:09:07	→	revolve has joined #python
2022-04-29 17:09:45	←	ick has quit (Ping timeout: 276 seconds)
2022-04-29 17:10:04	vanessa	but if I want to see what my_iter is sending, what do I do?
2022-04-29 17:10:48	The-Compiler	I have some third-party code which uses nested classes, i.e. there is a "QEvent" class, then a "Type" class in there. If I have e.g. QEvent.Type, can I get QEvent from that somehow? (other than, dunno, splitting __qualname__ and then using getattr on __module__)
2022-04-29 17:10:53	←	rama has quit (Ping timeout: 256 seconds)
2022-04-29 17:11:39	→	qlixed has joined #python
2022-04-29 17:11:55	←	angelacrust has quit (Quit: Client closed)
2022-04-29 17:11:57	←	henbruas has quit (Ping timeout: 272 seconds)
2022-04-29 17:12:06	→	angelacrust has joined #python
2022-04-29 17:12:23	The-Compiler	getattr(sys.modules[QEvent.Type.__module__], QEvent.Type.__qualname__.split(".")[0])    # eww
2022-04-29 17:12:24	nedbat	vanessa: if the loop has already run, then x will still have the previous value, yes.
2022-04-29 17:12:35	→	ick has joined #python
2022-04-29 17:12:40	nedbat	vanessa: to see what it sent, just print(x)
2022-04-29 17:13:07	←	roxfan has quit (Ping timeout: 240 seconds)
2022-04-29 17:14:20	vanessa	the erroneous value that my_iter sent and which caused my entire program to crash? how do I see that?
2022-04-29 17:14:56	←	ivii has quit (Remote host closed the connection)
2022-04-29 17:15:39	nedbat	vanessa: you said my_iter raises an exception, so it didn't send a value, right?
2022-04-29 17:16:04	→	ivii has joined #python
2022-04-29 17:16:04	→	henbruas has joined #python
2022-04-29 17:17:09	→	otisolsen70 has joined #python
2022-04-29 17:18:48	←	mihael has quit (Quit: Client closed)
2022-04-29 17:19:50	vanessa	so, torch (https://pytorch.org/) is throwing a tensor mismatch error. my_iter is a dataset which send me a wrong tensor I guess.
2022-04-29 17:20:09	←	summersault has quit (Quit: Leaving...)
2022-04-29 17:20:14	→	kuwv has joined #python
2022-04-29 17:20:23	→	orbisvicis has joined #python
2022-04-29 17:20:45	→	nuclearg1 has joined #python
2022-04-29 17:21:48	→	admin123 has joined #python
2022-04-29 17:21:52	→	PJBoy has joined #python
2022-04-29 17:22:02	→	foobaz212 has joined #python
2022-04-29 17:24:29	←	admin124 has quit (Ping timeout: 256 seconds)
2022-04-29 17:24:32	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 17:24:42	←	saroy has quit (Ping timeout: 276 seconds)
2022-04-29 17:25:53	←	nuclearg1 has quit (Ping timeout: 272 seconds)
2022-04-29 17:26:08	ℹ	pah_ is now known as pa
2022-04-29 17:26:09	←	pa has quit (Changing host)
2022-04-29 17:26:09	→	pa has joined #python
2022-04-29 17:26:33	←	skapate has quit (Quit: Ĝis.)
2022-04-29 17:27:00	→	sprout has joined #python
2022-04-29 17:28:26	→	Belxjander has joined #python
2022-04-29 17:29:12	←	vezon has quit (Remote host closed the connection)
2022-04-29 17:29:13	←	demophoon4 has quit (Read error: Connection reset by peer)
2022-04-29 17:29:57	→	kenaryn has joined #python
2022-04-29 17:30:16	Jong	Hello. I have a list of 100 elements. I want to sample from a normal distribution and center the distribution over the middle element 50 and have it so start and end indices are 2 standard deviations away.  The list is populated with only zeros. I want the indices samples from the normal distribution have 1 values.  When this is done, I think there will be a concentration of 1 values near 50, and the 1s become more sparse the farther away from the
2022-04-29 17:30:16	Jong	 center
2022-04-29 17:31:00	Jong	Does that make sense?
2022-04-29 17:31:32	→	demophoon4 has joined #python
2022-04-29 17:31:50	→	chozorho has joined #python
2022-04-29 17:32:04	←	yanmaani has quit (Ping timeout: 240 seconds)
2022-04-29 17:32:06	→	yanmaani1 has joined #python
2022-04-29 17:32:06	Jong	numpy.random.normal(loc = 50, scale = 100.0, size = 10)
2022-04-29 17:32:07	→	Deneb has joined #python
2022-04-29 17:32:08	vanessa	want a normal distribution with mu=50 and std=2?
2022-04-29 17:32:09	Jong	I think that does it
2022-04-29 17:32:55	→	sandipan has joined #python
2022-04-29 17:33:01	→	pydev1 has joined #python
2022-04-29 17:33:10	Jong	well I don't want the distribution. I want samples taken based on the probability of the distribution at each x point
2022-04-29 17:33:29	←	john has quit (Remote host closed the connection)
2022-04-29 17:33:30	Jong	so the center will have the highest probability of a sample being of it
2022-04-29 17:33:45	Jong	the tail ends have low probability of samples coming from them
2022-04-29 17:34:30	Jong	eh I think I am describing what is called a random normal distribution.
2022-04-29 17:34:43	Jong	"Draw random samples from a normal (Gaussian) distribution."
2022-04-29 17:34:48	Jong	https://numpy.org/doc/stable/reference/random/generated/numpy.random.normal.html
2022-04-29 17:34:52	vanessa	I think you are trying to do a importance sampling
2022-04-29 17:35:23	←	msk has quit (Ping timeout: 272 seconds)
2022-04-29 17:35:29	Jong	I'm not sure how that's different from drawing random samples from a normal distribution
2022-04-29 17:35:44	→	NotThatRPG has joined #python
2022-04-29 17:36:13	→	dez has joined #python
2022-04-29 17:36:42	→	tomeaton17 has joined #python
2022-04-29 17:38:41	→	xkuru has joined #python
2022-04-29 17:38:59	←	bitdex has quit (Quit: = "")
2022-04-29 17:39:59	←	TheCat has quit (Ping timeout: 240 seconds)
2022-04-29 17:41:05	←	JaredCE has quit (Ping timeout: 272 seconds)
2022-04-29 17:41:39	→	iomari891 has joined #python
2022-04-29 17:42:02	→	cm315 has joined #python
2022-04-29 17:44:49	→	rama has joined #python
2022-04-29 17:44:51	←	Csm319_ has quit (Ping timeout: 276 seconds)
2022-04-29 17:45:40	→	Pickchea has joined #python
2022-04-29 17:45:50	→	nixoeen has joined #python
2022-04-29 17:45:50	←	nixoeen has quit (Changing host)
2022-04-29 17:45:50	→	nixoeen has joined #python
2022-04-29 17:46:14	→	vulpes_vulpes has joined #python
2022-04-29 17:46:42	→	Sheilong has joined #python
2022-04-29 17:46:48	←	sandipan has quit (Ping timeout: 276 seconds)
2022-04-29 17:46:52	→	erikpt has joined #python
2022-04-29 17:46:58	→	Csm319_ has joined #python
2022-04-29 17:46:59	←	Csm319_ has quit (Remote host closed the connection)
2022-04-29 17:48:30	→	horner has joined #python
2022-04-29 17:48:46	→	frost has joined #python
2022-04-29 17:49:34	←	Pickchea has quit (Client Quit)
2022-04-29 17:49:48	←	erikpt1980 has quit (Ping timeout: 240 seconds)
2022-04-29 17:49:57	←	cm315 has quit (Ping timeout: 272 seconds)
2022-04-29 17:50:17	exarkun	which library is responsible for parsing requirements.txt-like content?
2022-04-29 17:51:48	←	CatCow has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-04-29 17:52:27	→	nuclearg1 has joined #python
2022-04-29 17:53:25	→	boka has joined #python
2022-04-29 17:53:35	boka	*Hello Python fanatics*
2022-04-29 17:53:53	boka	`I got intern interview in machine learning / deep learning`
2022-04-29 17:54:04	supakeen	Good luck with that.
2022-04-29 17:54:07	boka	after 3 days
2022-04-29 17:54:57	boka	supakeen , i've dl specialization, dl nanodegree . I've had vast knowledge but :(   because of no jobs on ml for begineers, i thought to leave and havent touch machine learning since *2 years*
2022-04-29 17:55:15	boka	but got this interview, i'm thinking would i do this
2022-04-29 17:55:16	boka	:(
2022-04-29 17:55:23	←	nixoeen has quit (Quit: This computer has gone to sleep)
2022-04-29 17:57:33	←	nuclearg1 has quit (Ping timeout: 272 seconds)
2022-04-29 17:58:53	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 17:59:07	←	foobaz212 has quit (Quit: Client closed)
2022-04-29 17:59:22	→	foobaz212 has joined #python
2022-04-29 17:59:36	boka	D:
2022-04-29 17:59:37	←	zeenk has quit (Quit: Konversation terminated!)
2022-04-29 17:59:38	vanessa	good luck for the interview boka
2022-04-29 17:59:59	vanessa	is this a MLOps kind of job?
2022-04-29 18:00:00	←	rama has quit (Ping timeout: 246 seconds)
2022-04-29 18:00:11	boka	thank you guys , i've to go deeper and pull out everything i learnt 2 years ago :(
2022-04-29 18:00:19	←	aincube has quit (Ping timeout: 240 seconds)
2022-04-29 18:00:27	boka	vanessa , it is intern i think but i dont know
2022-04-29 18:00:43	←	iomari891 has quit (Ping timeout: 272 seconds)
2022-04-29 18:01:35	→	wakeup has joined #python
2022-04-29 18:01:39	vanessa	what are the responsibilities? do you maintain and deploy models? or do you write models? or do you like create newer and better models?
2022-04-29 18:02:10	→	kaiseisei has joined #python
2022-04-29 18:02:41	→	aincube has joined #python
2022-04-29 18:02:43	→	Belxjander has joined #python
2022-04-29 18:03:02	→	giorgian has joined #python
2022-04-29 18:03:12	boka	D:  i dont remember, but i've had emailed about 50 company for web dev + machine learning both. got call it was ml company =L
2022-04-29 18:03:24	←	mug3n has quit (Remote host closed the connection)
2022-04-29 18:03:48	→	mug3n has joined #python
2022-04-29 18:04:49	vanessa	try https://arxiv.org/pdf/2201.00650.pdf if you are interning for the last role, I mentioned.
2022-04-29 18:05:19	→	adiKt has joined #python
2022-04-29 18:08:22	Jong	if you're checking whether x is none or a list with 1 or more elements, and x couldn't be anything but that, would you write "if x is not None:"  or simply "if x:"
2022-04-29 18:09:03	→	anomal has joined #python
2022-04-29 18:09:28	←	Lerroux has quit (Quit: Leaving)
2022-04-29 18:11:16	vanessa	sometimes if x cannot be [], then I guess I would `if x:`
2022-04-29 18:11:37	→	ized has joined #python
2022-04-29 18:12:14	→	agrosant has joined #python
2022-04-29 18:12:51	boka	Thank you vanessa , it will help  . :)
2022-04-29 18:12:55	nullie	I'd use if x is not None and assert len(x) > 0 (and if x is a function input, I'd raise ValueError)
2022-04-29 18:13:50	←	unautre has quit (Changing host)
2022-04-29 18:13:50	→	unautre has joined #python
2022-04-29 18:14:03	←	ized has quit (Quit: ized)
2022-04-29 18:14:52	→	ized has joined #python
2022-04-29 18:14:59	ℹ	bkhl_ is now known as Guest3425
2022-04-29 18:15:39	→	saroy has joined #python
2022-04-29 18:16:08	←	angelacrust has quit (Quit: Client closed)
2022-04-29 18:16:56	→	Guest39 has joined #python
2022-04-29 18:18:05	→	rannnn8888 has joined #python
2022-04-29 18:18:24	←	Guest39 has quit (Client Quit)
2022-04-29 18:18:25	rick123	o wow didn't know I could do `import __main__` as well.
2022-04-29 18:18:42	→	msk has joined #python
2022-04-29 18:20:02	→	switcher has joined #python
2022-04-29 18:20:16	←	switcher has quit (Client Quit)
2022-04-29 18:21:05	nedbat	rick123: import __main__ might not do what you want.
2022-04-29 18:21:21	→	bloody has joined #python
2022-04-29 18:22:01	→	Nahual has joined #python
2022-04-29 18:22:22	→	iomari891 has joined #python
2022-04-29 18:26:34	AhmedAmerican	within `argparse` can i receive the input argument as list ? https://bpa.st/BSDQ so when i do `python script.py 1 2` so i want to receive `[1, 2]` within `check_input`
2022-04-29 18:26:53	→	jokoon has joined #python
2022-04-29 18:26:58	jokoon	if choice != None and (choice = int(choice)) in dicted:
2022-04-29 18:27:10	jokoon	can't I assign a value inside a if?
2022-04-29 18:27:25	nullie	in 3.10 and later
2022-04-29 18:27:25	phy1729	you're looking for := aka the walrus operator
2022-04-29 18:28:56	boka	D: D:  wt the heck walrus
2022-04-29 18:29:02	→	rama has joined #python
2022-04-29 18:29:07	←	saroy has quit (Remote host closed the connection)
2022-04-29 18:29:26	→	saroy has joined #python
2022-04-29 18:29:45	←	Naan has quit (Quit: Leaving)
2022-04-29 18:31:09	←	boka has quit (Quit: Client closed)
2022-04-29 18:32:27	←	rannnn8888 has quit (Quit: Client closed)
2022-04-29 18:33:00	phy1729	Officially it's an assignment expression, but the language reference does use the world walrus as well https://docs.python.org/3/reference/expressions.html#assignment-expressions
2022-04-29 18:33:36	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 18:33:45	Wooble	feature request: allow me to use a walrus emoji instead of :=
2022-04-29 18:34:19	jokoon	just call .replace() on your entire code I guess ;D
2022-04-29 18:34:37	Wooble	(I don't think there actually *is* a walrus emoji, but that's a minor technicality)
2022-04-29 18:34:58	→	uvgisme has joined #python
2022-04-29 18:35:22	phy1729	Guess you have to petition the Unicode Consortium first
2022-04-29 18:35:22	←	uvgisme has quit (Client Quit)
2022-04-29 18:35:49	jokoon	🦭 -- 1f9ad -- seal
2022-04-29 18:35:52	jokoon	almost
2022-04-29 18:36:11	←	revolve has quit (Read error: Connection reset by peer)
2022-04-29 18:36:15	jokoon	🦛 -- 1f99b -- hippopotamus
2022-04-29 18:36:24	jokoon	looks like a walrus?
2022-04-29 18:36:33	←	wakeup has quit (Quit: Client closed)
2022-04-29 18:37:03	⚡	Wooble storms off to find an esoteric lanaguage where all of the operators are cute animals
2022-04-29 18:37:20	→	Belxjander has joined #python
2022-04-29 18:37:21	→	uvgisme has joined #python
2022-04-29 18:37:37	jokoon	I already saw a meme with a language done with emojis
2022-04-29 18:38:09	→	revolve has joined #python
2022-04-29 18:38:23	jokoon	Wooble, behold https://i.redd.it/cozohvgr2h7z.png
2022-04-29 18:38:27	Wooble	oh I'm sure there are probably dozens :)
2022-04-29 18:38:33	→	squid_game has joined #python
2022-04-29 18:38:40	→	daniel-leinweber has joined #python
2022-04-29 18:39:47	Wooble	https://esolangs.org/wiki/Emoji
2022-04-29 18:40:15	→	nuclearg1 has joined #python
2022-04-29 18:40:59	→	Naan has joined #python
2022-04-29 18:41:22	←	rindolf has quit (Read error: Connection reset by peer)
2022-04-29 18:41:38	squid_game	I'd like to store global variables in an organized way (group them as logic) through all project files. What is a good way to store them? As an example, say I have color code, Red="Red", Blue = "Blue", Green="Green". Would it be better to store them as a dictionary or is there any class type that I can access as Colors.Red?
2022-04-29 18:41:50	→	rindolf has joined #python
2022-04-29 18:41:58	Jong	nullie that's a lot of code in place of simply if x:
2022-04-29 18:42:21	←	msk has quit (Ping timeout: 246 seconds)
2022-04-29 18:42:26	nullie	squid_game: I think you can use simple class
2022-04-29 18:42:31	→	idiocrash has joined #python
2022-04-29 18:42:54	nullie	squid_game: sometimes enum module is useful
2022-04-29 18:43:00	phy1729	squid_game: you might want an Enum. Depends on how you're using it
2022-04-29 18:43:08	nullie	Jong: it's about code readability and resilience, not size
2022-04-29 18:43:24	←	rama has quit (Ping timeout: 246 seconds)
2022-04-29 18:43:44	phy1729	nullie: there's type annotation and checkers that can do a similar job
2022-04-29 18:44:20	nullie	phy1729: you can't annotate and type check list size in Python
2022-04-29 18:44:38	→	han-solo has joined #python
2022-04-29 18:44:57	andi_	can't i load a x64 dll with ctypes?
2022-04-29 18:45:18	phy1729	nullie: but if it's annotated as a list, if x: is perfectly fine to check the size
2022-04-29 18:45:37	squid_game	nullie, phy1729. Another thing I forgot to add is that I am already using Class, but my problem is that I need to update value of a member globally at the run-time. When I use class, I can't update the class's default member on the run-time. Can I update enum module's member globally on the run-time?
2022-04-29 18:45:50	→	betuxy has joined #python
2022-04-29 18:46:00	andi_	i'm confused, myDll = ctypes.CDLL(dllabspath) just get's me an error: FileNotFoundError: Could not find module but the file is there and the path is correct
2022-04-29 18:46:12	←	nuclearg1 has quit (Ping timeout: 246 seconds)
2022-04-29 18:46:22	phy1729	andi_: are you missing __init__.py files?
2022-04-29 18:46:23	nullie	squid_game: you can update class members if you always reference the class as class, not class instance
2022-04-29 18:46:54	nullie	phy1729: what if list becomes an empty one by accident? How the reader will know that the list is not supposed to be empty?
2022-04-29 18:46:59	andi_	phy1729: why would i need a __init__ file?
2022-04-29 18:47:44	phy1729	andi_: to make it a module so the import works; not totally sure that's applicable to your case, but it's a common cause for not being able to import
2022-04-29 18:47:56	←	tobybl has quit (Ping timeout: 260 seconds)
2022-04-29 18:48:08	Wooble	andi_: in my experience, FileNotFoundError isn't usually lying.
2022-04-29 18:48:10	exarkun	andi_, phy1729: ctypes.CDLL isn't an import, it doesn't follow any python module system rules.
2022-04-29 18:48:17	phy1729	nullie: that's what the if x: check is for
2022-04-29 18:48:23	→	slowButPresent has joined #python
2022-04-29 18:48:36	←	idiocrash has quit (Ping timeout: 240 seconds)
2022-04-29 18:49:09	andi_	Wooble: well me neither, i also tried the following code
2022-04-29 18:49:19	nullie	phy1729: then we rest of the code will assume that it's None, but it's an empty list
2022-04-29 18:49:45	phy1729	None is usually checked with   is None or is not None
2022-04-29 18:49:46	andi_	https://paste.xinu.at/n6ALzh/
2022-04-29 18:50:03	→	idiocrash has joined #python
2022-04-29 18:50:10	nullie	phy1729: that's why I proposed to check with is None and then assure that the list is not empty
2022-04-29 18:50:11	exarkun	nullie: What?  `if x:` does not mean `x` is None.
2022-04-29 18:50:20	andi_	both variant, either with "abc.dll" and with the dllabspath... but same result
2022-04-29 18:50:20	squid_game	nullie, how can I change value of green on this example https://bpa.st/LV6Q
2022-04-29 18:50:29	nullie	exarkun: the original question was about distinguishing between None and non empty list
2022-04-29 18:50:49	exarkun	nullie: Then phy1729 said "nullie: but if it's annotated as a list"
2022-04-29 18:50:57	nullie	squid_game: access Color.green with Color.green, not Color().green
2022-04-29 18:50:58	exarkun	So it seems like they changed their mind?
2022-04-29 18:51:12	nullie	oh
2022-04-29 18:51:14	phy1729	I wasn't the original person
2022-04-29 18:51:17	←	GenTooMan has quit (Ping timeout: 250 seconds)
2022-04-29 18:51:17	exarkun	oh
2022-04-29 18:51:21	exarkun	:)
2022-04-29 18:51:22	←	xxyxx has quit (Remote host closed the connection)
2022-04-29 18:51:22	squid_game	nullie. Great, thank you :)
2022-04-29 18:51:35	Wooble	andi_: what's the full error message?
2022-04-29 18:51:44	nullie	squid_game: but maybe actually it's a bad pattern to have global variables
2022-04-29 18:52:07	→	GenTooMan has joined #python
2022-04-29 18:52:15	andi_	Wooble: https://paste.xinu.at/9hW1D/
2022-04-29 18:52:19	→	JaredCE has joined #python
2022-04-29 18:52:22	squid_game	nullie, I'd like to update that class members globally on run time. Would it be better to use class Colors(Enum) or another way?
2022-04-29 18:52:35	Wooble	andi_: (anyway, even on a 32-bit python, the error you'd get with a 64bit DLL wouldn't be file not found.)
2022-04-29 18:52:58	nullie	squid_game: maybe it's actually better to have a global instance of an object and then change members of that instance
2022-04-29 18:53:23	→	xxyxx has joined #python
2022-04-29 18:53:27	nullie	squid_game: or if it's possible, change the architecture so you pass that object instance and not have it accessed globally
2022-04-29 18:53:38	→	frmlof has joined #python
2022-04-29 18:53:54	→	wovixo has joined #python
2022-04-29 18:55:19	andi_	Wooble: i know, but i don't know why i get the error... i just added an .exists() https://paste.xinu.at/IPuml/ with the output https://paste.xinu.at/OVToj/ even python itself tells me the file is ther
2022-04-29 18:55:24	squid_game	I'd like to store global common variables that would be used among other files. I didn't want to pass the same object on each function. That's why my intention to use it as a class (or similar) then I can just import it into another file
2022-04-29 18:56:12	←	duuude has quit (Ping timeout: 240 seconds)
2022-04-29 18:56:13	squid_game	I guess class makes more sense and more organized than stand-alone variables. I will take a look at enum as well. It looks similar
2022-04-29 18:56:37	←	kaiseisei has quit (Quit: kaiseisei)
2022-04-29 18:56:44	squid_game	maybe creating class as class Colors(Enum) is better?
2022-04-29 18:56:59	nullie	no, it's not better, Enums are supposed to be immutable
2022-04-29 18:57:33	squid_game	ah ok
2022-04-29 18:57:46	nullie	andi_: maybe one of its dependencies is not found?
2022-04-29 18:57:47	←	urb4nm has quit (Quit: The Lounge - https://thelounge.chat)
2022-04-29 18:57:58	→	kaiseisei has joined #python
2022-04-29 18:58:14	→	urb4nm has joined #python
2022-04-29 18:59:17	→	side_control has joined #python
2022-04-29 18:59:32	←	urb4nm has quit (Client Quit)
2022-04-29 18:59:45	andi_	nullie: maybe i just don't know what could be missing
2022-04-29 18:59:58	→	urb4nm has joined #python
2022-04-29 19:00:00	←	bob_x1 has quit (Remote host closed the connection)
2022-04-29 19:00:02	Wooble	sounds likely, since both the lowercase "c:" and space in path work for me here, which were my only 2 theories if the file itself exists.
2022-04-29 19:00:20	Wooble	andi_: maybe try running with python -v (or -vvv) and hope it tells you what it's looking for?
2022-04-29 19:00:21	→	bob_x1 has joined #python
2022-04-29 19:00:27	←	ArtfulDodger has quit (Ping timeout: 240 seconds)
2022-04-29 19:00:54	nullie	andi_: https://stackoverflow.com/questions/7378959/how-to-check-for-dll-dependency
2022-04-29 19:02:06	←	Tat has quit (Ping timeout: 250 seconds)
2022-04-29 19:02:31	←	kaiseisei has quit (Ping timeout: 256 seconds)
2022-04-29 19:03:06	→	wakeup has joined #python
2022-04-29 19:03:41	→	Vornicus has joined #python
2022-04-29 19:04:02	←	kuwv has quit (Ping timeout: 252 seconds)
2022-04-29 19:07:50	←	fbiagent has quit (Remote host closed the connection)
2022-04-29 19:07:51	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 19:09:00	←	YuGiOhJCJ has quit (Quit: YuGiOhJCJ)
2022-04-29 19:10:02	→	roxfan has joined #python
2022-04-29 19:10:05	→	Lando-SpacePimp has joined #python
2022-04-29 19:12:11	→	linux_dream has joined #python
2022-04-29 19:12:14	←	betuxy has quit (Quit: Connection closed)
2022-04-29 19:12:59	→	fbiagent has joined #python
2022-04-29 19:13:22	→	Belxjander has joined #python
2022-04-29 19:14:05	←	NotThatRPG has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-04-29 19:14:11	←	a1eaiactaest has quit (Ping timeout: 272 seconds)
2022-04-29 19:14:54	←	uvgisme has quit (Ping timeout: 246 seconds)
2022-04-29 19:14:58	→	[itchyjunk] has joined #python
2022-04-29 19:15:16	←	fbiagent has quit (Remote host closed the connection)
2022-04-29 19:15:42	→	gurkenglas has joined #python
2022-04-29 19:16:32	←	vanessa has quit (Quit: Leaving)
2022-04-29 19:16:49	→	nuclearg1 has joined #python
2022-04-29 19:17:13	→	fbiagent has joined #python
2022-04-29 19:18:01	→	giorgian` has joined #python
2022-04-29 19:19:44	andi_	okay so i tried to run python with -v and -vvv but i don't see any new hints and a dumpbin /dependents does not show any dependencies
2022-04-29 19:20:17	→	ArtfulDodger has joined #python
2022-04-29 19:20:33	andi_	sorry :/ i'm out of ideas. if you have any just let me know i'll try to google some more
2022-04-29 19:20:49	→	hotea has joined #python
2022-04-29 19:21:13	←	giorgian has quit (Ping timeout: 256 seconds)
2022-04-29 19:21:19	←	blindguard has quit (Remote host closed the connection)
2022-04-29 19:21:38	ℹ	hotea is now known as alone_dev
2022-04-29 19:21:44	→	blindguard has joined #python
2022-04-29 19:21:56	alone_dev	Hello To All :)
2022-04-29 19:22:21	←	nuclearg1 has quit (Ping timeout: 276 seconds)
2022-04-29 19:23:03	←	linux_dream has quit (Quit: WeeChat 3.5)
2022-04-29 19:25:03	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 19:25:54	→	flea has joined #python
2022-04-29 19:26:35	←	tomeaton17 has quit (Quit: Client closed)
2022-04-29 19:27:40	→	mengmari has joined #python
2022-04-29 19:28:23	→	rama has joined #python
2022-04-29 19:29:21	→	Belxjander has joined #python
2022-04-29 19:30:03	Dev0n	Hey, how backwards compatible is 3.9 with 3.7? I'm running into all sorts of issues with 3.7 on my MBP M1 and considering just upgrading to 3.9. I know I'll have to properly test things but just curious to know from a high level what I'm going to be in for.
2022-04-29 19:30:04	←	rama has quit (Remote host closed the connection)
2022-04-29 19:30:07	←	luigibu has quit (Quit: WeeChat 3.5)
2022-04-29 19:30:09	←	ArtfulDodger has quit (Ping timeout: 276 seconds)
2022-04-29 19:30:16	→	rama has joined #python
2022-04-29 19:30:17	←	admin123 has quit (Ping timeout: 256 seconds)
2022-04-29 19:31:08	→	masta`` has joined #python
2022-04-29 19:31:34	→	cth has joined #python
2022-04-29 19:31:48	nullie	andi_: have you tried dumpdin to list dll dependencies?
2022-04-29 19:31:57	→	akk has joined #python
2022-04-29 19:32:06	nullie	ah, I see
2022-04-29 19:32:46	→	mrgz has joined #python
2022-04-29 19:33:49	→	tobybl has joined #python
2022-04-29 19:33:55	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 19:34:39	bookworm	Dev0n: chanelog, read them
2022-04-29 19:34:42	rick123	What are C compatible data types? (referring to ctypes)
2022-04-29 19:34:44	bookworm	changelog*
2022-04-29 19:35:14	←	daniel-leinweber has quit (Quit: WeeChat 3.4.1)
2022-04-29 19:36:29	nedbat	Dev0n: it is unlikely you will have a problem.  there are very very few times a new version breaks something, and it's usually a small fraction of users who would be affected
2022-04-29 19:37:03	→	masta```` has joined #python
2022-04-29 19:37:11	→	cyruz has joined #python
2022-04-29 19:37:26	Dev0n	Thanks nedbat, apperciate the simple response, I just wanted to get a quick idea.
2022-04-29 19:37:36	Dev0n	bookworm ^ >.>
2022-04-29 19:37:46	→	Belxjander has joined #python
2022-04-29 19:37:51	Vornicus	I remember when 2.2 broke something for me
2022-04-29 19:38:05	Vornicus	I was using "True" as a function name for some godforsaken reason
2022-04-29 19:38:21	←	masta`` has quit (Quit: Going offline, see ya! (www.adiirc.com))
2022-04-29 19:38:23	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 19:38:28	ℹ	masta```` is now known as masta``
2022-04-29 19:38:30	←	masta`` has quit (Client Quit)
2022-04-29 19:38:58	nedbat	Vornicus: 3.7 broke anyone using "async" or "await" as a variable name.
2022-04-29 19:41:29	alone_dev	Hello to all :)
2022-04-29 19:41:54	grym	nedbat: like tensorflow :)
2022-04-29 19:41:58	SnoopJ	Dev0n, upgrading in that direction is generally pretty smooth
2022-04-29 19:42:04	←	upsala has quit (Quit: WeeChat 3.5)
2022-04-29 19:42:34	Dev0n	SnoopJ, yea, if anything, it could be certain package that might have an issue? But I'm assuming, if it works on 3.7 it'll most likely work with 3.9
2022-04-29 19:42:54	→	yupeak has joined #python
2022-04-29 19:43:37	SnoopJ	Dev0n, it's possible, but generally speaking yes, you get good forward compatibility. The biggest problem is usually "did that package release wheels for the newer version" and by now projects really should be shipping 3.9 wheels :)
2022-04-29 19:43:44	alone_dev	dear friends I have a question ... How I can find a programmer girlfriend ? can you help me about that ?
2022-04-29 19:44:24	nullie	andi_: is your os x64?
2022-04-29 19:44:30	Dev0n	SnoopJ, gotcha
2022-04-29 19:44:35	→	uvgisme has joined #python
2022-04-29 19:45:05	rick123	alone_dev: One you codes Python or PHP?
2022-04-29 19:45:06	andi_	nullie: yeah it's windows 10 x64 and a 64 bit lib
2022-04-29 19:45:34	←	rama has quit (Remote host closed the connection)
2022-04-29 19:45:46	alone_dev	python
2022-04-29 19:45:48	andi_	nullie: i tried your stack overflow link, so i used x64 of dumpbin /dependents abc.dll
2022-04-29 19:45:59	andi_	and well it's also x64 python
2022-04-29 19:46:06	nullie	yeah, I see
2022-04-29 19:46:09	nedbat	alone_dev: please don't do that here
2022-04-29 19:46:14	→	rama has joined #python
2022-04-29 19:46:16	←	EgonX has quit (Ping timeout: 260 seconds)
2022-04-29 19:46:24	andi_	nullie: if i want to load a 32 bit lib, i get the correct error too
2022-04-29 19:47:11	alone_dev	I just ask a question ....
2022-04-29 19:47:50	alone_dev	because it's very hard for me to coding all of the day while i'm living alone ...
2022-04-29 19:48:00	alone_dev	:)
2022-04-29 19:48:00	han-solo	very offtopic
2022-04-29 19:49:32	→	xrogaan has joined #python
2022-04-29 19:50:39	←	Hunterkll has quit (Read error: Connection reset by peer)
2022-04-29 19:50:41	←	rama has quit (Ping timeout: 256 seconds)
2022-04-29 19:51:09	→	Hunterkll has joined #python
2022-04-29 19:51:09	→	luva2 has joined #python
2022-04-29 19:52:03	→	Sargento has joined #python
2022-04-29 19:52:16	→	nuclearg1 has joined #python
2022-04-29 19:52:48	←	luva has quit (Ping timeout: 272 seconds)
2022-04-29 19:52:49	ℹ	luva2 is now known as luva
2022-04-29 19:54:19	←	tesuji has quit (Ping timeout: 240 seconds)
2022-04-29 19:54:55	→	kaiseisei has joined #python
2022-04-29 19:56:33	←	nuclearg1 has quit (Ping timeout: 246 seconds)
2022-04-29 19:57:23	←	gr33n7007h has quit (Quit: WeeChat 3.5)
2022-04-29 19:57:39	←	foobaz212 has quit (Quit: Client closed)
2022-04-29 19:57:54	→	foobaz212 has joined #python
2022-04-29 19:58:03	→	src has joined #python
2022-04-29 19:58:21	←	anomal has quit (Remote host closed the connection)
2022-04-29 19:58:32	←	mnemonic has quit (Quit: WeeChat 3.5)
2022-04-29 19:58:40	→	anomal has joined #python
2022-04-29 19:59:40	→	esther has joined #python
2022-04-29 19:59:42	←	PJBoy has quit (Ping timeout: 246 seconds)
2022-04-29 20:01:07	←	horner has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-29 20:01:31	→	p-i-_ has joined #python
2022-04-29 20:02:57	→	gr33n7007h has joined #python
2022-04-29 20:03:05	→	EgonX has joined #python
2022-04-29 20:04:13	←	p-i- has quit (Ping timeout: 272 seconds)
2022-04-29 20:04:51	←	giorgian` has quit (Ping timeout: 272 seconds)
2022-04-29 20:05:36	→	giorgian` has joined #python
2022-04-29 20:06:20	←	Ergo^ has quit (Remote host closed the connection)
2022-04-29 20:06:29	rick123	So using multiprocessing if I did something like this `with Pool(5) as p: p.map(fx, range(10))` then the `fx` gets called in one worker only, only when I increase it to something like range(10000), do I see the `fx` getting called across 5 pids.
2022-04-29 20:06:30	→	georgios has joined #python
2022-04-29 20:07:05	rick123	Is there any pre-defined number for this behaviour? That if the length of the iterable is less than 100 they'll all be passed to a single subprocess.
2022-04-29 20:07:15	←	uvgisme has quit (Read error: No route to host)
2022-04-29 20:07:44	←	EgonX has quit (Ping timeout: 260 seconds)
2022-04-29 20:07:48	←	chele has quit (Remote host closed the connection)
2022-04-29 20:07:49	rick123	In this code I am working on, another person has created a Pool of 5 and the datasets being used are fairly small, I don't think it makes sense in that case now.
2022-04-29 20:07:54	→	uvgisme has joined #python
2022-04-29 20:08:37	SnoopJ	rick123, I don't think the order is deterministic, but if the function is fast, the worker process may be returned to the Pool quickly enough that it's used again and again, perhaps?
2022-04-29 20:08:38	→	TheCat has joined #python
2022-04-29 20:09:22	phy1729	I think you're looking for chunksize https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool.map
2022-04-29 20:09:38	→	duuude has joined #python
2022-04-29 20:10:39	←	shad has quit (Ping timeout: 240 seconds)
2022-04-29 20:11:04	←	withered_wolf has quit (Quit: leaving)
2022-04-29 20:11:18	→	EgonX has joined #python
2022-04-29 20:12:32	rick123	phy1729: I tried setting a chunksize=1 but even then all items get passed to the same child pid
2022-04-29 20:13:00	←	anomal has quit (Remote host closed the connection)
2022-04-29 20:13:19	→	anomal has joined #python
2022-04-29 20:13:49	rick123	SnoopJ: Not sure what that means. If there's a Pool of 5 workers, intrnally it should send data to all 5 in some round robin fashion for map(). It probably does when I pass range(10000) but with range(10) or even range(100) I think all of them goes to the same child pid
2022-04-29 20:14:12	→	msk has joined #python
2022-04-29 20:15:31	→	nuclearg1 has joined #python
2022-04-29 20:17:02	→	kuwv has joined #python
2022-04-29 20:17:05	→	ebrau has joined #python
2022-04-29 20:18:08	→	funhouse has joined #python
2022-04-29 20:18:21	→	TheHermann has joined #python
2022-04-29 20:18:42	→	admin123 has joined #python
2022-04-29 20:18:48	→	bigdata has joined #python
2022-04-29 20:20:14	→	codificat has joined #python
2022-04-29 20:20:33	←	EgonX has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-29 20:21:03	←	frmlof has quit (Quit: frmlof)
2022-04-29 20:21:35	←	ebrau has quit (Client Quit)
2022-04-29 20:21:37	→	mefistofeles has joined #python
2022-04-29 20:21:46	SnoopJ	rick123, I don't think you get much in the way of guarantees about order. You may get what you're looking for from adjusting the `chunksize` parameter as phy1729 suggests, though. I don't know what the default behavior is.
2022-04-29 20:22:26	SnoopJ	evidently: `chunksize, extra = divmod(len(iterable), len(self._pool) * 4)`
2022-04-29 20:22:27	→	Belxjander has joined #python
2022-04-29 20:23:35	→	runelind_ has joined #python
2022-04-29 20:24:04	←	giorgian` has quit (Ping timeout: 260 seconds)
2022-04-29 20:24:06	←	runelind has quit (Ping timeout: 276 seconds)
2022-04-29 20:24:12	←	kaiseisei has quit (Ping timeout: 246 seconds)
2022-04-29 20:24:18	→	arcadio has joined #python
2022-04-29 20:24:39	←	duuude has quit (Remote host closed the connection)
2022-04-29 20:25:02	←	adiKt has quit (Quit: Connection closed for inactivity)
2022-04-29 20:26:06	→	rama has joined #python
2022-04-29 20:26:07	→	giorgian` has joined #python
2022-04-29 20:26:50	ℹ	runelind_ is now known as runelind
2022-04-29 20:26:52	←	nuclearg1 has quit (Ping timeout: 260 seconds)
2022-04-29 20:27:18	→	duuude has joined #python
2022-04-29 20:29:19	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 20:31:38	←	frost has quit (Quit: Client closed)
2022-04-29 20:31:43	←	dalan62 has quit (Quit: Ping timeout (120 seconds))
2022-04-29 20:31:55	→	Seto_Kaiba has joined #python
2022-04-29 20:32:30	←	giorgian` has quit (Quit: ERC 5.4 (IRC client for GNU Emacs 28.1))
2022-04-29 20:32:59	←	Hunterkll has quit (Ping timeout: 240 seconds)
2022-04-29 20:32:59	→	giorgian has joined #python
2022-04-29 20:33:13	→	dalan62 has joined #python
2022-04-29 20:33:25	→	Belxjander has joined #python
2022-04-29 20:33:29	→	siwica` has joined #python
2022-04-29 20:33:43	←	anomal has quit (Remote host closed the connection)
2022-04-29 20:34:02	→	anomal has joined #python
2022-04-29 20:34:23	→	dadofapollo has joined #python
2022-04-29 20:34:24	←	ized has quit (Remote host closed the connection)
2022-04-29 20:34:26	→	s33ker has joined #python
2022-04-29 20:34:33	←	arcadio has quit (Remote host closed the connection)
2022-04-29 20:34:59	←	siwica has quit (Ping timeout: 240 seconds)
2022-04-29 20:35:41	exarkun	Anyone build a CI ratchet to let a project incremental progress from `[mypy]check_untyped_defs = False` to `[mypy]check_untyped_defs = True`?
2022-04-29 20:36:01	AhmedAmerican	`pandas.read_html` is reading `<td>CO VLP J ZELLARS&nbsp;215 EAST NINTH STREET SUITE 200<br/>CINCINNATI OH 45202</td>` as `CO VLP J ZELLARS 215 EAST NINTH STREET SUITE 200CINCINNATI OH 45202` where `200CINCINNATI` i would like it to be `200 CINCINNATI ` is there a work around for such case ?
2022-04-29 20:36:13	s33ker	hi what is the computational complexity if you have two double nested four loops in a class ? 2*O(n)^2 ?
2022-04-29 20:36:20	s33ker	for*
2022-04-29 20:36:40	→	ttree has joined #python
2022-04-29 20:37:08	←	wakeup has quit (Quit: Client closed)
2022-04-29 20:37:23	exarkun	s33ker: Big O notation discards constants.  There isn't really a 2 * O(n^2).  It's just O(n^2).
2022-04-29 20:37:47	←	dadofapollo has left #python
2022-04-29 20:37:56	s33ker	i see it is the same class
2022-04-29 20:38:45	←	spetrosi has quit (Quit: Leaving)
2022-04-29 20:38:48	s33ker	so am i correct on this if you have for instance:    for i in N: nested for j in N.........when this finnishes another loop for i in N: nested for j in N.
2022-04-29 20:38:57	→	ahammer has joined #python
2022-04-29 20:39:03	←	mwichmann has quit (Remote host closed the connection)
2022-04-29 20:39:10	rick123	SnoopJ: Cool
2022-04-29 20:39:26	→	nuclearg1 has joined #python
2022-04-29 20:40:25	exarkun	s33ker: It's just O(n^2), yes.
2022-04-29 20:40:32	s33ker	thx
2022-04-29 20:41:18	←	rama has quit (Remote host closed the connection)
2022-04-29 20:41:28	rick123	I am going to be honest, when I google some Python concept that I want to learn about, the documentation rarely shows up. First bunch of results are these websites called w3schools, programiz, geeksforgeeks, tutorialspoints, javatpoint, etc. and their content is super bad. Not sure who is the blame here, maybe Google only?
2022-04-29 20:41:55	rick123	to be blamed*
2022-04-29 20:41:59	→	rama has joined #python
2022-04-29 20:42:03	s33ker	maybe your browser cookies and history :D
2022-04-29 20:42:39	→	mwichmann has joined #python
2022-04-29 20:42:59	rick123	Nah its the same in incognito, plus I never read these sites. I've clicked on them before just to see how good is the content, and most of the times they're bad.
2022-04-29 20:43:22	→	Atque has joined #python
2022-04-29 20:43:52	←	saroy has quit (Quit: Leaving)
2022-04-29 20:43:59	rick123	Tbh any programming related search I make, 80% of them get results from these websites. I've noticed StackOverflow has been pushed down over time which sucks.
2022-04-29 20:44:15	rick123	So now everytime I search something, I've to scroll down or go to the second page to find a documentation or SO link and then click that.
2022-04-29 20:44:30	ahammer	rick123: read the official dox
2022-04-29 20:44:48	grym	rick123: https://github.com/iorate/ublacklist
2022-04-29 20:44:49	SnoopJ	rick123, I would recommend going to docs.python.org if you want the documentation, search engines have all kinds of ulterior motives that can affect the returned results
2022-04-29 20:45:02	rick123	For Python I pretty much try to aim for the official docs and Stackoverflow yeah
2022-04-29 20:45:05	grym	handy dandy SEO plonker
2022-04-29 20:45:13	grym	rick123: i also like zeal.org for offline docs
2022-04-29 20:45:16	→	mdemo has joined #python
2022-04-29 20:45:22	←	kenaryn has quit (Quit: leaving)
2022-04-29 20:45:23	SnoopJ	There are a variety of ways to read them offline too, yea
2022-04-29 20:45:31	grym	err, zealdocs.org
2022-04-29 20:45:41	ahammer	python's official doc is great, esp. the faq part
2022-04-29 20:45:43	SnoopJ	You can also download copies from docs.python.org :)
2022-04-29 20:46:28	←	rama has quit (Ping timeout: 260 seconds)
2022-04-29 20:46:28	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 20:47:13	←	foobaz212 has quit (Quit: Client closed)
2022-04-29 20:47:21	rick123	wow zealdocs looks cool.
2022-04-29 20:47:23	→	giorgian` has joined #python
2022-04-29 20:47:23	rick123	thanks
2022-04-29 20:47:28	→	foobaz212 has joined #python
2022-04-29 20:47:41	ahammer	grym: zealdocs is great, thanks for recommending
2022-04-29 20:48:34	←	bob_x1 has quit (Ping timeout: 240 seconds)
2022-04-29 20:48:39	rick123	Seems liek for macOS its not Zeal, its Dash
2022-04-29 20:48:52	grym	rick123: yes, zeal is the oss dash fork
2022-04-29 20:49:05	Dev0n	is pip-tools still the go to tool for installing pinned versions?
2022-04-29 20:49:05	grym	dash is a little shiner but basically the same idea
2022-04-29 20:49:11	→	bob_x1 has joined #python
2022-04-29 20:49:21	AhmedAmerican	https://github.com/pandas-dev/pandas/pull/45972 looks like it's a bug !
2022-04-29 20:49:24	SnoopJ	Dev0n, it's still in use, if that's what you're asking. You can pin versions without it, though.
2022-04-29 20:50:06	←	giorgian has quit (Ping timeout: 276 seconds)
2022-04-29 20:50:42	→	frost has joined #python
2022-04-29 20:51:09	←	t0x0t has quit (Ping timeout: 246 seconds)
2022-04-29 20:51:19	←	mengmari has quit (Ping timeout: 256 seconds)
2022-04-29 20:51:27	→	Belxjander has joined #python
2022-04-29 20:51:34	grym	ahammer: np :)
2022-04-29 20:51:38	→	arcadio has joined #python
2022-04-29 20:51:42	Dev0n	SnoopJ, I've got used to the pip-compile and pip-sync flow and the rest of the devs use it to ensure consistent dev env. I was just curious if it's still "the tool" for the job.
2022-04-29 20:51:45	AhmedAmerican	within the previous bug report, they stated it's solved. i already tried to upgrade pandas but it's confirming that am using latest version. am not familiar with github, how to get the recent commit fix ?
2022-04-29 20:51:50	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-29 20:51:55	←	cyruz has left #python
2022-04-29 20:51:58	→	stats4647 has joined #python
2022-04-29 20:51:59	←	ahammer has quit (Ping timeout: 240 seconds)
2022-04-29 20:52:04	grym	Dev0n: in my experience, the singular is rarely applicable in python ...
2022-04-29 20:52:33	←	uvgisme has quit (Ping timeout: 246 seconds)
2022-04-29 20:52:33	SnoopJ	Dev0n, it's ability to generate and synchronize with spec files is still applicable, but I wouldn't call it "the" tool for this
2022-04-29 20:52:34	→	stackdroid18 has joined #python
2022-04-29 20:52:48	rick123	Alright, Looks pretty slick. I might end up paying those 30 dollars for Dash :D
2022-04-29 20:52:51	SnoopJ	its*
2022-04-29 20:53:03	←	bigdata has quit (Quit: bigdata)
2022-04-29 20:53:10	MacGyver	grym: There should be one --- and preferably only one --- obvious way to do it.
2022-04-29 20:53:17	→	t0x0t has joined #python
2022-04-29 20:53:30	rick123	It also has stackoverflow and google built in. Probably using webviews.
2022-04-29 20:53:34	SnoopJ	MacGyver, and yet.
2022-04-29 20:53:40	grym	MacGyver: should, perhaps.  Is? nooooope
2022-04-29 20:53:48	MacGyver	I can help it y'all aren't Dutch.
2022-04-29 20:53:52	MacGyver	can't*
2022-04-29 20:53:54	MacGyver	even.
2022-04-29 20:53:59	Dev0n	heh, yea, makes deciding on the "defacto" a bit difficult
2022-04-29 20:54:14	SnoopJ	Dev0n, I find it mostly helpful to treat tooling in terms of the problems it solves
2022-04-29 20:54:19	Dev0n	what would you recommend as an alt? I'm always curious to try out something better
2022-04-29 20:54:43	grym	Dev0n: oh, no, it's de facto always; what you want is de jure, but we don't have that we have "and now there are 16 standards"
2022-04-29 20:54:57	Dev0n	 xkcd
2022-04-29 20:55:00	←	dreamon has quit (Ping timeout: 246 seconds)
2022-04-29 20:55:01	grym	just uso
2022-04-29 20:55:02	SnoopJ	some people like poetry for pinning/managing versions and environments
2022-04-29 20:55:12	SnoopJ	(I wouldn't count myself as one, though)
2022-04-29 20:55:38	→	RangerBobVA has joined #python
2022-04-29 20:55:42	Dev0n	I've tried poetry but didn't seem as simple as using pyenv + pip-tools
2022-04-29 20:56:53	SnoopJ	it's generally best to just shop around, see what you like
2022-04-29 20:57:01	←	idiocrash has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-29 20:57:28	SnoopJ	there is never any shortage of dogmatic opinions about tooling :/
2022-04-29 20:57:34	→	EgonX has joined #python
2022-04-29 20:58:28	→	ahammer has joined #python
2022-04-29 20:58:51	Dev0n	yea true, I'm just having issues getting pip-compile to work with cryptic error being thrown, so was curious if I should invest more time into debugging it
2022-04-29 20:59:18	→	hans_ has joined #python
2022-04-29 20:59:42	→	mihaiadrian has joined #python
2022-04-29 21:00:13	←	x88x88x has quit (Quit: ZNC - https://znc.in)
2022-04-29 21:00:49	→	zerothule has joined #python
2022-04-29 21:01:16	→	junktext has joined #python
2022-04-29 21:01:59	→	jmiehe has joined #python
2022-04-29 21:02:32	SnoopJ	Hard to say without the rest of the problem description
2022-04-29 21:02:43	→	tesuji has joined #python
2022-04-29 21:03:06	←	ahammer has quit (Ping timeout: 272 seconds)
2022-04-29 21:03:42	→	ahammer has joined #python
2022-04-29 21:04:08	→	humanBird has joined #python
2022-04-29 21:04:34	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 21:04:48	→	bomb-on has joined #python
2022-04-29 21:04:59	←	zerothule has quit (Ping timeout: 240 seconds)
2022-04-29 21:05:49	←	anomal has quit (Remote host closed the connection)
2022-04-29 21:06:08	→	anomal has joined #python
2022-04-29 21:07:39	←	pvergain has quit (Quit: pvergain)
2022-04-29 21:08:09	←	jmiehe has quit (Quit: jmiehe)
2022-04-29 21:08:09	→	shad has joined #python
2022-04-29 21:08:28	→	Belxjander has joined #python
2022-04-29 21:08:37	Dev0n	ah sorry, wasn't asking for help on that, I've still to actually debug the problem myself but had a lazy thought to check if there was something better/newer than pip-tools :P
2022-04-29 21:09:27	←	tbcr has quit (Ping timeout: 272 seconds)
2022-04-29 21:10:43	←	ahammer has quit (Ping timeout: 272 seconds)
2022-04-29 21:14:12	←	frost has quit (Ping timeout: 252 seconds)
2022-04-29 21:14:27	→	Fiji has joined #python
2022-04-29 21:14:58	→	zer0bitz has joined #python
2022-04-29 21:15:00	bluesmonk	I'm getting the gist of poetry after my 22nd attempt
2022-04-29 21:15:27	←	ick has quit (Ping timeout: 276 seconds)
2022-04-29 21:15:45	bluesmonk	guess that's true for actual poetry too, the name makes total sense now
2022-04-29 21:16:31	→	MikZyth has joined #python
2022-04-29 21:17:38	→	rama has joined #python
2022-04-29 21:17:42	→	rhu has joined #python
2022-04-29 21:17:48	←	Strom has quit ()
2022-04-29 21:18:23	→	pacbard has joined #python
2022-04-29 21:18:55	SnoopJ	I was souring on it as a tool steadily for a while, but when I discovered the inconsistent behavior of the verbosity flag, I concluded it wasn't for me
2022-04-29 21:19:44	→	bigdata has joined #python
2022-04-29 21:19:54	Wooble	when I couldn't install its own author's other project on windows because he had a diacritic in his name, I may have formed a strong opinion.
2022-04-29 21:20:19	←	nuclearg1 has quit (Ping timeout: 240 seconds)
2022-04-29 21:20:21	→	Strom has joined #python
2022-04-29 21:20:40	←	squid_game has quit (Remote host closed the connection)
2022-04-29 21:21:12	→	ahammer has joined #python
2022-04-29 21:22:10	→	uvgisme has joined #python
2022-04-29 21:22:15	bluesmonk	I haven't reached those milestones yet. Looking forward to them!
2022-04-29 21:22:40	→	foobaz212 has joined #python
2022-04-29 21:22:46	→	nixoeen has joined #python
2022-04-29 21:22:47	←	nixoeen has quit (Changing host)
2022-04-29 21:22:47	→	nixoeen has joined #python
2022-04-29 21:23:38	bluesmonk	Wooble: what other project?
2022-04-29 21:23:39	SnoopJ	I don't want to speak too badly of it, I usually frame it as "this tool solves problems I don't have, and has some fuzzy edges that I don't like"
2022-04-29 21:23:43	→	cosimone has joined #python
2022-04-29 21:23:45	←	whaley has quit (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
2022-04-29 21:24:35	bluesmonk	yeah I usually get things done with pyenv
2022-04-29 21:25:08	SnoopJ	I'm on the other side of the spectrum with pyenv, I adore it :)
2022-04-29 21:26:45	bluesmonk	me too, it just works
2022-04-29 21:26:56	Dev0n	so no idea what's causing the pip-compile to throw like this, anyone able to decipher this traceback? https://bpa.st/FM2A
2022-04-29 21:27:10	←	dogbert2 has quit (Remote host closed the connection)
2022-04-29 21:27:18	Dev0n	this is python 3.9.11, latest pip-tools
2022-04-29 21:27:26	→	dogbert2 has joined #python
2022-04-29 21:27:30	→	masta`` has joined #python
2022-04-29 21:27:35	←	rvalue has quit (Read error: Connection reset by peer)
2022-04-29 21:27:37	Dev0n	if this is happening on pip-compile, I'm assuming it's unrelated to any deps I have and an issue with pip-tools itself?
2022-04-29 21:27:46	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-29 21:27:48	→	rvalue has joined #python
2022-04-29 21:27:49	←	nixoeen has quit (Ping timeout: 272 seconds)
2022-04-29 21:27:56	→	greedom has joined #python
2022-04-29 21:28:16	←	vicfred has quit (Quit: Leaving)
2022-04-29 21:29:14	Dev0n	pip freeze only has: click==8.1.3, pep517==0.12.0, pip-tools==6.6.0 and tomli==2.0.1
2022-04-29 21:29:32	guardian	bah I just got bitten by the fact that [[]] * n reuses the same empty list for "each slot"
2022-04-29 21:30:17	grym	guardian: yep!  happens every once in a while
2022-04-29 21:30:17	SnoopJ	guardian, it sometimes helps to think about containers as containing references to values rather than the values themselves
2022-04-29 21:30:25	guardian	what's the name of this * operation so that I can learn more?
2022-04-29 21:30:31	grym	guardian: multiplication
2022-04-29 21:30:43	←	tobybl has quit (Remote host closed the connection)
2022-04-29 21:30:47	SnoopJ	I don't think it has a special name in this context. The spelling that "works" is `[[] for _ in range(n)]`
2022-04-29 21:30:48	grym	(you want [[] for _ in range(n)] )
2022-04-29 21:30:53	→	nixoeen has joined #python
2022-04-29 21:30:53	←	nixoeen has quit (Changing host)
2022-04-29 21:30:53	→	nixoeen has joined #python
2022-04-29 21:31:03	←	akk has quit (Ping timeout: 246 seconds)
2022-04-29 21:32:00	←	ahammer has quit (Ping timeout: 248 seconds)
2022-04-29 21:32:08	guardian	yeah
2022-04-29 21:32:14	guardian	thanks
2022-04-29 21:32:38	←	rama has quit (Remote host closed the connection)
2022-04-29 21:33:22	→	rama has joined #python
2022-04-29 21:33:36	→	ahammer has joined #python
2022-04-29 21:35:11	←	RangerBobVA has quit (Quit: Leaving)
2022-04-29 21:36:49	←	LuksNuke has quit (Quit: Leaving)
2022-04-29 21:37:38	→	LuksNuke has joined #python
2022-04-29 21:37:41	←	rama has quit (Ping timeout: 250 seconds)
2022-04-29 21:38:05	←	greedom has quit (Remote host closed the connection)
2022-04-29 21:38:20	→	rama has joined #python
2022-04-29 21:38:53	→	greedom has joined #python
2022-04-29 21:38:53	←	rama has quit (Read error: Connection reset by peer)
2022-04-29 21:39:11	→	rama has joined #python
2022-04-29 21:39:43	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 21:40:09	←	CrypticSquared has quit (Ping timeout: 246 seconds)
2022-04-29 21:40:10	→	frmlof has joined #python
2022-04-29 21:41:27	←	yupeak has quit (Ping timeout: 276 seconds)
2022-04-29 21:42:44	←	bigdata has quit (Quit: bigdata)
2022-04-29 21:43:27	←	rama has quit (Ping timeout: 240 seconds)
2022-04-29 21:43:33	→	Belxjander has joined #python
2022-04-29 21:47:49	←	qlixed has quit (Remote host closed the connection)
2022-04-29 21:48:08	rick123	https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future.result - Since this call actually "blocks", can this be truly called async?
2022-04-29 21:48:18	rick123	this = Futures in Pyhton
2022-04-29 21:48:30	←	ahammer has quit (Remote host closed the connection)
2022-04-29 21:49:15	ℹ	dcaro is now known as dcaro_away
2022-04-29 21:49:35	exarkun	rick123: did you find a formal definition of "async" in the python docs somewhere?
2022-04-29 21:49:49	exarkun	if not, against what are you evaluating this definition?
2022-04-29 21:49:53	→	qlixed has joined #python
2022-04-29 21:49:58	→	hmmmm has joined #python
2022-04-29 21:50:12	exarkun	er against what definition are you evaluating this question
2022-04-29 21:50:32	→	vlado1 has joined #python
2022-04-29 21:50:40	→	nuclearg1 has joined #python
2022-04-29 21:51:17	hmmmm	hi, what is the "Namespace" object in python 2.7.17?  this is returned by argparse.ArgumentParser.parse_args() but I can't find any information about it online.  searching for "python namespace" just results in a bunch of noobie basic tutorials on variable/object scope
2022-04-29 21:51:45	rick123	exarkun: I guess I am comparing it to the Nodejs/JavaScript world :)
2022-04-29 21:52:26	rick123	Where you would do executor.submit(callback/fn); any code that follows will continue to get executed and the callback will be executed in the end (end of main script execution).
2022-04-29 21:52:31	←	stats4647 has quit (Ping timeout: 256 seconds)
2022-04-29 21:52:40	rick123	Maybe both approaches are fine, don't know. But the async world is more used to the JS way I guess.
2022-04-29 21:53:01	SnoopJ	hmmmm, it's a "Simple object for storing attributes."  Basically a dumb container that lets you get names out of it with dot notation.
2022-04-29 21:53:09	←	qlixed has quit (Remote host closed the connection)
2022-04-29 21:53:18	hmmmm	am I able to create a Namespace container on my own?
2022-04-29 21:53:41	←	vantage has quit (Read error: Connection reset by peer)
2022-04-29 21:53:52	exarkun	rick123: You don't have to ask for the result of a future.  You can run other code.
2022-04-29 21:53:56	SnoopJ	hmmmm, yep, e.g.: `from argparse import Namespace; my_namespace = Namespace(foo=42)`
2022-04-29 21:54:02	exarkun	rick123: Futures are kind of crummy though, you might be better off just ignoring them.
2022-04-29 21:54:10	hmmmm	ahhh true i can just import argparse
2022-04-29 21:54:16	hmmmm	let me try this, thanks
2022-04-29 21:54:51	SnoopJ	it's not particularly common to do this, the only case I can think of is if you're writing some code for extending argparse
2022-04-29 21:54:59	←	nuclearg1 has quit (Ping timeout: 240 seconds)
2022-04-29 21:55:00	hmmmm	oh, hey.  is there any way i can "inject" an argument string into parser?
2022-04-29 21:55:08	hmmmm	no, it's not common at all
2022-04-29 21:55:16	→	zeenk has joined #python
2022-04-29 21:55:22	SnoopJ	you can add_argument() to an ArgumentParser instance, if that answers your question
2022-04-29 21:55:53	hmmmm	was worried this channel would ask "why are you doing that???" and hyper-fixate on me trying to work around somebody else's bug in the dll hosting the interpreter rather than helping
2022-04-29 21:56:00	←	bluesmonk has quit (Ping timeout: 260 seconds)
2022-04-29 21:56:19	←	mefistofeles has quit (Ping timeout: 240 seconds)
2022-04-29 21:56:41	SnoopJ	Always a risk when asking questions in software spaces, heh.
2022-04-29 21:56:42	hmmmm	that's the opposite of what i want
2022-04-29 21:57:18	hmmmm	basically i want to trick argparse into believing that the program was executed with an arg string of like... "--foobar 5 --asdf="dfgfg""
2022-04-29 21:57:25	→	d3sync has joined #python
2022-04-29 21:57:48	hmmmm	actually i don't even know if that'll work.  but it's an idea
2022-04-29 21:57:59	Flash	my_args = sys.argv[:]
2022-04-29 21:58:00	SnoopJ	Sounds like you may want to do `existing_namespace.asdf = "dfgfg"`
2022-04-29 21:58:11	SnoopJ	(Namespace lets you shove new stuff into it, too)
2022-04-29 21:58:17	hmmmm	maybe
2022-04-29 21:58:17	Flash	my args += ["-foobar", "5"]
2022-04-29 21:58:25	rick123	exarkun: yeah hehe
2022-04-29 21:58:29	hmmmm	but i can't execute argparse.ArgumentParser() at all
2022-04-29 21:58:30	nedbat	hmmmm: argparse can parse any list of strings you want
2022-04-29 21:58:39	hmmmm	that's what causes the instability
2022-04-29 21:58:56	hmmmm	so i have to replicate the results of the parsing as best as i can to not break other stuff
2022-04-29 21:59:11	SnoopJ	hmmmm, perhaps you can make this question more concrete for us. It's hard to tell what answers are best when we don't know the shape of the problem you're working in.
2022-04-29 21:59:20	hmmmm	lol
2022-04-29 21:59:29	SnoopJ	?
2022-04-29 21:59:43	→	foobaz212 has joined #python
2022-04-29 21:59:44	←	srji has quit (Quit: leaving)
2022-04-29 21:59:57	→	qlixed has joined #python
2022-04-29 22:00:09	hmmmm	my script that i'm working on (not my own code) is getting executed by a native code thing and i've tracked down the weird state it gets stuck in to after an ArgumentParser object gets created
2022-04-29 22:00:49	→	FluffyMask has joined #python
2022-04-29 22:00:50	hmmmm	by weird state i mean, blows a segfault that gets caught, and then the next time it happens the thing freezes on me
2022-04-29 22:00:52	→	aco has joined #python
2022-04-29 22:01:04	hmmmm	so i'm just trying to add my own stuff while avoiding the argument parser altogether
2022-04-29 22:01:52	nedbat	hmmmm: i don't mean to discourage you, but it's likely not specific to ArgumentParser. it could be a problem with any list or string operation
2022-04-29 22:02:01	→	shibboleth has joined #python
2022-04-29 22:02:04	hmmmm	yeah i get it
2022-04-29 22:02:05	→	Narrat has joined #python
2022-04-29 22:02:20	hmmmm	if i make it a tiny but farther in execution i'll be able to narrow it down a bit more
2022-04-29 22:02:36	hmmmm	would be nice to have the source and/or the thing executing the script to not be broken in the first place tho
2022-04-29 22:03:23	Flash	and you don't have control of the code instantiating ArgumentParser?'
2022-04-29 22:03:41	SnoopJ	I can't see the full problem, but it sounds like there are two options: 1) replace the ArgumentParser with your own before parse_args() is called (invasive, but tidy)  2) shove arguments into the resulting Namespace after parse_args() but before usage (less invasive, but messier)
2022-04-29 22:04:04	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-29 22:04:21	hmmmm	i'll have better answers for you guys in a bit.  trying stuff
2022-04-29 22:05:30	←	Atque has quit (Remote host closed the connection)
2022-04-29 22:05:39	hmmmm	yeah weird, if i insert a sys.exit(0) just after the ArgumentParser object gets created it works 5 out of 6 times before falling into the strange state
2022-04-29 22:05:42	SnoopJ	nedbat, the pytest annotations that you discovered (mentioned in Łukasz's keynote) are a real doozy.
2022-04-29 22:06:09	nedbat	SnoopJ: yeah, i didn't realize i was going to be outed as a complainer! :)
2022-04-29 22:06:12	hmmmm	honestly it's probably not argparse at all.  but something it uses
2022-04-29 22:06:21	hmmmm	not looking good tbh
2022-04-29 22:06:25	→	Atque has joined #python
2022-04-29 22:06:25	hmmmm	eugh
2022-04-29 22:06:26	←	drogas has quit (Quit: Connection closed)
2022-04-29 22:07:02	SnoopJ	nedbat, if I'm not mistaken, the "use modern syntax" approach would involve making pytest incompatible with extant interpreters (but it looks like pytest has a compatible solution well enough in-hand)
2022-04-29 22:07:15	←	JaredCE has quit (Ping timeout: 256 seconds)
2022-04-29 22:08:13	hmmmm	my boss is probably gonna say "why don't you just ignore the constantly-crashes-all-the-time after running the script once for now?"  :)
2022-04-29 22:08:18	nedbat	SnoopJ: what do you mean by use modern syntax?
2022-04-29 22:09:20	SnoopJ	nedbat, I may have misunderstood his remarks about fixing it but I got the sense that the modern spelling of a Union (`T | U`) was a big part of it
2022-04-29 22:09:38	→	nuclearg1 has joined #python
2022-04-29 22:10:01	SnoopJ	while I'm all for the new syntax, it's not always an option if you're still supporting versions that don't have it, and pytest probably qualifies as a limiting case of that
2022-04-29 22:10:12	←	han-solo has quit (Ping timeout: 240 seconds)
2022-04-29 22:13:11	→	leha2 has joined #python
2022-04-29 22:13:13	→	JaredCE has joined #python
2022-04-29 22:13:50	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 22:13:59	←	nuclearg1 has quit (Ping timeout: 240 seconds)
2022-04-29 22:14:40	→	kickingvegas has joined #python
2022-04-29 22:15:03	→	han-solo has joined #python
2022-04-29 22:15:18	←	uvgisme has quit (Ping timeout: 272 seconds)
2022-04-29 22:16:45	→	foobaz212 has joined #python
2022-04-29 22:17:09	→	varaindemian has joined #python
2022-04-29 22:17:09	→	Akuli has joined #python
2022-04-29 22:17:49	Akuli	is it possible to set SO_KEEPALIVE with asyncio.start_server()? i can pass in my custom socket but i like how it by default creates both ipv4 and ipv6 sockets for me
2022-04-29 22:18:19	leha2	You are smart enough to use asyncio?
2022-04-29 22:18:21	leha2	Wow
2022-04-29 22:18:28	←	JaredCE has quit (Ping timeout: 272 seconds)
2022-04-29 22:18:52	←	MikZyth has quit (Quit: WeeChat 3.5)
2022-04-29 22:19:03	→	powftw has joined #python
2022-04-29 22:19:05	Akuli	yeah, it has gotten a lot better than it was in python 3.5 times
2022-04-29 22:19:31	→	Belxjander has joined #python
2022-04-29 22:19:41	Akuli	now it's relatively easy to use, except when it abstracts away something that i want to control, like creating sockets... :)
2022-04-29 22:19:49	patiencezero	Was this learned just by reading through the docs, or did you have some additional resources to learn how to use it?
2022-04-29 22:19:50	leha2	I'm too dumb to figure all of this out
2022-04-29 22:20:06	Akuli	i have used curio in the past
2022-04-29 22:20:17	leha2	All of the tutorials use fancy words I don't understand lol
2022-04-29 22:20:18	Akuli	and modern asyncio looks a lot like curio actually, there's curio.run() and asyncio.run() for example
2022-04-29 22:20:43	Akuli	i also think it's helpful if you know javascript's async first, i find it simpler but useful for learning python's async
2022-04-29 22:21:09	leha2	Ew js
2022-04-29 22:21:18	Akuli	i know, but async really makes more sense in js
2022-04-29 22:21:25	←	chilversc has quit (Ping timeout: 256 seconds)
2022-04-29 22:22:47	→	filename has joined #python
2022-04-29 22:22:58	←	kektagen has quit (Quit: Bouncer going down...)
2022-04-29 22:23:20	patiencezero	I have a backup script that hashes every file before uploading. It gets super slow because the hashing operation takes a minute. I'm thinking of using asyncio to hash the next file to be uploaded while uploading the current file.
2022-04-29 22:23:22	→	upsala has joined #python
2022-04-29 22:23:33	←	rje has quit (Ping timeout: 272 seconds)
2022-04-29 22:23:54	phy1729	Could use multiprocessing since I'd assume each file can be done in parallel
2022-04-29 22:23:56	Akuli	asyncio won't help, because it only splits tasks into small pieces and runs them "concurrently" by executing one piece from each task at a time
2022-04-29 22:24:05	han-solo	Akuli: is it possible to set the keep alive on the sockets in the `server.sockets` ?
2022-04-29 22:24:07	Akuli	multiprocessing is much better for that, separate process means you get to use separate cpu
2022-04-29 22:24:15	Akuli	han-solo: yeah i just noticed there's that attribute, trying that now
2022-04-29 22:24:21	←	nixoeen has quit (Ping timeout: 276 seconds)
2022-04-29 22:24:28	←	s8548a__ has quit (Ping timeout: 250 seconds)
2022-04-29 22:25:18	Akuli	han-solo: looking at strace it sets the keepalive after calling listen(), so i'm not sure if it actually works... but let's see
2022-04-29 22:25:30	patiencezero	I'd use multiprocessing and then have some kind of job pool or queue?
2022-04-29 22:25:37	Akuli	unfortunately i have no better way of testing this than running a script on production server that keeps disconnecting without the keep-alive :D
2022-04-29 22:25:49	han-solo	':)
2022-04-29 22:26:06	→	onichomp has joined #python
2022-04-29 22:26:18	←	mrwick has quit (Ping timeout: 276 seconds)
2022-04-29 22:26:24	←	kostkon_ has quit (Ping timeout: 248 seconds)
2022-04-29 22:26:27	→	tapiray has joined #python
2022-04-29 22:27:01	→	mnabid has joined #python
2022-04-29 22:28:17	patiencezero	The other thing I need to do is factor my code in such a way to where I have a single open() syscall. Right now I have three separate open() calls for a single file and I suspect that this is slowing me down for backups where that's many 1KB< files -- since the files takes less time to read than open. The hashing stuff is the bigger fish to fry right now though.
2022-04-29 22:29:28	←	onichomp has quit (Read error: Connection reset by peer)
2022-04-29 22:29:39	←	mtk has quit (Remote host closed the connection)
2022-04-29 22:29:46	Akuli	leha2: in this project, i started with threads but i switched to async when i realized i couldn't figure out how to avoid race conditions
2022-04-29 22:30:06	→	onichomp has joined #python
2022-04-29 22:30:15	Akuli	i added a lock and littered my code using "with lock:" everywhere, it was just messy and i still wasn't sure if it was correct
2022-04-29 22:30:26	Akuli	with asyncio i know it's correct, and i don't even need the lock
2022-04-29 22:30:58	←	onichomp has quit (Read error: Connection reset by peer)
2022-04-29 22:31:37	→	onichomp has joined #python
2022-04-29 22:31:42	→	zerothule has joined #python
2022-04-29 22:31:44	→	JamesB192 has joined #python
2022-04-29 22:32:07	→	MikZyth has joined #python
2022-04-29 22:32:17	→	junktext_ has joined #python
2022-04-29 22:32:48	←	Lando-SpacePimp has quit (Ping timeout: 276 seconds)
2022-04-29 22:33:10	←	JamesB192 has left #python (http://quassel-irc.org - Chat comfortably. Anywhere.)
2022-04-29 22:33:20	←	Kanjizai has quit (Ping timeout: 260 seconds)
2022-04-29 22:33:46	→	mtk has joined #python
2022-04-29 22:33:52	←	junktext has quit (Ping timeout: 248 seconds)
2022-04-29 22:34:31	→	ArtfulDodger has joined #python
2022-04-29 22:34:44	←	ArtfulDodger has quit (Remote host closed the connection)
2022-04-29 22:36:32	←	masta`` has quit (Quit: Going offline, see ya! (www.adiirc.com))
2022-04-29 22:36:39	←	Merinorus has quit (Ping timeout: 240 seconds)
2022-04-29 22:36:39	→	bigdata has joined #python
2022-04-29 22:36:45	supakeen	patiencezero: You have a usecase which does not particularly benefit from an asynchronous approach. A threadpool would likely fare better.
2022-04-29 22:36:49	←	msk has quit (Quit: msk)
2022-04-29 22:37:01	→	Merinorus has joined #python
2022-04-29 22:37:05	supakeen	If you are spending a lot of time in `open(2)` and hashing at least 🙂
2022-04-29 22:37:23	←	s33ker has quit (Quit: Client closed)
2022-04-29 22:37:24	←	carl- has quit (Quit: Leaving)
2022-04-29 22:37:29	←	schumaml has quit (Ping timeout: 272 seconds)
2022-04-29 22:37:31	←	kosh has quit (Ping timeout: 260 seconds)
2022-04-29 22:38:26	←	anomal has quit (Remote host closed the connection)
2022-04-29 22:38:40	→	anomal has joined #python
2022-04-29 22:39:20	←	MikZyth has quit (Quit: WeeChat 3.5)
2022-04-29 22:39:41	rick123	How does python implement inter process communication in the multiprocessing module? Does it do it via tmp files?
2022-04-29 22:39:49	patiencezero	Gotcha, thanks everyone for the suggestions.
2022-04-29 22:39:54	→	CykloTronic86 has joined #python
2022-04-29 22:40:24	→	kts has joined #python
2022-04-29 22:40:24	←	humanBird has quit (Quit: Client closed)
2022-04-29 22:40:43	←	filename has quit (Remote host closed the connection)
2022-04-29 22:41:17	bjs	rick123: pipes/unix sockets
2022-04-29 22:41:24	→	twomoon has joined #python
2022-04-29 22:41:59	→	chilversc has joined #python
2022-04-29 22:42:02	rick123	bjs: When the documentation says the returned values should be picklable objects, its because these can be transferred over unix sockets?
2022-04-29 22:42:12	←	BUSY has quit (Ping timeout: 260 seconds)
2022-04-29 22:42:27	bjs	rick123: well no matter what kind of IPI you end up choosing (files, sockets, flashing LED lights out the window ...) the thing you send is bytes
2022-04-29 22:42:39	bjs	pickle is the protocol multiprocessing uses to turn Python objects into bytes and back again
2022-04-29 22:42:47	bjs	IPC* sorry
2022-04-29 22:42:55	→	filename has joined #python
2022-04-29 22:43:19	→	nuclearg1 has joined #python
2022-04-29 22:43:19	←	jpn_ has quit (Ping timeout: 240 seconds)
2022-04-29 22:43:25	rick123	What kin dof objects cannot turn into pickles? Asking because the docs keep mentioning make sure the values are picklable objects.
2022-04-29 22:43:57	han-solo	Akuli: it seems one could `start_serving=False`, then set the opts, and then run the server, which will then listen ?
2022-04-29 22:44:05	exarkun	rick123: for example, functions
2022-04-29 22:44:10	→	MikZyth has joined #python
2022-04-29 22:44:11	Akuli	nice! will try if it has to be set before listen()
2022-04-29 22:44:20	exarkun	rick123: it's more "what kind can be" than "what kind can't be"
2022-04-29 22:44:30	patiencezero	all this talk about pickles is making me hungry for a sandwich
2022-04-29 22:44:32	←	aco has quit (Ping timeout: 260 seconds)
2022-04-29 22:44:32	exarkun	rick123: builtin types and sufficiently simple user-defined classes
2022-04-29 22:44:54	rick123	okay
2022-04-29 22:44:55	bjs	exarkun: pickle can pickle top-level functions (by pickling to their fully-qualified name), but e.g. no `lambda` functions
2022-04-29 22:45:03	exarkun	bjs: eh yea I just checked, I see they work now
2022-04-29 22:45:04	←	anomal has quit (Remote host closed the connection)
2022-04-29 22:45:12	exarkun	my bad
2022-04-29 22:45:12	→	aco has joined #python
2022-04-29 22:45:20	→	Kanjizai has joined #python
2022-04-29 22:45:23	→	anomal has joined #python
2022-04-29 22:45:23	←	cp-- has quit (Quit: Disappeared in a puff of smoke)
2022-04-29 22:45:30	→	mefistofeles has joined #python
2022-04-29 22:45:43	exarkun	rick123: if you stick to "values" then you'll be in good shape
2022-04-29 22:45:52	bjs	rick123: but generally pickle cannot pickle "some" built-in objects (e.g. some functions, threading stuff like Locks and i'm sure plenty of others) but tries to do "something" with most of the usual types, and tries to do "something" with classes that contain those things
2022-04-29 22:45:58	→	rje has joined #python
2022-04-29 22:46:16	→	cp- has joined #python
2022-04-29 22:46:36	rick123	Alrighty :)
2022-04-29 22:46:46	←	CykloTronic86 has quit (Quit: Leaving)
2022-04-29 22:46:55	rick123	Thanks a bunch for explaining everything. Been a good day understanding multithreading and multiprocessing in Python.
2022-04-29 22:47:44	←	stackdroid18 has quit (Quit: hasta la vista... tchau!)
2022-04-29 22:47:47	←	nuclearg1 has quit (Ping timeout: 240 seconds)
2022-04-29 22:47:55	←	leha2 has quit (Quit: WeeChat 2.8)
2022-04-29 22:48:13	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 22:48:59	→	s33ker has joined #python
2022-04-29 22:49:06	s33ker	'np.arccos(np.sin(phi[i])*np.sin(phi[j]) + np.cos(phi[i])*np.cos(phi[j])*np.cos(abs(theta[i] - theta[j])))'   i get an angle of 2.99999996 where it is suppose be 3 how do i get rid of this rounding errors ?
2022-04-29 22:50:08	hop	build a better computer?
2022-04-29 22:50:08	←	rindolf has quit (Read error: Connection reset by peer)
2022-04-29 22:50:38	←	kuwv has quit (Ping timeout: 252 seconds)
2022-04-29 22:50:53	←	SirScott has quit (Quit: The Lounge - https://thelounge.chat)
2022-04-29 22:51:04	←	admin123 has quit (Ping timeout: 260 seconds)
2022-04-29 22:51:22	→	SirScott has joined #python
2022-04-29 22:51:27	s33ker	hehe no for real do i have to round after each sin and cos to a spacific degit or ?
2022-04-29 22:51:28	Repiphany	Learn to live with the quirks of floating points
2022-04-29 22:51:33	←	gr33n7007h has quit (Ping timeout: 246 seconds)
2022-04-29 22:52:17	s33ker	Repiphany :D  ok but it is hard :D
2022-04-29 22:52:24	SnoopJ	yes, it is
2022-04-29 22:52:29	→	Belxjander has joined #python
2022-04-29 22:52:41	hop	s33ker: you might be able to minimize the error by rearrenging the order of operations, but without knowing the specifics, who can say
2022-04-29 22:52:45	Repiphany	Why do you need the answer to be exactly 3
2022-04-29 22:53:43	←	Fiji has quit (Ping timeout: 256 seconds)
2022-04-29 22:53:46	hop	seems to me 2.99999996 is close enough, anyway
2022-04-29 22:54:05	Wooble	it's all fun and games until you end up trying to take the arccos of 1.0000<epsilon>
2022-04-29 22:54:26	patiencezero	Rounding errors are difficult: https://www-users.cse.umn.edu/~arnold/disasters/Patriot-dharan-skeel-siam.pdf
2022-04-29 22:54:34	patiencezero	or, I should say floats are difficult
2022-04-29 22:54:36	→	gr33n7007h has joined #python
2022-04-29 22:54:37	SnoopJ	numpy does offer some higher-precision float dtypes, for whatever that's worth
2022-04-29 22:54:39	s33ker	Well i dont you are right but if i use this is it possible it will propagate and give me wrong result how much impact could this cause ?
2022-04-29 22:55:07	Wooble	depends on the application.
2022-04-29 22:55:09	⚡	octav1a floats in a pool of quicksand
2022-04-29 22:55:10	hop	ain't that the truth
2022-04-29 22:55:13	SnoopJ	s33ker, yes, loss of precision is in general possible with floating-point operations. If you're sensitive to it (in dense numerics), you'll need to take it into account.
2022-04-29 22:55:34	→	theprophet has joined #python
2022-04-29 22:56:02	patiencezero	a small error can result in a much larger one after chained calculations. you may be able to slip but if it's for anything critical, need to check your propagation of error and make sure it stays within acceptable bounds
2022-04-29 22:56:32	s33ker	thx guys
2022-04-29 22:58:09	←	ice9 has quit (Ping timeout: 276 seconds)
2022-04-29 22:59:27	←	parv has quit (Quit: parv)
2022-04-29 22:59:50	←	rhu has quit (Remote host closed the connection)
2022-04-29 23:00:22	←	filename has quit (Remote host closed the connection)
2022-04-29 23:00:24	←	codificat has quit (Quit: zZzZ)
2022-04-29 23:01:18	←	MikZyth has quit (Quit: WeeChat 3.5)
2022-04-29 23:01:39	←	white2 has quit (Ping timeout: 240 seconds)
2022-04-29 23:02:03	→	Cache_Money has joined #python
2022-04-29 23:02:24	←	funhouse has quit (Quit: Client closed)
2022-04-29 23:02:59	→	mugwort has joined #python
2022-04-29 23:03:06	→	kostkon_ has joined #python
2022-04-29 23:05:46	→	dreamon has joined #python
2022-04-29 23:05:59	←	giorgian` has quit (Ping timeout: 240 seconds)
2022-04-29 23:07:38	→	filename has joined #python
2022-04-29 23:08:04	→	jpn has joined #python
2022-04-29 23:08:23	←	theprophet has quit (Quit: Client closed)
2022-04-29 23:08:54	←	georgios has quit (Quit: My mom said I should quit)
2022-04-29 23:09:33	→	BUSY has joined #python
2022-04-29 23:10:09	←	mugwort has quit (Quit: Client closed)
2022-04-29 23:12:09	←	dogbert2 has quit (Ping timeout: 250 seconds)
2022-04-29 23:14:06	→	Vonter has joined #python
2022-04-29 23:16:36	→	theprophet has joined #python
2022-04-29 23:17:00	←	mexen has quit (Quit: Connection closed for inactivity)
2022-04-29 23:17:18	theprophet	Is there a any web-server written with python?
2022-04-29 23:17:41	SnoopJ	theprophet, there are a few
2022-04-29 23:17:59	theprophet	name one please
2022-04-29 23:18:12	←	jim has quit (Quit: Leaving)
2022-04-29 23:18:25	exarkun	here's some, https://wiki.python.org/moin/WebServers
2022-04-29 23:18:41	SnoopJ	in no particular order: Starlette, gunicorn, uvicorn, Flask, http.server
2022-04-29 23:18:59	←	vdamewood has quit (Quit: Life beckons)
2022-04-29 23:19:10	SnoopJ	(well, I guess Starlette/Flask are a little misleading there, they are frameworks that incidentally contain servers)
2022-04-29 23:19:18	theprophet	SnoopJ i tought gunicorn was a WSGI not a  server? and FLASK?
2022-04-29 23:19:22	theprophet	SnoopJ
2022-04-29 23:19:29	theprophet	exarkun thank you.
2022-04-29 23:19:51	theprophet	SnoopJ wait flask is a framework? no?
2022-04-29 23:19:52	exarkun	The "W" in "WSGI" is for "web"
2022-04-29 23:19:57	SnoopJ	theprophet, WSGI stands for "Web Server Gateway Interface"
2022-04-29 23:20:06	exarkun	Did you mean HTTP/X.Y specifically?
2022-04-29 23:20:09	theprophet	yea getaway interface
2022-04-29 23:20:14	←	Hanii has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-04-29 23:20:18	theprophet	right?
2022-04-29 23:20:22	theprophet	yea HTTP
2022-04-29 23:20:23	exarkun	I like "getaway" interface.
2022-04-29 23:20:30	theprophet	like nginx
2022-04-29 23:20:47	←	henbruas has quit (Quit: ZNC 1.8.2 - https://znc.in)
2022-04-29 23:20:51	SnoopJ	theprophet, many HTTP servers implement WSGI, because it's an interface for handing control way from the "web server" part to the "application" part (the Python you wrote that is reachable via the server)
2022-04-29 23:20:51	→	MikZyth has joined #python
2022-04-29 23:21:02	ChrisWarrick	theprophet: the typical way to do stuff is to use nginx, which reverse-proxies to a wsgi server, like uwsgi or gunicorn
2022-04-29 23:21:05	SnoopJ	Many WSGI implementations contain (frequently rudimentary) web servers for development purposes.
2022-04-29 23:21:06	→	henbruas has joined #python
2022-04-29 23:21:18	theprophet	yea i know all that
2022-04-29 23:21:22	theprophet	thanks guys
2022-04-29 23:21:24	→	jim has joined #python
2022-04-29 23:21:26	←	s33ker has quit (Ping timeout: 252 seconds)
2022-04-29 23:21:52	theprophet	but i was wondering if there is anything similar to nginx written purely in python
2022-04-29 23:22:06	←	beli6147 has quit (Quit: beli6147)
2022-04-29 23:22:12	exarkun	Some of the things on the wiki page I linked to are that.
2022-04-29 23:22:18	theprophet	i see
2022-04-29 23:22:24	theprophet	ok
2022-04-29 23:22:55	←	foobaz212 has quit (Quit: Client closed)
2022-04-29 23:23:08	ChrisWarrick	theprophet: similar to nginx in what regard?
2022-04-29 23:23:09	→	foobaz212 has joined #python
2022-04-29 23:23:25	theprophet	ChrisWarrick come on now
2022-04-29 23:23:25	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 23:23:37	ChrisWarrick	?
2022-04-29 23:24:01	theprophet	ChrisWarrick i mean what nginx does for applications
2022-04-29 23:24:11	theprophet	and with requests and respones and all that stuf
2022-04-29 23:24:16	→	humbertowoody has joined #python
2022-04-29 23:24:19	←	aco has quit (Ping timeout: 256 seconds)
2022-04-29 23:25:30	theprophet	SnoopJ hey, why did you said Flask? is not flask a framework?
2022-04-29 23:25:35	supakeen	Well, that's not a very clear description.
2022-04-29 23:25:45	SnoopJ	theprophet, it is a framework that (as I said) contains a rudimentary web server.
2022-04-29 23:26:02	theprophet	like django does? WSGI -ASGI?
2022-04-29 23:26:02	SnoopJ	https://flask.palletsprojects.com/en/2.0.x/server/
2022-04-29 23:26:19	SnoopJ	err, https://flask.palletsprojects.com/en/2.1.x/server/ is the up-to-date link
2022-04-29 23:26:19	→	julie_pilgrim has joined #python
2022-04-29 23:27:19	Flash	out of curiosity, why does it matter what a tool is written in?
2022-04-29 23:27:19	←	shad has quit (Ping timeout: 240 seconds)
2022-04-29 23:27:31	→	Belxjander has joined #python
2022-04-29 23:27:40	←	foobaz212 has quit (Ping timeout: 252 seconds)
2022-04-29 23:28:05	←	theprophet has quit (Quit: Client closed)
2022-04-29 23:28:43	ChrisWarrick	Flash: it might be easier to extend a tool written in a language you’re familiar with (but would you do that with a web server?)
2022-04-29 23:28:49	→	ras_manny has joined #python
2022-04-29 23:28:49	SnoopJ	Flash, language features constrain the things you're able to express in the language
2022-04-29 23:29:04	SnoopJ	(I can't speak for the original asker, though)
2022-04-29 23:29:17	→	zamanf_ has joined #python
2022-04-29 23:29:24	←	jpn has quit (Ping timeout: 272 seconds)
2022-04-29 23:29:30	→	Abhigbos2020 has joined #python
2022-04-29 23:29:48	Flash	tool != language. A web server (written in Python or sanskrit) has a set of features. Unless you are planning to modify the web server source
2022-04-29 23:29:52	→	theprophet has joined #python
2022-04-29 23:30:42	←	MajorBiscuit has quit (Quit: WeeChat 3.4)
2022-04-29 23:30:46	Flash	but I think in concrete tasking, not academic exercises, so one might want to go there
2022-04-29 23:31:12	←	iomari891 has quit (Ping timeout: 260 seconds)
2022-04-29 23:31:42	SnoopJ	Flash, in concrete terms, a language that makes non-blocking IO a pain might not be a good choice for a web server, for instance.
2022-04-29 23:32:06	←	duuude has quit (Read error: Connection reset by peer)
2022-04-29 23:32:11	→	giorgian` has joined #python
2022-04-29 23:32:15	Flash	but that would be evident externally, independent of its implementation language
2022-04-29 23:32:16	→	duuude has joined #python
2022-04-29 23:32:19	←	Cache_Money has quit (Quit: Client closed)
2022-04-29 23:32:24	SnoopJ	Not independent, no.
2022-04-29 23:33:22	←	PublicWiFi has quit (Ping timeout: 250 seconds)
2022-04-29 23:33:48	←	zerothule has quit (Ping timeout: 240 seconds)
2022-04-29 23:33:50	Flash	the original question was "is there a web server like nginx written in python?" to which I ask, why should you care what it's written in?
2022-04-29 23:33:51	←	dev__ has quit (Ping timeout: 272 seconds)
2022-04-29 23:33:51	←	Celelibi has quit (Ping timeout: 272 seconds)
2022-04-29 23:33:58	←	demophoon4 has quit (Read error: Connection reset by peer)
2022-04-29 23:34:03	Flash	nginx is popular because it works (has desirable features)
2022-04-29 23:34:09	SnoopJ	I attempted to give one possible answer, but it seems to be going poorly.
2022-04-29 23:34:19	→	Roey has joined #python
2022-04-29 23:34:29	Flash	can I write a web server in python as good as nginx is a more interesting question
2022-04-29 23:34:50	Flash	and for that, your language features line is very appropriate
2022-04-29 23:34:52	→	Gustavo6046 has joined #python
2022-04-29 23:34:59	→	kosh has joined #python
2022-04-29 23:36:19	→	demophoon4 has joined #python
2022-04-29 23:36:24	exarkun	I agree.  Software becomes popular because it works.  This is why we don't have to deal with popular, broken software.
2022-04-29 23:36:56	←	onichomp has quit (Read error: Connection reset by peer)
2022-04-29 23:37:16	←	giorgian` has quit (Ping timeout: 250 seconds)
2022-04-29 23:37:34	→	onichomp has joined #python
2022-04-29 23:37:46	←	duuude has quit (Remote host closed the connection)
2022-04-29 23:38:05	→	zerothule has joined #python
2022-04-29 23:39:59	←	xkuru has quit (Ping timeout: 240 seconds)
2022-04-29 23:40:16	ztrawhcse	can you write a web server as good as nginx regardless of language is the better question
2022-04-29 23:40:35	ztrawhcse	the person doing the writing generally matters more than the language
2022-04-29 23:40:36	hmmmm	what's wrong with python -m SimpleHTTPServer?
2022-04-29 23:41:01	SnoopJ	hmmmm, it is as the name suggests quite simple. This might qualify it for being the "wrong" tool for many applications.
2022-04-29 23:41:12	ztrawhcse	well, for starters nginx has a lot of features.
2022-04-29 23:41:21	octav1a	# python -m ComplicatedHTTPServer
2022-04-29 23:41:28	←	alone_dev has quit (Quit: Konversation terminated!)
2022-04-29 23:41:31	octav1a	solved
2022-04-29 23:41:37	→	foobaz212 has joined #python
2022-04-29 23:41:53	hmmmm	SnoopJ nothing that a little "import" can't fix
2022-04-29 23:41:56	→	Celelibi has joined #python
2022-04-29 23:42:22	SnoopJ	hmmmm, I don't understand; are you talking about writing your own server, or extending the existing one?
2022-04-29 23:42:35	hmmmm	I'm kidding around
2022-04-29 23:42:43	←	anomal has quit (Remote host closed the connection)
2022-04-29 23:43:02	→	anomal has joined #python
2022-04-29 23:43:05	→	paul424 has joined #python
2022-04-29 23:43:15	←	julie_pilgrim has quit (Remote host closed the connection)
2022-04-29 23:43:20	→	iomari891 has joined #python
2022-04-29 23:43:37	→	choffman has joined #python
2022-04-29 23:43:40	hmmmm	with python, coding feels like cheating because 99% of the work gets accomplished by importing some other package
2022-04-29 23:43:53	Flash	done any java?
2022-04-29 23:44:03	←	Y4knotiS has quit (Ping timeout: 246 seconds)
2022-04-29 23:44:07	hmmmm	a little.  i know it's similar in that regard.
2022-04-29 23:44:40	Flash	except java sucks
2022-04-29 23:44:47	←	choffman has quit (Client Quit)
2022-04-29 23:44:52	→	duuude has joined #python
2022-04-29 23:44:56	Flash	but yes, it's all about the libraries
2022-04-29 23:45:09	SnoopJ	...many of which are themselves written in Python :)
2022-04-29 23:45:27	hmmmm	for better or worse :D
2022-04-29 23:45:32	←	tapiray has quit (Quit: Client closed)
2022-04-29 23:45:56	⚡	SnoopJ tends towards "for better"
2022-04-29 23:45:58	Flash	never write for yourself what you can leverage from others. That's why the rich library ecosystem is important to productivity
2022-04-29 23:46:08	←	zeenk has quit (Quit: Konversation terminated!)
2022-04-29 23:46:15	Flash	you just aren't that smart
2022-04-29 23:46:19	→	xkuru has joined #python
2022-04-29 23:46:21	←	ano has quit (Quit: ano)
2022-04-29 23:46:31	exarkun	yes.  if you need to pad a string on the left, just use a library for it.
2022-04-29 23:46:33	Flash	but every CS student wants to write a new/better list or string or ...
2022-04-29 23:46:59	→	PublicWiFi has joined #python
2022-04-29 23:47:00	hmmmm	python has a dirty inelegant feeling to it though
2022-04-29 23:47:07	SnoopJ	hmmmm, in what way?
2022-04-29 23:47:10	exarkun	hmmmm: python doesn't have feelings.  people do.
2022-04-29 23:47:12	hmmmm	the typing system
2022-04-29 23:47:23	hmmmm	i know about python 3.7 types
2022-04-29 23:47:35	exarkun	python 3.7 types are largely the same as python types have ever been.
2022-04-29 23:47:40	SnoopJ	hmmmm, are you talking about type annotations?
2022-04-29 23:47:41	hmmmm	but they're not actually enforced or anything, more like a suggestion, and the checker i used seemed buggy
2022-04-29 23:47:56	hmmmm	yeah, type annotations
2022-04-29 23:48:17	theprophet	hmmmm if you dont like, using libraries in python, you can reinvent the wheel. no problem. dont call it cheating lol.
2022-04-29 23:48:27	hmmmm	oh no it's definitely cheating
2022-04-29 23:48:29	hmmmm	and i love it
2022-04-29 23:48:31	theprophet	python lets you do that.
2022-04-29 23:49:10	SnoopJ	Today's PyCon keynote expressed a notion I'm very partial to: type annotations can serve as a form of documentation, too
2022-04-29 23:49:40	←	jokoon has quit (Quit: Leaving)
2022-04-29 23:49:50	SnoopJ	tools that consume the annotations are a pretty rapidly-developing subject, though. If it's been a while, you might want to have another look.
2022-04-29 23:50:16	hmmmm	maybe!  the last large scale project i did i ended up going with C++
2022-04-29 23:50:19	→	tapiray has joined #python
2022-04-29 23:50:22	hmmmm	don't ask
2022-04-29 23:50:45	⚡	SnoopJ works on a team that uses both
2022-04-29 23:50:49	hmmmm	next time i have something similar, that's larger but mostly consists of business logic
2022-04-29 23:50:51	→	JaredCE has joined #python
2022-04-29 23:51:29	Flash	I'm mostly C++ in my daily work. I'm back into python for a web back-end
2022-04-29 23:53:16	theprophet	SnoopJ how come everytime i am googling  , whats the difference between gunicorn and nginx it says everything but the fact that , they are both web-servers?
2022-04-29 23:53:21	←	arcadio has quit (Remote host closed the connection)
2022-04-29 23:53:29	→	whatsupdoc has joined #python
2022-04-29 23:54:00	SnoopJ	theprophet, gunicorn is built with WSGI heavily in mind, it is a smaller amount of the problem domain for nginx.
2022-04-29 23:54:25	→	jmd has joined #python
2022-04-29 23:54:28	←	jmd has quit (Remote host closed the connection)
2022-04-29 23:54:59	theprophet	SnoopJ i see, so do you confirm that they are both web-servers?
2022-04-29 23:55:00	→	jmd has joined #python
2022-04-29 23:55:27	←	bim9262 has quit (Ping timeout: 240 seconds)
2022-04-29 23:56:00	←	JaredCE has quit (Ping timeout: 276 seconds)
2022-04-29 23:56:17	→	jpn has joined #python
2022-04-29 23:56:24	theprophet	you dont ok
2022-04-29 23:56:41	SnoopJ	theprophet, they are both web servers, yes
2022-04-29 23:56:46	theprophet	aha
2022-04-29 23:57:12	SnoopJ	One of them is built to do pretty much exclusively WSGI, one of them is built to do more stuff.
2022-04-29 23:57:33	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-29 23:58:32	←	Abhigbos2020 has quit (Ping timeout: 272 seconds)
2022-04-29 23:58:56	theprophet	SnoopJ i've read 4-5 hour worth information about both gunicorn and nginx , and the fact that they are both web-servers was never mentioned. heck, even if you google that you'll need a microscope to find it.
2022-04-29 23:59:25	SnoopJ	theprophet, the very first sentence on gunicorn.org is "Gunicorn 'Green Unicorn' is a Python WSGI HTTP Server for UNIX" which I think makes this pretty clear?
2022-04-29 23:59:34	←	tapiray has quit (Quit: Client closed)
2022-04-30 00:00:32	theprophet	yea it says WSGI HHTP SERVER FOR UNIX seperataly about gunicorn.
2022-04-30 00:00:44	theprophet	i was searching for GUNICORN VS WSGI
2022-04-30 00:00:46	theprophet	differences
2022-04-30 00:00:59	←	pydev1 has quit (Ping timeout: 240 seconds)
2022-04-30 00:01:07	theprophet	i mean
2022-04-30 00:01:14	theprophet	GUNICORN VS NGINX
2022-04-30 00:01:20	←	sprout has quit (Ping timeout: 248 seconds)
2022-04-30 00:01:33	→	aco has joined #python
2022-04-30 00:01:38	→	Belxjander has joined #python
2022-04-30 00:02:58	→	ano has joined #python
2022-04-30 00:03:58	←	han-solo has quit (Quit: leaving)
2022-04-30 00:05:28	SnoopJ	theprophet, do you agree that an HTTP server is a web server?
2022-04-30 00:05:40	theprophet	SnoopJ i just set up gunicorn and nginx for my project in django.  http://213.157.200.228
2022-04-30 00:05:45	←	jpn has quit (Ping timeout: 276 seconds)
2022-04-30 00:06:05	theprophet	SnoopJ HTTP server needs a web server ?
2022-04-30 00:06:11	theprophet	no?
2022-04-30 00:06:19	SnoopJ	theprophet, okay, then I have no idea what "web server" means to you.
2022-04-30 00:06:44	theprophet	the word says web-server
2022-04-30 00:06:47	←	iomari891 has quit (Ping timeout: 272 seconds)
2022-04-30 00:07:09	←	brentaarnold has quit (Read error: Connection reset by peer)
2022-04-30 00:07:15	Wooble	theprophet: nginx is usually used as a reverse proxy in front of a less-hardened application server, but they're both serving http(s) over the web.
2022-04-30 00:08:02	←	kts has quit (Quit: Konversation terminated!)
2022-04-30 00:08:04	SnoopJ	right, there's no reason a web server can't talk to another web server
2022-04-30 00:08:05	→	brentaarnold has joined #python
2022-04-30 00:08:42	Wooble	the reason gunicorn and uwsgi tell you to put nginx in front of them is they don't want to deal with all that crap.
2022-04-30 00:09:03	theprophet	what crap?:D
2022-04-30 00:09:06	MacGyver	And the reason I do it is because even if they did want to deal with that crap I don't trust them to.
2022-04-30 00:09:22	MacGyver	theprophet: Actually writing a semblance of secure webserver software.
2022-04-30 00:09:38	theprophet	aha
2022-04-30 00:09:59	←	vulpes_vulpes has quit (Remote host closed the connection)
2022-04-30 00:10:01	→	julie_pilgrim has joined #python
2022-04-30 00:10:03	theprophet	lol :D
2022-04-30 00:10:16	SnoopJ	uwsgi is complicated since it defines a protocol unto itself
2022-04-30 00:10:34	Wooble	theprophet: notably it scales well and have some built in ddos protection
2022-04-30 00:10:36	SnoopJ	you might use your user-facing web server for load-balancing, for instance.
2022-04-30 00:10:54	theprophet	MacGyver so if gunicorn had semblence secure webserver nginx would not be needed?
2022-04-30 00:11:12	SnoopJ	put another way: something like gunicorn is written to do what it's written to do, and not more than that. servers like nginx do a lot more things and if you want them, you generally use them and proxy to another.
2022-04-30 00:11:28	→	giorgian` has joined #python
2022-04-30 00:11:31	theprophet	got it
2022-04-30 00:12:13	→	kektagen has joined #python
2022-04-30 00:13:45	←	aco has quit (Ping timeout: 272 seconds)
2022-04-30 00:14:02	→	pvergain has joined #python
2022-04-30 00:14:53	←	pvergain has quit (Client Quit)
2022-04-30 00:15:18	←	foobaz212 has quit (Quit: Client closed)
2022-04-30 00:15:58	←	hans_ has quit (Quit: Connection closed for inactivity)
2022-04-30 00:16:04	→	sandb0y has joined #python
2022-04-30 00:16:19	←	mihaiadrian has quit (Quit: mihaiadrian)
2022-04-30 00:16:41	←	jmd has quit (Remote host closed the connection)
2022-04-30 00:16:56	←	Fieldy has quit (Changing host)
2022-04-30 00:16:56	→	Fieldy has joined #python
2022-04-30 00:17:28	→	sokan_ has joined #python
2022-04-30 00:17:33	←	giorgian` has quit (Ping timeout: 272 seconds)
2022-04-30 00:17:53	←	sokan has quit (Ping timeout: 248 seconds)
2022-04-30 00:18:11	ℹ	sokan_ is now known as sokan
2022-04-30 00:19:39	←	mefistofeles has quit (Ping timeout: 240 seconds)
2022-04-30 00:20:45	→	marderII1 has joined #python
2022-04-30 00:21:26	→	giorgian` has joined #python
2022-04-30 00:21:43	←	giorgian` has quit (Remote host closed the connection)
2022-04-30 00:22:01	→	giorgian has joined #python
2022-04-30 00:23:13	→	Ruptile has joined #python
2022-04-30 00:23:54	→	Wh0 has joined #python
2022-04-30 00:25:11	←	Ruptile has left #python
2022-04-30 00:25:43	→	nuclearg1 has joined #python
2022-04-30 00:25:44	→	shad has joined #python
2022-04-30 00:25:51	←	paul424 has quit (Quit: Leaving)
2022-04-30 00:27:34	←	zaquest has quit (Remote host closed the connection)
2022-04-30 00:27:41	←	javaaaaaaaaaa has quit (Read error: Connection reset by peer)
2022-04-30 00:30:15	←	nuclearg1 has quit (Ping timeout: 246 seconds)
2022-04-30 00:31:20	→	jpn has joined #python
2022-04-30 00:31:50	→	ketiv has joined #python
2022-04-30 00:32:06	←	Belxjander has quit (Read error: Connection reset by peer)
2022-04-30 00:32:18	←	AquaL1te has quit (Ping timeout: 250 seconds)
2022-04-30 00:32:31	←	sudomann has quit (Read error: Connection reset by peer)
2022-04-30 00:32:57	←	Deneb has quit (Quit: Leaving)
2022-04-30 00:33:34	→	Belxjander has joined #python
2022-04-30 00:33:45	ketiv	Hello World
2022-04-30 00:34:13	→	AquaL1te has joined #python
2022-04-30 00:34:20	←	demophoon4 has quit (Read error: Connection reset by peer)
2022-04-30 00:34:25	→	iomari891 has joined #python
2022-04-30 00:34:33	→	jazzy has joined #python
2022-04-30 00:34:34	←	jpds has quit (Ping timeout: 240 seconds)
2022-04-30 00:34:49	→	tWqaq has joined #python
2022-04-30 00:34:59	←	Sasazuka has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-30 00:35:08	←	theprophet has quit (Ping timeout: 252 seconds)
2022-04-30 00:35:57	←	gusto has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-04-30 00:36:17	SnoopJ	hello ketiv
2022-04-30 00:36:41	→	demophoon4 has joined #python
2022-04-30 00:36:57	→	boB_K7IQ has joined #python
2022-04-30 00:36:58	ketiv	Hello Snoop, Stay Happy & Keep Coding :-)
2022-04-30 00:37:01	→	arcadio has joined #python
2022-04-30 00:37:13	→	jpds has joined #python
2022-04-30 00:37:32	Wooble	what, at the same time?
2022-04-30 00:38:30	←	arcadio has quit (Remote host closed the connection)
2022-04-30 00:39:29	←	marderII1 has quit (Quit: leaving)
2022-04-30 00:40:00	SnoopJ	hehe
2022-04-30 00:40:13	→	Abhigbos2020 has joined #python
2022-04-30 00:41:01	←	shad has quit (Quit: WeeChat 3.0)
2022-04-30 00:41:26	←	marderIII has quit (Quit: leaving)
2022-04-30 00:41:53	→	tapiray has joined #python
2022-04-30 00:42:01	←	Wh0 has quit (Quit: Leaving)
2022-04-30 00:42:13	→	wakeup has joined #python
2022-04-30 00:42:15	→	sprout has joined #python
2022-04-30 00:43:34	→	jstein has joined #python
2022-04-30 00:46:55	←	EvilDMP has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2022-04-30 00:48:06	→	dubs has joined #python
2022-04-30 00:48:27	←	iomari891 has quit (Ping timeout: 240 seconds)
2022-04-30 00:50:32	→	withered_wolf has joined #python
2022-04-30 00:52:08	→	Sasazuka has joined #python
2022-04-30 00:52:32	→	magla has joined #python
2022-04-30 00:52:44	←	jpn has quit (Quit: Lost terminal)
2022-04-30 00:52:50	←	Sasazuka has quit (Client Quit)
2022-04-30 00:53:39	←	ideopathic has quit (Quit: Textual IRC Client: www.textualapp.com)
2022-04-30 00:54:15	←	ketiv has quit (Quit: WeeChat 3.3)
2022-04-30 00:55:02	→	Fiji has joined #python
2022-04-30 00:56:12	→	Deneb has joined #python
2022-04-30 00:57:13	←	dubs has quit (Quit: ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
2022-04-30 00:57:37	→	gfvante has joined #python
2022-04-30 00:58:05	←	remote has quit (Ping timeout: 272 seconds)
2022-04-30 00:59:01	←	greedom has quit (Remote host closed the connection)
2022-04-30 00:59:40	→	remote has joined #python
2022-04-30 01:00:36	←	Deneb has quit (Client Quit)
2022-04-30 01:00:59	←	julie_pilgrim has quit (Remote host closed the connection)
2022-04-30 01:01:44	←	MikZyth has quit (Quit: WeeChat 3.5)
2022-04-30 01:02:13	→	Fiji_ has joined #python
2022-04-30 01:02:15	→	EvilDMP has joined #python
2022-04-30 01:02:59	←	side_control has quit (Ping timeout: 240 seconds)
2022-04-30 01:03:32	→	ideopathic has joined #python
2022-04-30 01:03:36	←	Abhigbos2020 has quit (Ping timeout: 276 seconds)
2022-04-30 01:04:54	←	Fiji has quit (Ping timeout: 276 seconds)
2022-04-30 01:06:27	ℹ	irc: disconnected from server
